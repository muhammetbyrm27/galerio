{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// function VehiclesPage() {\n//   const [form, setForm] = useState({\n//     brand: '',\n//     model: '',\n//     year: '',\n//     color: '',\n//     gear: '',\n//     fuel: '',\n//     mileage: '',\n//     damage: '',\n//     purchase_price: '',\n//     sale_price: '',\n//     description: ''\n//   });\n\n//   const [vehicles, setVehicles] = useState([]);\n//   const [message, setMessage] = useState('');\n// const [editId, setEditId] = useState(null);\n//   const fetchVehicles = async () => {\n//     try {\n//       const res = await axios.get('http://localhost:5000/api/vehicles');\n//       setVehicles(res.data);\n//     } catch (err) {\n//       console.error('Araçlar alınamadı', err);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const payload = {\n//       ...form,\n//       year: parseInt(form.year),\n//       mileage: parseInt(form.mileage),\n//       purchase_price: parseFloat(form.purchase_price),\n//       sale_price: parseFloat(form.sale_price)\n\n//     };\n// const handleDelete = async (id) => {\n//   if (!window.confirm('Bu aracı silmek istediğinize emin misiniz?')) return;\n//   try {\n//     await axios.delete(`http://localhost:5000/api/vehicles/${id}`);\n//     fetchVehicles();\n//   } catch (err) {\n//     console.error('Silme hatası:', err);\n//   }\n// };\n// const handleEdit = (vehicle) => {\n//   setForm({\n//     brand: vehicle.brand,\n//     model: vehicle.model,\n//     year: vehicle.year,\n//     color: vehicle.color,\n//     gear: vehicle.gear,\n//     fuel: vehicle.fuel,\n//     mileage: vehicle.mileage,\n//     purchase_price: vehicle.purchase_price,\n//     sale_price: vehicle.sale_price,\n//     description: vehicle.description\n//   });\n//   setEditId(vehicle.id);\n\n// };\n// if (editId) {\n//   // Güncelleme işlemi\n//   try {\n//     await axios.put(`http://localhost:5000/api/vehicles/${editId}`, payload);\n//     setMessage('Araç başarıyla güncellendi.');\n//     setEditId(null);\n//   } catch (err) {\n//     console.error('Güncelleme hatası:', err);\n//     setMessage('Araç güncellenirken hata oluştu.');\n//   }\n// } else {\n//   // Yeni araç ekleme işlemi\n//   try {\n//     await axios.post('http://localhost:5000/api/vehicles', payload);\n//     setMessage('Araç başarıyla eklendi.');\n//   } catch (err) {\n//     console.error(err);\n//     setMessage('Araç eklenirken hata oluştu.');\n//   }\n// }\n\n// // Formu temizle\n// setForm({\n//   brand: '',\n//   model: '',\n//   year: '',\n//   color: '',\n//   gear: '',\n//   fuel: '',\n//   mileage: '',\n//   purchase_price: '',\n//   sale_price: '',\n//   description: ''\n// });\n// fetchVehicles();\n\n//     try {\n//       await axios.post('http://localhost:5000/api/vehicles', payload);\n//       setMessage('Araç başarıyla eklendi.');\n//       setForm({\n//         brand: '',\n//         model: '',\n//         year: '',\n//         color: '',\n//         gear: '',\n//         fuel: '',\n//         mileage: '',\n\n//         purchase_price: '',\n//         sale_price: '',\n//         description: ''\n//       });\n//       fetchVehicles();\n//     } catch (err) {\n//       console.error(err);\n//       setMessage('Araç eklenirken hata oluştu.');\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchVehicles();\n//   }, []);\n\n//   return (\n//     <div style={{ padding: '2rem', maxWidth: '1000px', margin: 'auto' }}>\n//       <h2>Araç Kayıt</h2>\n//      <form onSubmit={handleSubmit} style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '16px', marginBottom: '2rem' }}>\n//   <input placeholder=\"Marka\" style={{ width: '100%', padding: '8px' }} value={form.brand} onChange={(e) => setForm({ ...form, brand: e.target.value })} required />\n//   <input placeholder=\"Model\" style={{ width: '100%', padding: '8px' }} value={form.model} onChange={(e) => setForm({ ...form, model: e.target.value })} required />\n//   <input placeholder=\"Yıl\" type=\"number\" style={{ width: '100%', padding: '8px' }} value={form.year} onChange={(e) => setForm({ ...form, year: e.target.value })} required />\n//   <input placeholder=\"Renk\" style={{ width: '100%', padding: '8px' }} value={form.color} onChange={(e) => setForm({ ...form, color: e.target.value })} />\n//   <input placeholder=\"Vites\" style={{ width: '100%', padding: '8px' }} value={form.gear} onChange={(e) => setForm({ ...form, gear: e.target.value })} />\n//   <input placeholder=\"Yakıt\" style={{ width: '100%', padding: '8px' }} value={form.fuel} onChange={(e) => setForm({ ...form, fuel: e.target.value })} />\n//   <input placeholder=\"Kilometre\" type=\"number\" style={{ width: '100%', padding: '8px' }} value={form.mileage} onChange={(e) => setForm({ ...form, mileage: e.target.value })} />\n//   <input placeholder=\"Alış Fiyatı\" type=\"number\" style={{ width: '100%', padding: '8px' }} value={form.purchase_price} onChange={(e) => setForm({ ...form, purchase_price: e.target.value })} />\n//   <input placeholder=\"Satış Fiyatı\" type=\"number\" style={{ width: '100%', padding: '8px' }} value={form.sale_price} onChange={(e) => setForm({ ...form, sale_price: e.target.value })} />\n\n//   <textarea\n//     placeholder=\"Açıklama\"\n//     style={{ gridColumn: 'span 3', padding: '8px', height: '80px' }}\n//     value={form.description}\n//     onChange={(e) => setForm({ ...form, description: e.target.value })}\n//   ></textarea>\n//   <button type=\"submit\" style={{ gridColumn: 'span 3', padding: '10px', fontWeight: 'bold' }}>Araç Ekle</button>\n// </form>\n\n//       {message && <p>{message}</p>}\n\n//       <h3>Kayıtlı Araçlar</h3>\n//       <table border=\"1\" cellPadding=\"10\" style={{ width: '100%', borderCollapse: 'collapse' }}>\n//         <thead>\n//           <tr>\n//             <th>Marka</th><th>Model</th><th>Yıl</th><th>Renk</th><th>Vites</th><th>Yakıt</th>\n//             <th>KM</th><th>Alış</th><th>Satış</th><th>Açıklama</th><th>İşlemler</th>\n\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {vehicles.map(vehicle => (\n//             <tr key={vehicle.id}>\n//               <td>{vehicle.brand}</td>\n//               <td>{vehicle.model}</td>\n//               <td>{vehicle.year}</td>\n//               <td>{vehicle.color}</td>\n//               <td>{vehicle.gear}</td>\n//               <td>{vehicle.fuel}</td>\n//               <td>{vehicle.mileage}</td>\n//               <td>{vehicle.purchase_price} ₺</td>\n//               <td>{vehicle.sale_price} ₺</td>\n\n//               <td>{vehicle.description}</td>\n//               <td>\n//   <button onClick={() => handleEdit(vehicle)}>Düzenle</button>\n//   <button onClick={() => handleDelete(vehicle.id)} style={{ marginLeft: '8px', color: 'red' }}>Sil</button>\n// </td>\n\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default VehiclesPage;","map":{"version":3,"names":[],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/VehiclesPage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function VehiclesPage() {\r\n//   const [form, setForm] = useState({\r\n//     brand: '',\r\n//     model: '',\r\n//     year: '',\r\n//     color: '',\r\n//     gear: '',\r\n//     fuel: '',\r\n//     mileage: '',\r\n//     damage: '',\r\n//     purchase_price: '',\r\n//     sale_price: '',\r\n//     description: ''\r\n//   });\r\n\r\n//   const [vehicles, setVehicles] = useState([]);\r\n//   const [message, setMessage] = useState('');\r\n// const [editId, setEditId] = useState(null);\r\n//   const fetchVehicles = async () => {\r\n//     try {\r\n//       const res = await axios.get('http://localhost:5000/api/vehicles');\r\n//       setVehicles(res.data);\r\n//     } catch (err) {\r\n//       console.error('Araçlar alınamadı', err);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const payload = {\r\n//       ...form,\r\n//       year: parseInt(form.year),\r\n//       mileage: parseInt(form.mileage),\r\n//       purchase_price: parseFloat(form.purchase_price),\r\n//       sale_price: parseFloat(form.sale_price)\r\n      \r\n//     };\r\n// const handleDelete = async (id) => {\r\n//   if (!window.confirm('Bu aracı silmek istediğinize emin misiniz?')) return;\r\n//   try {\r\n//     await axios.delete(`http://localhost:5000/api/vehicles/${id}`);\r\n//     fetchVehicles();\r\n//   } catch (err) {\r\n//     console.error('Silme hatası:', err);\r\n//   }\r\n// };\r\n// const handleEdit = (vehicle) => {\r\n//   setForm({\r\n//     brand: vehicle.brand,\r\n//     model: vehicle.model,\r\n//     year: vehicle.year,\r\n//     color: vehicle.color,\r\n//     gear: vehicle.gear,\r\n//     fuel: vehicle.fuel,\r\n//     mileage: vehicle.mileage,\r\n//     purchase_price: vehicle.purchase_price,\r\n//     sale_price: vehicle.sale_price,\r\n//     description: vehicle.description\r\n//   });\r\n//   setEditId(vehicle.id);\r\n\r\n// };\r\n// if (editId) {\r\n//   // Güncelleme işlemi\r\n//   try {\r\n//     await axios.put(`http://localhost:5000/api/vehicles/${editId}`, payload);\r\n//     setMessage('Araç başarıyla güncellendi.');\r\n//     setEditId(null);\r\n//   } catch (err) {\r\n//     console.error('Güncelleme hatası:', err);\r\n//     setMessage('Araç güncellenirken hata oluştu.');\r\n//   }\r\n// } else {\r\n//   // Yeni araç ekleme işlemi\r\n//   try {\r\n//     await axios.post('http://localhost:5000/api/vehicles', payload);\r\n//     setMessage('Araç başarıyla eklendi.');\r\n//   } catch (err) {\r\n//     console.error(err);\r\n//     setMessage('Araç eklenirken hata oluştu.');\r\n//   }\r\n// }\r\n\r\n// // Formu temizle\r\n// setForm({\r\n//   brand: '',\r\n//   model: '',\r\n//   year: '',\r\n//   color: '',\r\n//   gear: '',\r\n//   fuel: '',\r\n//   mileage: '',\r\n//   purchase_price: '',\r\n//   sale_price: '',\r\n//   description: ''\r\n// });\r\n// fetchVehicles();\r\n\r\n//     try {\r\n//       await axios.post('http://localhost:5000/api/vehicles', payload);\r\n//       setMessage('Araç başarıyla eklendi.');\r\n//       setForm({\r\n//         brand: '',\r\n//         model: '',\r\n//         year: '',\r\n//         color: '',\r\n//         gear: '',\r\n//         fuel: '',\r\n//         mileage: '',\r\n        \r\n//         purchase_price: '',\r\n//         sale_price: '',\r\n//         description: ''\r\n//       });\r\n//       fetchVehicles();\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       setMessage('Araç eklenirken hata oluştu.');\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchVehicles();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div style={{ padding: '2rem', maxWidth: '1000px', margin: 'auto' }}>\r\n//       <h2>Araç Kayıt</h2>\r\n//      <form onSubmit={handleSubmit} style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '16px', marginBottom: '2rem' }}>\r\n//   <input placeholder=\"Marka\" style={{ width: '100%', padding: '8px' }} value={form.brand} onChange={(e) => setForm({ ...form, brand: e.target.value })} required />\r\n//   <input placeholder=\"Model\" style={{ width: '100%', padding: '8px' }} value={form.model} onChange={(e) => setForm({ ...form, model: e.target.value })} required />\r\n//   <input placeholder=\"Yıl\" type=\"number\" style={{ width: '100%', padding: '8px' }} value={form.year} onChange={(e) => setForm({ ...form, year: e.target.value })} required />\r\n//   <input placeholder=\"Renk\" style={{ width: '100%', padding: '8px' }} value={form.color} onChange={(e) => setForm({ ...form, color: e.target.value })} />\r\n//   <input placeholder=\"Vites\" style={{ width: '100%', padding: '8px' }} value={form.gear} onChange={(e) => setForm({ ...form, gear: e.target.value })} />\r\n//   <input placeholder=\"Yakıt\" style={{ width: '100%', padding: '8px' }} value={form.fuel} onChange={(e) => setForm({ ...form, fuel: e.target.value })} />\r\n//   <input placeholder=\"Kilometre\" type=\"number\" style={{ width: '100%', padding: '8px' }} value={form.mileage} onChange={(e) => setForm({ ...form, mileage: e.target.value })} />\r\n//   <input placeholder=\"Alış Fiyatı\" type=\"number\" style={{ width: '100%', padding: '8px' }} value={form.purchase_price} onChange={(e) => setForm({ ...form, purchase_price: e.target.value })} />\r\n//   <input placeholder=\"Satış Fiyatı\" type=\"number\" style={{ width: '100%', padding: '8px' }} value={form.sale_price} onChange={(e) => setForm({ ...form, sale_price: e.target.value })} />\r\n  \r\n//   <textarea\r\n//     placeholder=\"Açıklama\"\r\n//     style={{ gridColumn: 'span 3', padding: '8px', height: '80px' }}\r\n//     value={form.description}\r\n//     onChange={(e) => setForm({ ...form, description: e.target.value })}\r\n//   ></textarea>\r\n//   <button type=\"submit\" style={{ gridColumn: 'span 3', padding: '10px', fontWeight: 'bold' }}>Araç Ekle</button>\r\n// </form>\r\n\r\n//       {message && <p>{message}</p>}\r\n\r\n//       <h3>Kayıtlı Araçlar</h3>\r\n//       <table border=\"1\" cellPadding=\"10\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Marka</th><th>Model</th><th>Yıl</th><th>Renk</th><th>Vites</th><th>Yakıt</th>\r\n//             <th>KM</th><th>Alış</th><th>Satış</th><th>Açıklama</th><th>İşlemler</th>\r\n\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {vehicles.map(vehicle => (\r\n//             <tr key={vehicle.id}>\r\n//               <td>{vehicle.brand}</td>\r\n//               <td>{vehicle.model}</td>\r\n//               <td>{vehicle.year}</td>\r\n//               <td>{vehicle.color}</td>\r\n//               <td>{vehicle.gear}</td>\r\n//               <td>{vehicle.fuel}</td>\r\n//               <td>{vehicle.mileage}</td>\r\n//               <td>{vehicle.purchase_price} ₺</td>\r\n//               <td>{vehicle.sale_price} ₺</td>\r\n             \r\n//               <td>{vehicle.description}</td>\r\n//               <td>\r\n//   <button onClick={() => handleEdit(vehicle)}>Düzenle</button>\r\n//   <button onClick={() => handleDelete(vehicle.id)} style={{ marginLeft: '8px', color: 'red' }}>Sil</button>\r\n// </td>\r\n\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default VehiclesPage;\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}