{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\MessagesPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import AdminChatBox from './AdminChatBox';\n// import './MessagesPage.css';\n\n// function MessagesPage() {\n//   const [conversations, setConversations] = useState([]);\n//   const [selectedConversation, setSelectedConversation] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchConversations = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await axios.get('http://localhost:5000/api/conversations', {\n//           headers: { 'Authorization': `Bearer ${token}` }\n//         });\n//         setConversations(response.data);\n//       } catch (error) {\n//         console.error(\"Konuşmalar yüklenemedi:\", error);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n//     fetchConversations();\n//   }, []);\n\n//   if (isLoading) return <div className=\"loading-container\">Gelen Kutusu Yükleniyor...</div>;\n\n//   return (\n//     <div className=\"messages-page-container\">\n//       <div className=\"conversations-list\">\n//         <div className=\"list-header\">\n//           <h2>Gelen Kutusu</h2>\n//         </div>\n//         <div className=\"list-content\">\n//           {conversations.length === 0 ? (\n//             <p className=\"no-messages\">Hiç mesajınız yok.</p>\n//           ) : (\n//             conversations.map(convo => (\n//               <div \n//                 key={convo.conversation_id} \n//                 className={`conversation-item ${selectedConversation?.conversation_id === convo.conversation_id ? 'active' : ''}`}\n//                 onClick={() => setSelectedConversation(convo)}\n//               >\n//                 <div className=\"convo-info\">\n//                   {/* ===> DEĞİŞİKLİK BURADA: Artık kullanıcının adı görünüyor <=== */}\n//                   <strong>{convo.user_name}</strong>\n//                   <span>{convo.brand} {convo.model}</span>\n//                 </div>\n//                 <p className=\"last-message\">{convo.message}</p>\n//                 <span className=\"convo-time\">{new Date(convo.created_at).toLocaleString('tr-TR')}</span>\n//               </div>\n//             ))\n//           )}\n//         </div>\n//       </div>\n//       <div className=\"chat-box-area\">\n//         {selectedConversation ? (\n//           // ===> DEĞİŞİKLİK BURADA: Sohbet kutusuna user_id ve vehicle_id de gönderiliyor <===\n//           <AdminChatBox \n//             key={selectedConversation.conversation_id} // Konuşma değiştiğinde bileşenin yeniden render olmasını sağlar\n//             conversationId={selectedConversation.conversation_id} \n//             vehicleId={selectedConversation.vehicle_id}\n//             userId={selectedConversation.user_id}\n//           />\n//         ) : (\n//           <div className=\"no-chat-selected\">\n//             <p>Görüntülemek için bir konuşma seçin.</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default MessagesPage;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AdminChatBox from './AdminChatBox';\nimport './MessagesPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessagesPage() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const fetchConversations = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Token bulunamadı');\n        return;\n      }\n      const response = await axios.get('http://localhost:5000/api/conversations', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('Konuşmalar:', response.data);\n      setConversations(response.data);\n      setError('');\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error(\"Konuşmalar yüklenemedi:\", error);\n      setError('Konuşmalar yüklenemedi');\n\n      // Token geçersizse login'e yönlendir\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        localStorage.removeItem('token');\n        window.location.href = '/';\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchConversations();\n\n    // Her 30 saniyede bir konuşmaları güncelle\n    const interval = setInterval(fetchConversations, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleConversationSelect = conversation => {\n    console.log('Seçilen konuşma:', conversation);\n    setSelectedConversation(conversation);\n  };\n  const refreshConversations = () => {\n    setIsLoading(true);\n    fetchConversations();\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Gelen Kutusu Y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && conversations.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hata: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: refreshConversations,\n        children: \"Tekrar Dene\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversations-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Gelen Kutusu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refreshConversations,\n          className: \"refresh-btn\",\n          title: \"Yenile\",\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-list\",\n        children: conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-conversations\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hen\\xFCz mesaj\\u0131n\\u0131z yok.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this) : conversations.map(conversation => {\n          var _conversation$user_na;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `conversation-item ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.conversation_id) === conversation.conversation_id ? 'active' : ''}`,\n            onClick: () => handleConversationSelect(conversation),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-avatar\",\n              children: ((_conversation$user_na = conversation.user_name) === null || _conversation$user_na === void 0 ? void 0 : _conversation$user_na.charAt(0).toUpperCase()) || 'U'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: conversation.user_name || 'Anonim Kullanıcı'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"conversation-time\",\n                  children: new Date(conversation.created_at).toLocaleString('tr-TR', {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    day: '2-digit',\n                    month: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vehicle-info\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"vehicle-name\",\n                  children: [conversation.brand, \" \", conversation.model]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"last-message\",\n                children: conversation.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, conversation.conversation_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: selectedConversation ? /*#__PURE__*/_jsxDEV(AdminChatBox, {\n        conversationId: selectedConversation.conversation_id,\n        vehicleInfo: {\n          vehicle_id: selectedConversation.vehicle_id,\n          brand: selectedConversation.brand,\n          model: selectedConversation.model\n        },\n        userInfo: {\n          user_id: selectedConversation.user_id,\n          user_name: selectedConversation.user_name\n        }\n      }, selectedConversation.conversation_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-chat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ho\\u015F Geldiniz!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Mesajla\\u015Fmaya ba\\u015Flamak i\\xE7in sol taraftan bir konu\\u015Fma se\\xE7in.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(MessagesPage, \"w1fjzqINjc04zVAXazsZQ/8Tf8E=\");\n_c = MessagesPage;\nexport default MessagesPage;\nvar _c;\n$RefreshReg$(_c, \"MessagesPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","AdminChatBox","jsxDEV","_jsxDEV","MessagesPage","_s","conversations","setConversations","selectedConversation","setSelectedConversation","isLoading","setIsLoading","error","setError","fetchConversations","token","localStorage","getItem","response","get","headers","console","log","data","_error$response","_error$response2","status","removeItem","window","location","href","interval","setInterval","clearInterval","handleConversationSelect","conversation","refreshConversations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","title","map","_conversation$user_na","conversation_id","user_name","charAt","toUpperCase","Date","created_at","toLocaleString","hour","minute","day","month","brand","model","message","conversationId","vehicleInfo","vehicle_id","userInfo","user_id","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/MessagesPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import AdminChatBox from './AdminChatBox';\r\n// import './MessagesPage.css';\r\n\r\n// function MessagesPage() {\r\n//   const [conversations, setConversations] = useState([]);\r\n//   const [selectedConversation, setSelectedConversation] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const fetchConversations = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await axios.get('http://localhost:5000/api/conversations', {\r\n//           headers: { 'Authorization': `Bearer ${token}` }\r\n//         });\r\n//         setConversations(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Konuşmalar yüklenemedi:\", error);\r\n//       } finally {\r\n//         setIsLoading(false);\r\n//       }\r\n//     };\r\n//     fetchConversations();\r\n//   }, []);\r\n\r\n//   if (isLoading) return <div className=\"loading-container\">Gelen Kutusu Yükleniyor...</div>;\r\n\r\n//   return (\r\n//     <div className=\"messages-page-container\">\r\n//       <div className=\"conversations-list\">\r\n//         <div className=\"list-header\">\r\n//           <h2>Gelen Kutusu</h2>\r\n//         </div>\r\n//         <div className=\"list-content\">\r\n//           {conversations.length === 0 ? (\r\n//             <p className=\"no-messages\">Hiç mesajınız yok.</p>\r\n//           ) : (\r\n//             conversations.map(convo => (\r\n//               <div \r\n//                 key={convo.conversation_id} \r\n//                 className={`conversation-item ${selectedConversation?.conversation_id === convo.conversation_id ? 'active' : ''}`}\r\n//                 onClick={() => setSelectedConversation(convo)}\r\n//               >\r\n//                 <div className=\"convo-info\">\r\n//                   {/* ===> DEĞİŞİKLİK BURADA: Artık kullanıcının adı görünüyor <=== */}\r\n//                   <strong>{convo.user_name}</strong>\r\n//                   <span>{convo.brand} {convo.model}</span>\r\n//                 </div>\r\n//                 <p className=\"last-message\">{convo.message}</p>\r\n//                 <span className=\"convo-time\">{new Date(convo.created_at).toLocaleString('tr-TR')}</span>\r\n//               </div>\r\n//             ))\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"chat-box-area\">\r\n//         {selectedConversation ? (\r\n//           // ===> DEĞİŞİKLİK BURADA: Sohbet kutusuna user_id ve vehicle_id de gönderiliyor <===\r\n//           <AdminChatBox \r\n//             key={selectedConversation.conversation_id} // Konuşma değiştiğinde bileşenin yeniden render olmasını sağlar\r\n//             conversationId={selectedConversation.conversation_id} \r\n//             vehicleId={selectedConversation.vehicle_id}\r\n//             userId={selectedConversation.user_id}\r\n//           />\r\n//         ) : (\r\n//           <div className=\"no-chat-selected\">\r\n//             <p>Görüntülemek için bir konuşma seçin.</p>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default MessagesPage;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport AdminChatBox from './AdminChatBox';\r\nimport './MessagesPage.css';\r\n\r\nfunction MessagesPage() {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchConversations = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setError('Token bulunamadı');\r\n        return;\r\n      }\r\n\r\n      const response = await axios.get('http://localhost:5000/api/conversations', {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      \r\n      console.log('Konuşmalar:', response.data);\r\n      setConversations(response.data);\r\n      setError('');\r\n    } catch (error) {\r\n      console.error(\"Konuşmalar yüklenemedi:\", error);\r\n      setError('Konuşmalar yüklenemedi');\r\n      \r\n      // Token geçersizse login'e yönlendir\r\n      if (error.response?.status === 403 || error.response?.status === 401) {\r\n        localStorage.removeItem('token');\r\n        window.location.href = '/';\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchConversations();\r\n    \r\n    // Her 30 saniyede bir konuşmaları güncelle\r\n    const interval = setInterval(fetchConversations, 30000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleConversationSelect = (conversation) => {\r\n    console.log('Seçilen konuşma:', conversation);\r\n    setSelectedConversation(conversation);\r\n  };\r\n\r\n  const refreshConversations = () => {\r\n    setIsLoading(true);\r\n    fetchConversations();\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\">Gelen Kutusu Yükleniyor...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error && conversations.length === 0) {\r\n    return (\r\n      <div className=\"error-container\">\r\n        <p>Hata: {error}</p>\r\n        <button onClick={refreshConversations}>Tekrar Dene</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"messages-page-container\">\r\n      <div className=\"conversations-sidebar\">\r\n        <div className=\"sidebar-header\">\r\n          <h2>Gelen Kutusu</h2>\r\n          <button onClick={refreshConversations} className=\"refresh-btn\" title=\"Yenile\">\r\n            🔄\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"conversations-list\">\r\n          {conversations.length === 0 ? (\r\n            <div className=\"no-conversations\">\r\n              <p>Henüz mesajınız yok.</p>\r\n            </div>\r\n          ) : (\r\n            conversations.map((conversation) => (\r\n              <div \r\n                key={conversation.conversation_id} \r\n                className={`conversation-item ${\r\n                  selectedConversation?.conversation_id === conversation.conversation_id ? 'active' : ''\r\n                }`}\r\n                onClick={() => handleConversationSelect(conversation)}\r\n              >\r\n                <div className=\"conversation-avatar\">\r\n                  {conversation.user_name?.charAt(0).toUpperCase() || 'U'}\r\n                </div>\r\n                \r\n                <div className=\"conversation-content\">\r\n                  <div className=\"conversation-header\">\r\n                    <h4>{conversation.user_name || 'Anonim Kullanıcı'}</h4>\r\n                    <span className=\"conversation-time\">\r\n                      {new Date(conversation.created_at).toLocaleString('tr-TR', {\r\n                        hour: '2-digit',\r\n                        minute: '2-digit',\r\n                        day: '2-digit',\r\n                        month: '2-digit'\r\n                      })}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className=\"vehicle-info\">\r\n                    <span className=\"vehicle-name\">{conversation.brand} {conversation.model}</span>\r\n                  </div>\r\n                  \r\n                  <p className=\"last-message\">{conversation.message}</p>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-area\">\r\n        {selectedConversation ? (\r\n          <AdminChatBox \r\n            key={selectedConversation.conversation_id}\r\n            conversationId={selectedConversation.conversation_id}\r\n            vehicleInfo={{\r\n              vehicle_id: selectedConversation.vehicle_id,\r\n              brand: selectedConversation.brand,\r\n              model: selectedConversation.model\r\n            }}\r\n            userInfo={{\r\n              user_id: selectedConversation.user_id,\r\n              user_name: selectedConversation.user_name\r\n            }}\r\n          />\r\n        ) : (\r\n          <div className=\"no-chat-selected\">\r\n            <div className=\"no-chat-content\">\r\n              <h3>Hoş Geldiniz!</h3>\r\n              <p>Mesajlaşmaya başlamak için sol taraftan bir konuşma seçin.</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessagesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}