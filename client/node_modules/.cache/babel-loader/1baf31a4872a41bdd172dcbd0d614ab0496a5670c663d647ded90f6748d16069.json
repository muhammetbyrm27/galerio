{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n// // import './LoginPage.css';\n// // import { useNavigate } from 'react-router-dom';\n\n// // function LoginPage() {\n// //   const [formType, setFormType] = useState('login'); \n// //   const [email, setEmail] = useState('');\n// //   const [password, setPassword] = useState('');\n// //   const [error, setError] = useState('');\n// //   const [message, setMessage] = useState('');\n\n// //   const navigate = useNavigate();\n\n// //   const clearFields = () => {\n// //     setEmail('');\n// //     setPassword('');\n// //     setError('');\n// //     setMessage('');\n// //   };\n\n// //   const handleLogin = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const res = await axios.post('http://localhost:5000/api/login', { email, password });\n// //       localStorage.setItem('token', res.data.token);\n\n// //       navigate('/dashboard', { replace: true });\n\n// //     } catch (err) {\n// //       setError(err.response?.data?.message || 'Giriş hatası');\n// //     }\n// //   };\n\n// //   const handleRegister = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const res = await axios.post('http://localhost:5000/api/register', {\n// //         email,\n// //         password\n// //       });\n// //       setMessage(res.data.message);\n// //       clearFields();\n// //       setTimeout(() => {\n// //         setFormType('login');\n// //         setMessage(''); \n// //       }, 2000); \n// //     } catch (err) {\n// //       setError(err.response?.data?.message || 'Kayıt hatası');\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"login-container\">\n// //       <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\n// //         <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\n\n// //         <input\n// //           type=\"email\"\n// //           placeholder=\"E-posta\"\n// //           value={email}\n// //           onChange={(e) => setEmail(e.target.value)}\n// //           required\n// //         />\n// //         <input\n// //           type=\"password\"\n// //           placeholder=\"Şifre\"\n// //           value={password}\n// //           onChange={(e) => setPassword(e.target.value)}\n// //           required\n// //         />\n\n// //         <button type=\"submit\">\n// //           {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\n// //         </button>\n\n// //         {error && <p className=\"error\">{error}</p>}\n// //         {message && <p className=\"success\">{message}</p>}\n\n// //         <div className=\"form-switch\">\n// //           <button\n// //             type=\"button\"\n// //             onClick={() => {\n// //               setFormType(formType === 'login' ? 'register' : 'login');\n// //               clearFields();\n// //             }}\n// //           >\n// //             {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\n// //           </button>\n// //           <button type=\"button\" onClick={() => navigate('/forgot-password')}>\n// //             Şifremi Unuttum\n// //           </button>\n// //         </div>\n// //       </form>\n// //     </div>\n// //   );\n// // }\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './LoginPage.css';\n// import { useNavigate } from 'react-router-dom';\n// import { jwtDecode } from 'jwt-decode';\n\n// function LoginPage() {\n//   const [loginMode, setLoginMode] = useState('admin');\n//   const [formType, setFormType] = useState('login'); \n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const navigate = useNavigate();\n\n//   const clearFields = () => {\n//     setEmail('');\n//     setPassword('');\n//     setError('');\n//     setMessage('');\n//   };\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/login', { email, password });\n//       const token = res.data.token;\n//       localStorage.setItem('token', token);\n\n//       const decodedToken = jwtDecode(token);\n\n//       if (decodedToken.role === 'admin') {\n//         // Yönetici ise, senin sevdiğin eski Dashboard'a gider.\n//         navigate('/dashboard', { replace: true });\n//       } else {\n//         // Kullanıcı ise, UserDashboard'a gider.\n//         navigate('/user-dashboard', { replace: true });\n//       }\n//     } catch (err) {\n//       console.error(\"Giriş hatası detayı:\", err); // Hataları konsolda görmek için\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız');\n//     }\n//   };\n\n//   const handleRegister = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/register', {\n//         email,\n//         password\n//       });\n//       setMessage(res.data.message);\n//       clearFields();\n//       setTimeout(() => {\n//         setFormType('login');\n//         setMessage(''); \n//       }, 2000); \n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Kayıt hatası');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <div className=\"login-wrapper\">\n//         <div className=\"role-tabs\">\n//           <button \n//             className={`tab-button ${loginMode === 'admin' ? 'active' : ''}`}\n//             onClick={() => setLoginMode('admin')}\n//           >\n//             Yönetici Girişi\n//           </button>\n//           <button \n//             className={`tab-button ${loginMode === 'user' ? 'active' : ''}`}\n//             onClick={() => setLoginMode('user')}\n//           >\n//             Kullanıcı Girişi\n//           </button>\n//         </div>\n//         <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\n//           <h2>{formType === 'login' ? (loginMode === 'admin' ? 'Yönetici Girişi' : 'Kullanıcı Girişi') : 'Kaydol'}</h2>\n//           <input\n//             type=\"email\"\n//             placeholder=\"E-posta Adresi\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//           <input\n//             type=\"password\"\n//             placeholder=\"Şifre\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//           <button type=\"submit\">\n//             {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\n//           </button>\n//           {error && <p className=\"error\">{error}</p>}\n//           {message && <p className=\"success\">{message}</p>}\n//           <div className=\"form-switch\">\n//             <button\n//               type=\"button\"\n//               onClick={() => {\n//                 setFormType(formType === 'login' ? 'register' : 'login');\n//                 clearFields();\n//               }}\n//             >\n//               {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\n//             </button>\n//             <button type=\"button\" onClick={() => navigate('/forgot-password')}>\n//               Şifremi Unuttum\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;\n\n// ===================================\n// src/LoginPage.js\n// ===================================\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './LoginPage.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [loginMode, setLoginMode] = useState('admin');\n  const [formType, setFormType] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const clearFields = () => {\n    setEmail('');\n    setPassword('');\n    setError('');\n    setMessage('');\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const res = await axios.post('http://localhost:5000/api/login', {\n        email,\n        password\n      });\n      const token = res.data.token;\n      localStorage.setItem('token', token);\n      const decodedToken = jwtDecode(token);\n      if (decodedToken.role === 'admin') {\n        navigate('/dashboard', {\n          replace: true\n        });\n      } else {\n        navigate('/home', {\n          replace: true\n        });\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Giriş işlemi başarısız');\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5000/api/register', {\n        email,\n        password\n      });\n      setMessage(res.data.message);\n      clearFields();\n      setTimeout(() => {\n        setFormType('login');\n        setMessage('');\n      }, 2000);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Kayıt hatası');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"role-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${loginMode === 'admin' ? 'active' : ''}`,\n          onClick: () => setLoginMode('admin'),\n          children: \"Y\\xF6netici Giri\\u015Fi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${loginMode === 'user' ? 'active' : ''}`,\n          onClick: () => setLoginMode('user'),\n          children: \"Kullan\\u0131c\\u0131 Giri\\u015Fi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: formType === 'login' ? handleLogin : handleRegister,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: formType === 'login' ? loginMode === 'admin' ? 'Yönetici Girişi' : 'Kullanıcı Girişi' : 'Kaydol'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"E-posta Adresi\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\u015Eifre\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: formType === 'login' ? 'Giriş Yap' : 'Kaydol'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setFormType(formType === 'login' ? 'register' : 'login');\n              clearFields();\n            },\n            children: formType === 'login' ? 'Kaydol' : 'Giriş Yap'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => navigate('/forgot-password'),\n            children: \"\\u015Eifremi Unuttum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"69zGlMh6DjHBNz3TLPnOR3GNUqw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jwtDecode","jsxDEV","_jsxDEV","LoginPage","_s","loginMode","setLoginMode","formType","setFormType","email","setEmail","password","setPassword","error","setError","message","setMessage","navigate","clearFields","handleLogin","e","preventDefault","res","post","token","data","localStorage","setItem","decodedToken","role","replace","err","_err$response","_err$response$data","response","handleRegister","setTimeout","_err$response2","_err$response2$data","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/LoginPage.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import './LoginPage.css';\r\n// // import { useNavigate } from 'react-router-dom';\r\n\r\n// // function LoginPage() {\r\n// //   const [formType, setFormType] = useState('login'); \r\n// //   const [email, setEmail] = useState('');\r\n// //   const [password, setPassword] = useState('');\r\n// //   const [error, setError] = useState('');\r\n// //   const [message, setMessage] = useState('');\r\n  \r\n// //   const navigate = useNavigate();\r\n\r\n// //   const clearFields = () => {\r\n// //     setEmail('');\r\n// //     setPassword('');\r\n// //     setError('');\r\n// //     setMessage('');\r\n// //   };\r\n\r\n// //   const handleLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       const res = await axios.post('http://localhost:5000/api/login', { email, password });\r\n// //       localStorage.setItem('token', res.data.token);\r\n      \r\n// //       navigate('/dashboard', { replace: true });\r\n\r\n// //     } catch (err) {\r\n// //       setError(err.response?.data?.message || 'Giriş hatası');\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleRegister = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       const res = await axios.post('http://localhost:5000/api/register', {\r\n// //         email,\r\n// //         password\r\n// //       });\r\n// //       setMessage(res.data.message);\r\n// //       clearFields();\r\n// //       setTimeout(() => {\r\n// //         setFormType('login');\r\n// //         setMessage(''); \r\n// //       }, 2000); \r\n// //     } catch (err) {\r\n// //       setError(err.response?.data?.message || 'Kayıt hatası');\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"login-container\">\r\n// //       <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\r\n// //         <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\r\n\r\n// //         <input\r\n// //           type=\"email\"\r\n// //           placeholder=\"E-posta\"\r\n// //           value={email}\r\n// //           onChange={(e) => setEmail(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <input\r\n// //           type=\"password\"\r\n// //           placeholder=\"Şifre\"\r\n// //           value={password}\r\n// //           onChange={(e) => setPassword(e.target.value)}\r\n// //           required\r\n// //         />\r\n        \r\n// //         <button type=\"submit\">\r\n// //           {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\r\n// //         </button>\r\n\r\n// //         {error && <p className=\"error\">{error}</p>}\r\n// //         {message && <p className=\"success\">{message}</p>}\r\n\r\n// //         <div className=\"form-switch\">\r\n// //           <button\r\n// //             type=\"button\"\r\n// //             onClick={() => {\r\n// //               setFormType(formType === 'login' ? 'register' : 'login');\r\n// //               clearFields();\r\n// //             }}\r\n// //           >\r\n// //             {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\r\n// //           </button>\r\n// //           <button type=\"button\" onClick={() => navigate('/forgot-password')}>\r\n// //             Şifremi Unuttum\r\n// //           </button>\r\n// //         </div>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './LoginPage.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { jwtDecode } from 'jwt-decode';\r\n\r\n// function LoginPage() {\r\n//   const [loginMode, setLoginMode] = useState('admin');\r\n//   const [formType, setFormType] = useState('login'); \r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n  \r\n//   const navigate = useNavigate();\r\n\r\n//   const clearFields = () => {\r\n//     setEmail('');\r\n//     setPassword('');\r\n//     setError('');\r\n//     setMessage('');\r\n//   };\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/login', { email, password });\r\n//       const token = res.data.token;\r\n//       localStorage.setItem('token', token);\r\n      \r\n//       const decodedToken = jwtDecode(token);\r\n      \r\n//       if (decodedToken.role === 'admin') {\r\n//         // Yönetici ise, senin sevdiğin eski Dashboard'a gider.\r\n//         navigate('/dashboard', { replace: true });\r\n//       } else {\r\n//         // Kullanıcı ise, UserDashboard'a gider.\r\n//         navigate('/user-dashboard', { replace: true });\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Giriş hatası detayı:\", err); // Hataları konsolda görmek için\r\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız');\r\n//     }\r\n//   };\r\n\r\n//   const handleRegister = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/register', {\r\n//         email,\r\n//         password\r\n//       });\r\n//       setMessage(res.data.message);\r\n//       clearFields();\r\n//       setTimeout(() => {\r\n//         setFormType('login');\r\n//         setMessage(''); \r\n//       }, 2000); \r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Kayıt hatası');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <div className=\"login-wrapper\">\r\n//         <div className=\"role-tabs\">\r\n//           <button \r\n//             className={`tab-button ${loginMode === 'admin' ? 'active' : ''}`}\r\n//             onClick={() => setLoginMode('admin')}\r\n//           >\r\n//             Yönetici Girişi\r\n//           </button>\r\n//           <button \r\n//             className={`tab-button ${loginMode === 'user' ? 'active' : ''}`}\r\n//             onClick={() => setLoginMode('user')}\r\n//           >\r\n//             Kullanıcı Girişi\r\n//           </button>\r\n//         </div>\r\n//         <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\r\n//           <h2>{formType === 'login' ? (loginMode === 'admin' ? 'Yönetici Girişi' : 'Kullanıcı Girişi') : 'Kaydol'}</h2>\r\n//           <input\r\n//             type=\"email\"\r\n//             placeholder=\"E-posta Adresi\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//             required\r\n//           />\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Şifre\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             required\r\n//           />\r\n//           <button type=\"submit\">\r\n//             {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\r\n//           </button>\r\n//           {error && <p className=\"error\">{error}</p>}\r\n//           {message && <p className=\"success\">{message}</p>}\r\n//           <div className=\"form-switch\">\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={() => {\r\n//                 setFormType(formType === 'login' ? 'register' : 'login');\r\n//                 clearFields();\r\n//               }}\r\n//             >\r\n//               {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\r\n//             </button>\r\n//             <button type=\"button\" onClick={() => navigate('/forgot-password')}>\r\n//               Şifremi Unuttum\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LoginPage;\r\n\r\n// ===================================\r\n// src/LoginPage.js\r\n// ===================================\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './LoginPage.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nfunction LoginPage() {\r\n  const [loginMode, setLoginMode] = useState('admin');\r\n  const [formType, setFormType] = useState('login'); \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const clearFields = () => { setEmail(''); setPassword(''); setError(''); setMessage(''); };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/login', { email, password });\r\n      const token = res.data.token;\r\n      localStorage.setItem('token', token);\r\n      const decodedToken = jwtDecode(token);\r\n      \r\n      if (decodedToken.role === 'admin') {\r\n        navigate('/dashboard', { replace: true });\r\n      } else {\r\n        navigate('/home', { replace: true });\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Giriş işlemi başarısız');\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/register', { email, password });\r\n      setMessage(res.data.message);\r\n      clearFields();\r\n      setTimeout(() => { setFormType('login'); setMessage(''); }, 2000); \r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Kayıt hatası');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-wrapper\">\r\n        <div className=\"role-tabs\">\r\n          <button className={`tab-button ${loginMode === 'admin' ? 'active' : ''}`} onClick={() => setLoginMode('admin')}>Yönetici Girişi</button>\r\n          <button className={`tab-button ${loginMode === 'user' ? 'active' : ''}`} onClick={() => setLoginMode('user')}>Kullanıcı Girişi</button>\r\n        </div>\r\n        <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\r\n          <h2>{formType === 'login' ? (loginMode === 'admin' ? 'Yönetici Girişi' : 'Kullanıcı Girişi') : 'Kaydol'}</h2>\r\n          <input type=\"email\" placeholder=\"E-posta Adresi\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n          <input type=\"password\" placeholder=\"Şifre\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n          <button type=\"submit\">{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</button>\r\n          {error && <p className=\"error\">{error}</p>}\r\n          {message && <p className=\"success\">{message}</p>}\r\n          <div className=\"form-switch\">\r\n            <button type=\"button\" onClick={() => { setFormType(formType === 'login' ? 'register' : 'login'); clearFields(); }}>\r\n              {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\r\n            </button>\r\n            <button type=\"button\" onClick={() => navigate('/forgot-password')}>\r\n              Şifremi Unuttum\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default LoginPage;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMoB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAMmB,WAAW,GAAGA,CAAA,KAAM;IAAER,QAAQ,CAAC,EAAE,CAAC;IAAEE,WAAW,CAAC,EAAE,CAAC;IAAEE,QAAQ,CAAC,EAAE,CAAC;IAAEE,UAAU,CAAC,EAAE,CAAC;EAAE,CAAC;EAE1F,MAAMG,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAMQ,GAAG,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,iCAAiC,EAAE;QAAEd,KAAK;QAAEE;MAAS,CAAC,CAAC;MACpF,MAAMa,KAAK,GAAGF,GAAG,CAACG,IAAI,CAACD,KAAK;MAC5BE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;MACpC,MAAMI,YAAY,GAAG5B,SAAS,CAACwB,KAAK,CAAC;MAErC,IAAII,YAAY,CAACC,IAAI,KAAK,OAAO,EAAE;QACjCZ,QAAQ,CAAC,YAAY,EAAE;UAAEa,OAAO,EAAE;QAAK,CAAC,CAAC;MAC3C,CAAC,MAAM;QACLb,QAAQ,CAAC,OAAO,EAAE;UAAEa,OAAO,EAAE;QAAK,CAAC,CAAC;MACtC;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZnB,QAAQ,CAAC,EAAAkB,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcP,IAAI,cAAAQ,kBAAA,uBAAlBA,kBAAA,CAAoBlB,OAAO,KAAI,wBAAwB,CAAC;IACnE;EACF,CAAC;EAED,MAAMoB,cAAc,GAAG,MAAOf,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,oCAAoC,EAAE;QAAEd,KAAK;QAAEE;MAAS,CAAC,CAAC;MACvFK,UAAU,CAACM,GAAG,CAACG,IAAI,CAACV,OAAO,CAAC;MAC5BG,WAAW,CAAC,CAAC;MACbkB,UAAU,CAAC,MAAM;QAAE5B,WAAW,CAAC,OAAO,CAAC;QAAEQ,UAAU,CAAC,EAAE,CAAC;MAAE,CAAC,EAAE,IAAI,CAAC;IACnE,CAAC,CAAC,OAAOe,GAAG,EAAE;MAAA,IAAAM,cAAA,EAAAC,mBAAA;MACZxB,QAAQ,CAAC,EAAAuB,cAAA,GAAAN,GAAG,CAACG,QAAQ,cAAAG,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcZ,IAAI,cAAAa,mBAAA,uBAAlBA,mBAAA,CAAoBvB,OAAO,KAAI,cAAc,CAAC;IACzD;EACF,CAAC;EAED,oBACEb,OAAA;IAAKqC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BtC,OAAA;MAAKqC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BtC,OAAA;QAAKqC,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBtC,OAAA;UAAQqC,SAAS,EAAE,cAAclC,SAAS,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAG;UAACoC,OAAO,EAAEA,CAAA,KAAMnC,YAAY,CAAC,OAAO,CAAE;UAAAkC,QAAA,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxI3C,OAAA;UAAQqC,SAAS,EAAE,cAAclC,SAAS,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;UAACoC,OAAO,EAAEA,CAAA,KAAMnC,YAAY,CAAC,MAAM,CAAE;UAAAkC,QAAA,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpI,CAAC,eACN3C,OAAA;QAAMqC,SAAS,EAAC,YAAY;QAACO,QAAQ,EAAEvC,QAAQ,KAAK,OAAO,GAAGY,WAAW,GAAGgB,cAAe;QAAAK,QAAA,gBACzFtC,OAAA;UAAAsC,QAAA,EAAKjC,QAAQ,KAAK,OAAO,GAAIF,SAAS,KAAK,OAAO,GAAG,iBAAiB,GAAG,kBAAkB,GAAI;QAAQ;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7G3C,OAAA;UAAO6C,IAAI,EAAC,OAAO;UAACC,WAAW,EAAC,gBAAgB;UAACC,KAAK,EAAExC,KAAM;UAACyC,QAAQ,EAAG9B,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrH3C,OAAA;UAAO6C,IAAI,EAAC,UAAU;UAACC,WAAW,EAAC,YAAO;UAACC,KAAK,EAAEtC,QAAS;UAACuC,QAAQ,EAAG9B,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrH3C,OAAA;UAAQ6C,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAEjC,QAAQ,KAAK,OAAO,GAAG,WAAW,GAAG;QAAQ;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,EAC7EhC,KAAK,iBAAIX,OAAA;UAAGqC,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAE3B;QAAK;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACzC9B,OAAO,iBAAIb,OAAA;UAAGqC,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAEzB;QAAO;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChD3C,OAAA;UAAKqC,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BtC,OAAA;YAAQ6C,IAAI,EAAC,QAAQ;YAACN,OAAO,EAAEA,CAAA,KAAM;cAAEjC,WAAW,CAACD,QAAQ,KAAK,OAAO,GAAG,UAAU,GAAG,OAAO,CAAC;cAAEW,WAAW,CAAC,CAAC;YAAE,CAAE;YAAAsB,QAAA,EAC/GjC,QAAQ,KAAK,OAAO,GAAG,QAAQ,GAAG;UAAW;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eACT3C,OAAA;YAAQ6C,IAAI,EAAC,QAAQ;YAACN,OAAO,EAAEA,CAAA,KAAMxB,QAAQ,CAAC,kBAAkB,CAAE;YAAAuB,QAAA,EAAC;UAEnE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzC,EAAA,CApEQD,SAAS;EAAA,QAOCJ,WAAW;AAAA;AAAAsD,EAAA,GAPrBlD,SAAS;AAqElB,eAAeA,SAAS;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}