{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './LoginPage.css';\n// import { useNavigate } from 'react-router-dom';\n\n// function LoginPage() {\n//   const [formType, setFormType] = useState('login'); \n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const navigate = useNavigate();\n\n//   const clearFields = () => {\n//     setEmail('');\n//     setPassword('');\n//     setError('');\n//     setMessage('');\n//   };\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/login', { email, password });\n//       localStorage.setItem('token', res.data.token);\n\n//       navigate('/dashboard', { replace: true });\n\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Giriş hatası');\n//     }\n//   };\n\n//   const handleRegister = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/register', {\n//         email,\n//         password\n//       });\n//       setMessage(res.data.message);\n//       clearFields();\n//       setTimeout(() => {\n//         setFormType('login');\n//         setMessage(''); \n//       }, 2000); \n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Kayıt hatası');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\n//         <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\n\n//         <input\n//           type=\"email\"\n//           placeholder=\"E-posta\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Şifre\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n\n//         <button type=\"submit\">\n//           {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\n//         </button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//         {message && <p className=\"success\">{message}</p>}\n\n//         <div className=\"form-switch\">\n//           <button\n//             type=\"button\"\n//             onClick={() => {\n//               setFormType(formType === 'login' ? 'register' : 'login');\n//               clearFields();\n//             }}\n//           >\n//             {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\n//           </button>\n//           <button type=\"button\" onClick={() => navigate('/forgot-password')}>\n//             Şifremi Unuttum\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './LoginPage.css';\nimport { useNavigate } from 'react-router-dom';\n// ===> DEĞİŞİKLİK 1: YENİ PAKETİ İMPORT EDİYORUZ <===\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [formType, setFormType] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const clearFields = () => {\n    setEmail('');\n    setPassword('');\n    setError('');\n    setMessage('');\n  };\n\n  // ===> DEĞİŞİKLİK 2: handleLogin FONKSİYONU GÜNCELLENDİ <===\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      // 1. Backend'e giriş isteği atıyoruz (Burası aynı).\n      const res = await axios.post('http://localhost:5000/api/login', {\n        email,\n        password\n      });\n      const token = res.data.token;\n\n      // 2. Token'ı tarayıcı hafızasına kaydediyoruz (Burası aynı).\n      localStorage.setItem('token', token);\n\n      // 3. Token'ın içini açıp rol bilgisini okuyoruz.\n      const decodedToken = jwtDecode(token);\n\n      // 4. Role göre doğru sayfaya yönlendiriyoruz.\n      if (decodedToken.role === 'admin') {\n        // Eğer rol 'admin' ise, admin paneline yönlendir.\n        navigate('/admin-dashboard', {\n          replace: true\n        }); // Admin panelinizin yolu\n      } else {\n        // Değilse, normal kullanıcı paneline yönlendir.\n        navigate('/dashboard', {\n          replace: true\n        });\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Giriş hatası');\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5000/api/register', {\n        email,\n        password\n      });\n      setMessage(res.data.message);\n      clearFields();\n      setTimeout(() => {\n        setFormType('login');\n        setMessage('');\n      }, 2000);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Kayıt hatası');\n    }\n  };\n\n  // JSX kısmında bir değişiklik yok.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: formType === 'login' ? handleLogin : handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: formType === 'login' ? 'Giriş Yap' : 'Kaydol'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"E-posta\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u015Eifre\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: formType === 'login' ? 'Giriş Yap' : 'Kaydol'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            setFormType(formType === 'login' ? 'register' : 'login');\n            clearFields();\n          },\n          children: formType === 'login' ? 'Kaydol' : 'Giriş Yap'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => navigate('/forgot-password'),\n          children: \"\\u015Eifremi Unuttum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"WgmZ6b8bmEy9UJAkcgE5LNSITDo=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jwtDecode","jsxDEV","_jsxDEV","LoginPage","_s","formType","setFormType","email","setEmail","password","setPassword","error","setError","message","setMessage","navigate","clearFields","handleLogin","e","preventDefault","res","post","token","data","localStorage","setItem","decodedToken","role","replace","err","_err$response","_err$response$data","response","handleRegister","setTimeout","_err$response2","_err$response2$data","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/LoginPage.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './LoginPage.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function LoginPage() {\r\n//   const [formType, setFormType] = useState('login'); \r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n  \r\n//   const navigate = useNavigate();\r\n\r\n//   const clearFields = () => {\r\n//     setEmail('');\r\n//     setPassword('');\r\n//     setError('');\r\n//     setMessage('');\r\n//   };\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/login', { email, password });\r\n//       localStorage.setItem('token', res.data.token);\r\n      \r\n//       navigate('/dashboard', { replace: true });\r\n\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Giriş hatası');\r\n//     }\r\n//   };\r\n\r\n//   const handleRegister = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/register', {\r\n//         email,\r\n//         password\r\n//       });\r\n//       setMessage(res.data.message);\r\n//       clearFields();\r\n//       setTimeout(() => {\r\n//         setFormType('login');\r\n//         setMessage(''); \r\n//       }, 2000); \r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Kayıt hatası');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\r\n//         <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\r\n\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"E-posta\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Şifre\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//         />\r\n        \r\n//         <button type=\"submit\">\r\n//           {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\r\n//         </button>\r\n\r\n//         {error && <p className=\"error\">{error}</p>}\r\n//         {message && <p className=\"success\">{message}</p>}\r\n\r\n//         <div className=\"form-switch\">\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={() => {\r\n//               setFormType(formType === 'login' ? 'register' : 'login');\r\n//               clearFields();\r\n//             }}\r\n//           >\r\n//             {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\r\n//           </button>\r\n//           <button type=\"button\" onClick={() => navigate('/forgot-password')}>\r\n//             Şifremi Unuttum\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LoginPage;\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './LoginPage.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n// ===> DEĞİŞİKLİK 1: YENİ PAKETİ İMPORT EDİYORUZ <===\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nfunction LoginPage() {\r\n  const [formType, setFormType] = useState('login'); \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const clearFields = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n    setError('');\r\n    setMessage('');\r\n  };\r\n\r\n  // ===> DEĞİŞİKLİK 2: handleLogin FONKSİYONU GÜNCELLENDİ <===\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // 1. Backend'e giriş isteği atıyoruz (Burası aynı).\r\n      const res = await axios.post('http://localhost:5000/api/login', { email, password });\r\n      const token = res.data.token;\r\n      \r\n      // 2. Token'ı tarayıcı hafızasına kaydediyoruz (Burası aynı).\r\n      localStorage.setItem('token', token);\r\n      \r\n      // 3. Token'ın içini açıp rol bilgisini okuyoruz.\r\n      const decodedToken = jwtDecode(token);\r\n      \r\n      // 4. Role göre doğru sayfaya yönlendiriyoruz.\r\n      if (decodedToken.role === 'admin') {\r\n        // Eğer rol 'admin' ise, admin paneline yönlendir.\r\n        navigate('/admin-dashboard', { replace: true }); // Admin panelinizin yolu\r\n      } else {\r\n        // Değilse, normal kullanıcı paneline yönlendir.\r\n        navigate('/dashboard', { replace: true });\r\n      }\r\n\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Giriş hatası');\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/register', {\r\n        email,\r\n        password\r\n      });\r\n      setMessage(res.data.message);\r\n      clearFields();\r\n      setTimeout(() => {\r\n        setFormType('login');\r\n        setMessage(''); \r\n      }, 2000); \r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Kayıt hatası');\r\n    }\r\n  };\r\n\r\n  // JSX kısmında bir değişiklik yok.\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\r\n        <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\r\n\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"E-posta\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Şifre\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        \r\n        <button type=\"submit\">\r\n          {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\r\n        </button>\r\n\r\n        {error && <p className=\"error\">{error}</p>}\r\n        {message && <p className=\"success\">{message}</p>}\r\n\r\n        <div className=\"form-switch\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setFormType(formType === 'login' ? 'register' : 'login');\r\n              clearFields();\r\n            }}\r\n          >\r\n            {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\r\n          </button>\r\n          <button type=\"button\" onClick={() => navigate('/forgot-password')}>\r\n            Şifremi Unuttum\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}