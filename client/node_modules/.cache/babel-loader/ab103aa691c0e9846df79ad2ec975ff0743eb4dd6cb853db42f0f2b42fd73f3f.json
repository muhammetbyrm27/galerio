{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './LoginPage.css';\n// import { useNavigate } from 'react-router-dom';\n\n// function LoginPage() {\n//   const [formType, setFormType] = useState('login'); \n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const navigate = useNavigate();\n\n//   const clearFields = () => {\n//     setEmail('');\n//     setPassword('');\n//     setError('');\n//     setMessage('');\n//   };\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/login', { email, password });\n//       localStorage.setItem('token', res.data.token);\n\n//       navigate('/dashboard', { replace: true });\n\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Giriş hatası');\n//     }\n//   };\n\n//   const handleRegister = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/register', {\n//         email,\n//         password\n//       });\n//       setMessage(res.data.message);\n//       clearFields();\n//       setTimeout(() => {\n//         setFormType('login');\n//         setMessage(''); \n//       }, 2000); \n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Kayıt hatası');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\n//         <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\n\n//         <input\n//           type=\"email\"\n//           placeholder=\"E-posta\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Şifre\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n\n//         <button type=\"submit\">\n//           {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\n//         </button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//         {message && <p className=\"success\">{message}</p>}\n\n//         <div className=\"form-switch\">\n//           <button\n//             type=\"button\"\n//             onClick={() => {\n//               setFormType(formType === 'login' ? 'register' : 'login');\n//               clearFields();\n//             }}\n//           >\n//             {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\n//           </button>\n//           <button type=\"button\" onClick={() => navigate('/forgot-password')}>\n//             Şifremi Unuttum\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './LoginPage.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  // ===> YENİLİK 1: Giriş modunu tutacak state <===\n  // 'admin' veya 'user' değerlerini alabilir.\n  const [loginMode, setLoginMode] = useState('admin');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // handleLogin fonksiyonu aynı kalıyor, çünkü backend zaten rolü ayırt ediyor.\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError(''); // Her denemede eski hatayı temizle\n    try {\n      const res = await axios.post('http://localhost:5000/api/login', {\n        email,\n        password\n      });\n      const token = res.data.token;\n      localStorage.setItem('token', token);\n      const decodedToken = jwtDecode(token);\n      if (decodedToken.role === 'admin') {\n        navigate('/admin-dashboard', {\n          replace: true\n        });\n      } else {\n        // Normal kullanıcılar için henüz bir sayfa tasarlamadığımızı varsayalım\n        // Onları da şimdilik normal dashboard'a yönlendirelim.\n        navigate('/dashboard', {\n          replace: true\n        });\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Giriş işlemi başarısız');\n    }\n  };\n\n  // Not: Kayıt olma fonksiyonunu bu yapıdan ayırmak daha temiz olabilir.\n  // Şimdilik bu şekilde bırakıyoruz. Kullanıcılar her zaman 'user' olarak kaydolur.\n  const handleRegister = async () => {\n    // Kayıt olma mantığı buraya... Şimdilik odak noktamız login.\n    alert('Kayıt olma özelliği geliştirme aşamasındadır.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${loginMode === 'admin' ? 'active' : ''}`,\n          onClick: () => setLoginMode('admin'),\n          children: \"Y\\xF6netici Giri\\u015Fi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${loginMode === 'user' ? 'active' : ''}`,\n          onClick: () => setLoginMode('user'),\n          children: \"Kullan\\u0131c\\u0131 Giri\\u015Fi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: loginMode === 'admin' ? 'Yönetici Paneli' : 'Kullanıcı Girişi'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"E-posta Adresi\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\u015Eifre\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-submit-button\",\n          children: \"Giri\\u015F Yap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-bottom-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => alert('Kayıt özelliği yakında!'),\n            children: \"Kaydol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => navigate('/forgot-password'),\n            children: \"\\u015Eifremi Unuttum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"zAbmD9Zon+x5L7DdS1aNV6Twnk8=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jwtDecode","jsxDEV","_jsxDEV","LoginPage","_s","loginMode","setLoginMode","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","res","post","token","data","localStorage","setItem","decodedToken","role","replace","err","_err$response","_err$response$data","response","message","handleRegister","alert","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/LoginPage.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './LoginPage.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function LoginPage() {\r\n//   const [formType, setFormType] = useState('login'); \r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n  \r\n//   const navigate = useNavigate();\r\n\r\n//   const clearFields = () => {\r\n//     setEmail('');\r\n//     setPassword('');\r\n//     setError('');\r\n//     setMessage('');\r\n//   };\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/login', { email, password });\r\n//       localStorage.setItem('token', res.data.token);\r\n      \r\n//       navigate('/dashboard', { replace: true });\r\n\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Giriş hatası');\r\n//     }\r\n//   };\r\n\r\n//   const handleRegister = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/register', {\r\n//         email,\r\n//         password\r\n//       });\r\n//       setMessage(res.data.message);\r\n//       clearFields();\r\n//       setTimeout(() => {\r\n//         setFormType('login');\r\n//         setMessage(''); \r\n//       }, 2000); \r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Kayıt hatası');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\r\n//         <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\r\n\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"E-posta\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Şifre\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//         />\r\n        \r\n//         <button type=\"submit\">\r\n//           {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\r\n//         </button>\r\n\r\n//         {error && <p className=\"error\">{error}</p>}\r\n//         {message && <p className=\"success\">{message}</p>}\r\n\r\n//         <div className=\"form-switch\">\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={() => {\r\n//               setFormType(formType === 'login' ? 'register' : 'login');\r\n//               clearFields();\r\n//             }}\r\n//           >\r\n//             {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\r\n//           </button>\r\n//           <button type=\"button\" onClick={() => navigate('/forgot-password')}>\r\n//             Şifremi Unuttum\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LoginPage;\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './LoginPage.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nfunction LoginPage() {\r\n  // ===> YENİLİK 1: Giriş modunu tutacak state <===\r\n  // 'admin' veya 'user' değerlerini alabilir.\r\n  const [loginMode, setLoginMode] = useState('admin'); \r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  // handleLogin fonksiyonu aynı kalıyor, çünkü backend zaten rolü ayırt ediyor.\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(''); // Her denemede eski hatayı temizle\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/login', { email, password });\r\n      const token = res.data.token;\r\n      localStorage.setItem('token', token);\r\n      \r\n      const decodedToken = jwtDecode(token);\r\n      \r\n      if (decodedToken.role === 'admin') {\r\n        navigate('/admin-dashboard', { replace: true });\r\n      } else {\r\n        // Normal kullanıcılar için henüz bir sayfa tasarlamadığımızı varsayalım\r\n        // Onları da şimdilik normal dashboard'a yönlendirelim.\r\n        navigate('/dashboard', { replace: true });\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Giriş işlemi başarısız');\r\n    }\r\n  };\r\n\r\n  // Not: Kayıt olma fonksiyonunu bu yapıdan ayırmak daha temiz olabilir.\r\n  // Şimdilik bu şekilde bırakıyoruz. Kullanıcılar her zaman 'user' olarak kaydolur.\r\n  const handleRegister = async () => {\r\n     // Kayıt olma mantığı buraya... Şimdilik odak noktamız login.\r\n     alert('Kayıt olma özelliği geliştirme aşamasındadır.');\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      {/* ===> YENİLİK 2: Sekmeli yapı <=== */}\r\n      <div className=\"login-form-wrapper\">\r\n        <div className=\"login-tabs\">\r\n          <button \r\n            className={`tab-button ${loginMode === 'admin' ? 'active' : ''}`}\r\n            onClick={() => setLoginMode('admin')}\r\n          >\r\n            Yönetici Girişi\r\n          </button>\r\n          <button \r\n            className={`tab-button ${loginMode === 'user' ? 'active' : ''}`}\r\n            onClick={() => setLoginMode('user')}\r\n          >\r\n            Kullanıcı Girişi\r\n          </button>\r\n        </div>\r\n\r\n        {/* Form her iki mod için de aynı, sadece başlığı değişiyor */}\r\n        <form className=\"login-form\" onSubmit={handleLogin}>\r\n          <h2>{loginMode === 'admin' ? 'Yönetici Paneli' : 'Kullanıcı Girişi'}</h2>\r\n\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"E-posta Adresi\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Şifre\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          \r\n          <button type=\"submit\" className=\"login-submit-button\">\r\n            Giriş Yap\r\n          </button>\r\n\r\n          {error && <p className=\"error\">{error}</p>}\r\n\r\n          <div className=\"form-bottom-links\">\r\n            <span onClick={() => alert('Kayıt özelliği yakında!')}>Kaydol</span>\r\n            <span onClick={() => navigate('/forgot-password')}>Şifremi Unuttum</span>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}