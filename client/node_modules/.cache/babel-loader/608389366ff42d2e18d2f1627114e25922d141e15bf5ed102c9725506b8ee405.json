{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './LoginPage.css';\n\n// function LoginPage() {\n//   const [formType, setFormType] = useState('login'); \n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const clearFields = () => {\n//     setEmail('');\n//     setPassword('');\n//     setError('');\n//     setMessage('');\n//   };\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/login', { email, password });\n//       localStorage.setItem('token', res.data.token);\n//       window.location.href = '/dashboard';\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Giriş hatası');\n//     }\n//   };\n\n//   const handleRegister = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/register', {\n//         email,\n//         password\n//       });\n//       setMessage(res.data.message);\n//       clearFields();\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Kayıt hatası');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\n//         <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\n\n//         <input\n//           type=\"email\"\n//           placeholder=\"E-posta\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n\n//         <input\n//           type=\"password\"\n//           placeholder=\"Şifre\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n\n//         <button type=\"submit\">\n//           {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\n//         </button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//         {message && <p className=\"success\">{message}</p>}\n\n//         <div className=\"form-switch\">\n//           <button\n//             type=\"button\"\n//             onClick={() => {\n//               setFormType(formType === 'login' ? 'register' : 'login');\n//               clearFields();\n//             }}\n//           >\n//             {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\n//           </button>\n\n//           <button type=\"button\" onClick={() => window.location.href = '/forgot-password'}>\n//             Şifremi Unuttum\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './LoginPage.css';\n// 1. Adım: Yönlendirme için 'useNavigate' import ediliyor.\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [formType, setFormType] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n\n  // 2. Adım: useNavigate hook'u kullanıma hazırlanıyor.\n  const navigate = useNavigate();\n  const clearFields = () => {\n    setEmail('');\n    setPassword('');\n    setError('');\n    setMessage('');\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5000/api/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n\n      // 3. Adım: Yönlendirme güvenli hale getiriliyor.\n      // window.location.href kaldırıldı.\n      // 'replace: true' seçeneği, tarayıcı geçmişinden login sayfasını siler.\n      navigate('/dashboard', {\n        replace: true\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Giriş hatası');\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5000/api/register', {\n        email,\n        password\n      });\n      setMessage(res.data.message);\n      clearFields();\n      // Kayıt sonrası kullanıcıyı bilgilendirip login formuna geçiş yapabiliriz.\n      setTimeout(() => {\n        setFormType('login');\n        setMessage(''); // Mesajı temizle\n      }, 2000); // 2 saniye sonra\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Kayıt hatası');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: formType === 'login' ? handleLogin : handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: formType === 'login' ? 'Giriş Yap' : 'Kaydol'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"E-posta\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u015Eifre\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: formType === 'login' ? 'Giriş Yap' : 'Kaydol'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            setFormType(formType === 'login' ? 'register' : 'login');\n            clearFields();\n          },\n          children: formType === 'login' ? 'Kaydol' : 'Giriş Yap'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => navigate('/forgot-password'),\n          children: \"\\u015Eifremi Unuttum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"WgmZ6b8bmEy9UJAkcgE5LNSITDo=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","formType","setFormType","email","setEmail","password","setPassword","error","setError","message","setMessage","navigate","clearFields","handleLogin","e","preventDefault","res","post","localStorage","setItem","data","token","replace","err","_err$response","_err$response$data","response","handleRegister","setTimeout","_err$response2","_err$response2$data","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/LoginPage.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './LoginPage.css';\r\n\r\n// function LoginPage() {\r\n//   const [formType, setFormType] = useState('login'); \r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const clearFields = () => {\r\n//     setEmail('');\r\n//     setPassword('');\r\n//     setError('');\r\n//     setMessage('');\r\n//   };\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/login', { email, password });\r\n//       localStorage.setItem('token', res.data.token);\r\n//       window.location.href = '/dashboard';\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Giriş hatası');\r\n//     }\r\n//   };\r\n\r\n//   const handleRegister = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/register', {\r\n//         email,\r\n//         password\r\n//       });\r\n//       setMessage(res.data.message);\r\n//       clearFields();\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Kayıt hatası');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\r\n//         <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\r\n\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"E-posta\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Şifre\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n        \r\n\r\n//         <button type=\"submit\">\r\n//           {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\r\n//         </button>\r\n\r\n//         {error && <p className=\"error\">{error}</p>}\r\n//         {message && <p className=\"success\">{message}</p>}\r\n\r\n//         <div className=\"form-switch\">\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={() => {\r\n//               setFormType(formType === 'login' ? 'register' : 'login');\r\n//               clearFields();\r\n//             }}\r\n//           >\r\n//             {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\r\n//           </button>\r\n\r\n//           <button type=\"button\" onClick={() => window.location.href = '/forgot-password'}>\r\n//             Şifremi Unuttum\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LoginPage;\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './LoginPage.css';\r\n// 1. Adım: Yönlendirme için 'useNavigate' import ediliyor.\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\n  const [formType, setFormType] = useState('login'); \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  \r\n  // 2. Adım: useNavigate hook'u kullanıma hazırlanıyor.\r\n  const navigate = useNavigate();\r\n\r\n  const clearFields = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n    setError('');\r\n    setMessage('');\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/login', { email, password });\r\n      localStorage.setItem('token', res.data.token);\r\n      \r\n      // 3. Adım: Yönlendirme güvenli hale getiriliyor.\r\n      // window.location.href kaldırıldı.\r\n      // 'replace: true' seçeneği, tarayıcı geçmişinden login sayfasını siler.\r\n      navigate('/dashboard', { replace: true });\r\n\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Giriş hatası');\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/register', {\r\n        email,\r\n        password\r\n      });\r\n      setMessage(res.data.message);\r\n      clearFields();\r\n      // Kayıt sonrası kullanıcıyı bilgilendirip login formuna geçiş yapabiliriz.\r\n      setTimeout(() => {\r\n        setFormType('login');\r\n        setMessage(''); // Mesajı temizle\r\n      }, 2000); // 2 saniye sonra\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Kayıt hatası');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\r\n        <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\r\n\r\n        {/* Alanlar aynı kalıyor */}\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"E-posta\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Şifre\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        \r\n        <button type=\"submit\">\r\n          {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\r\n        </button>\r\n\r\n        {error && <p className=\"error\">{error}</p>}\r\n        {message && <p className=\"success\">{message}</p>}\r\n\r\n        <div className=\"form-switch\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setFormType(formType === 'login' ? 'register' : 'login');\r\n              clearFields();\r\n            }}\r\n          >\r\n            {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\r\n          </button>\r\n          {/* Bu butonun yönlendirmesini de 'navigate' ile yapmak daha tutarlıdır. */}\r\n          <button type=\"button\" onClick={() => navigate('/forgot-password')}>\r\n            Şifremi Unuttum\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}