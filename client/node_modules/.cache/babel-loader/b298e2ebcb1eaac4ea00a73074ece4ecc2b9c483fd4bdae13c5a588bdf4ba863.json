{"ast":null,"code":"// // // export default LoginPage;\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n// // import './LoginPage.css';\n// // import { useNavigate } from 'react-router-dom';\n// // import { jwtDecode } from 'jwt-decode';\n\n// // function LoginPage() {\n// //   const [activeTab, setActiveTab] = useState('admin'); // 'admin', 'user', 'register'\n\n// //   const [adminEmail, setAdminEmail] = useState('');\n// //   const [adminPassword, setAdminPassword] = useState('');\n\n// //   const [userEmail, setUserEmail] = useState('');\n// //   const [userPassword, setUserPassword] = useState('');\n\n// //   const [registerName, setRegisterName] = useState('');\n// //   const [registerEmail, setRegisterEmail] = useState('');\n// //   const [registerPassword, setRegisterPassword] = useState('');\n\n// //   const [error, setError] = useState('');\n// //   const navigate = useNavigate();\n\n// //   const clearErrors = () => setError('');\n\n// //   const handleAdminLogin = async (e) => {\n// //     e.preventDefault();\n// //     setError('');\n// //     try {\n// //       const res = await axios.post('http://localhost:5000/api/login', {\n// //         email: adminEmail,\n// //         password: adminPassword\n// //       });\n// //       const token = res.data.token;\n// //       const decoded = jwtDecode(token);\n\n// //       if (decoded.role !== 'admin') {\n// //         setError('Bu alan sadece yöneticilere aittir.');\n// //         return;\n// //       }\n\n// //       localStorage.setItem('token', token);\n// //       navigate('/dashboard');\n// //     } catch (err) {\n// //       setError(err.response?.data?.message || 'Giriş işlemi başarısız.');\n// //     }\n// //   };\n\n// //   const handleUserLogin = async (e) => {\n// //     e.preventDefault();\n// //     setError('');\n// //     try {\n// //       const res = await axios.post('http://localhost:5000/api/login', {\n// //         email: userEmail,\n// //         password: userPassword\n// //       });\n// //       const token = res.data.token;\n// //       localStorage.setItem('token', token);\n// //       navigate('/home');\n// //     } catch (err) {\n// //       setError(err.response?.data?.message || 'Giriş işlemi başarısız.');\n// //     }\n// //   };\n\n// //   const handleRegister = async (e) => {\n// //     e.preventDefault();\n// //     setError('');\n// //     try {\n// //   await axios.post('http://localhost:5000/api/register', {\n// //     name: registerName,\n// //     email: registerEmail,\n// //     password: registerPassword\n// //   });\n// //   alert('Kayıt başarılı! Şimdi giriş yapabilirsiniz.');\n// //   setActiveTab('user');\n// // } catch (err) {\n// //   setError(err.response?.data?.message || 'Kayıt başarısız.');\n// // }\n\n// //   };\n\n// //   return (\n// //     <div className=\"login-container\">\n// //       <div className=\"login-wrapper\">\n// //         <div className=\"role-tabs\">\n// //           <button\n// //             className={`tab-button ${activeTab === 'admin' ? 'active' : ''}`}\n// //             onClick={() => { setActiveTab('admin'); clearErrors(); }}\n// //           >\n// //             Yönetici Girişi\n// //           </button>\n// //           <button\n// //             className={`tab-button ${activeTab === 'user' ? 'active' : ''}`}\n// //             onClick={() => { setActiveTab('user'); clearErrors(); }}\n// //           >\n// //             Kullanıcı Girişi\n// //           </button>\n// //           <button\n// //             className={`tab-button ${activeTab === 'register' ? 'active' : ''}`}\n// //             onClick={() => { setActiveTab('register'); clearErrors(); }}\n// //           >\n// //             Kayıt Ol\n// //           </button>\n// //         </div>\n\n// //         {/* === Yönetici Girişi === */}\n// //         {activeTab === 'admin' && (\n// //           <form className=\"login-form\" onSubmit={handleAdminLogin}>\n// //             <h2>Yönetici Girişi</h2>\n// //             <input\n// //               type=\"email\"\n// //               placeholder=\"E-posta\"\n// //               value={adminEmail}\n// //               onChange={(e) => setAdminEmail(e.target.value)}\n// //               required\n// //             />\n// //             <input\n// //               type=\"password\"\n// //               placeholder=\"Şifre\"\n// //               value={adminPassword}\n// //               onChange={(e) => setAdminPassword(e.target.value)}\n// //               required\n// //             />\n// //             <button type=\"submit\">Giriş Yap</button>\n// //             {error && <p className=\"error\">{error}</p>}\n// //             <div className=\"form-switch\">\n// //               <span onClick={() => navigate('/forgot-password')}>Şifremi Unuttum</span>\n// //             </div>\n// //           </form>\n// //         )}\n\n// //         {/* === Kullanıcı Girişi === */}\n// //         {activeTab === 'user' && (\n// //           <form className=\"login-form\" onSubmit={handleUserLogin}>\n// //             <h2>Kullanıcı Girişi</h2>\n// //             <input\n// //               type=\"email\"\n// //               placeholder=\"E-posta\"\n// //               value={userEmail}\n// //               onChange={(e) => setUserEmail(e.target.value)}\n// //               required\n// //             />\n// //             <input\n// //               type=\"password\"\n// //               placeholder=\"Şifre\"\n// //               value={userPassword}\n// //               onChange={(e) => setUserPassword(e.target.value)}\n// //               required\n// //             />\n// //             <button type=\"submit\">Giriş Yap</button>\n// //             {error && <p className=\"error\">{error}</p>}\n// //             <div className=\"form-switch\">\n// //               <span onClick={() => setActiveTab('register')}>Kaydol</span>\n// //               <span onClick={() => navigate('/forgot-password')}>Şifremi Unuttum</span>\n// //             </div>\n// //           </form>\n// //         )}\n\n// //         {/* === Kayıt Formu === */}\n// //         {activeTab === 'register' && (\n// //           <form className=\"login-form\" onSubmit={handleRegister}>\n// //             <h2>Kayıt Ol</h2>\n// //             <input\n// //               type=\"text\"\n// //               placeholder=\"Ad Soyad\"\n// //               value={registerName}\n// //               onChange={(e) => setRegisterName(e.target.value)}\n// //               required\n// //             />\n// //             <input\n// //               type=\"email\"\n// //               placeholder=\"E-posta\"\n// //               value={registerEmail}\n// //               onChange={(e) => setRegisterEmail(e.target.value)}\n// //               required\n// //             />\n// //             <input\n// //               type=\"password\"\n// //               placeholder=\"Şifre\"\n// //               value={registerPassword}\n// //               onChange={(e) => setRegisterPassword(e.target.value)}\n// //               required\n// //             />\n// //             <button type=\"submit\">Kaydol</button>\n// //             {error && <p className=\"error\">{error}</p>}\n// //           </form>\n// //         )}\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default LoginPage;\n// // BU KODUN TAMAMINI KOPYALAYIP MEVCUT LoginPage.js DOSYANIZLA DEĞİŞTİRİN\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './LoginPage.css'; // Yeni CSS dosyasını kullanacak\n// import { useNavigate } from 'react-router-dom';\n// import { jwtDecode } from 'jwt-decode';\n\n// function LoginPage() {\n//   // Mevcut state ve fonksiyonlarınız olduğu gibi korunuyor.\n//   const [activeTab, setActiveTab] = useState('user'); // Varsayılan olarak kullanıcı girişi daha mantıklı\n//   const [adminEmail, setAdminEmail] = useState('');\n//   const [adminPassword, setAdminPassword] = useState('');\n//   const [userEmail, setUserEmail] = useState('');\n//   const [userPassword, setUserPassword] = useState('');\n//   const [registerName, setRegisterName] = useState('');\n//   const [registerEmail, setRegisterEmail] = useState('');\n//   const [registerPassword, setRegisterPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const clearErrors = () => setError('');\n\n//   const handleAdminLogin = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/login', { email: adminEmail, password: adminPassword });\n//       const token = res.data.token;\n//       const decoded = jwtDecode(token);\n//       if (decoded.role !== 'admin') {\n//         setError('Bu alan sadece yöneticilere aittir.');\n//         return;\n//       }\n//       localStorage.setItem('token', token);\n//       navigate('/dashboard');\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız.');\n//     }\n//   };\n\n//   const handleUserLogin = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/login', { email: userEmail, password: userPassword });\n//       localStorage.setItem('token', res.data.token);\n//       navigate('/home');\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız.');\n//     }\n//   };\n\n//   const handleRegister = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     try {\n//       await axios.post('http://localhost:5000/api/register', { name: registerName, email: registerEmail, password: registerPassword });\n//       alert('Kayıt başarılı! Şimdi giriş yapabilirsiniz.');\n//       setActiveTab('user');\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Kayıt başarısız.');\n//     }\n//   };\n\n//   // YENİ ve MODERN JSX YAPISI\n//   return (\n//     <div className=\"login-page-container\">\n//       {/* Sol Taraf - Görsel Alanı */}\n//       <div className=\"visual-section\">\n//         <div className=\"overlay\"></div>\n//         <div className=\"brand-showcase\">\n//           <h1>BayramlarAuto</h1>\n//           <p>Hayalinizdeki araca bir adım daha yaklaşın.</p>\n//         </div>\n//       </div>\n\n//       {/* Sağ Taraf - Form Alanı */}\n//       <div className=\"form-section\">\n//         <div className=\"login-wrapper\">\n//           <div className=\"role-tabs\">\n//             <button className={`tab-button ${activeTab === 'user' ? 'active' : ''}`} onClick={() => { setActiveTab('user'); clearErrors(); }}>\n//               Kullanıcı Girişi\n//             </button>\n//             <button className={`tab-button ${activeTab === 'register' ? 'active' : ''}`} onClick={() => { setActiveTab('register'); clearErrors(); }}>\n//               Kayıt Ol\n//             </button>\n//             <button className={`tab-button admin-tab ${activeTab === 'admin' ? 'active' : ''}`} onClick={() => { setActiveTab('admin'); clearErrors(); }}>\n//               Yönetici\n//             </button>\n//           </div>\n\n//           <div className=\"form-content\">\n//             {activeTab === 'admin' && (\n//               <form className=\"login-form animate-form\" onSubmit={handleAdminLogin}>\n//                 <h2>Yönetici Girişi</h2>\n//                 <input type=\"email\" placeholder=\"E-posta\" value={adminEmail} onChange={(e) => setAdminEmail(e.target.value)} required />\n//                 <input type=\"password\" placeholder=\"Şifre\" value={adminPassword} onChange={(e) => setAdminPassword(e.target.value)} required />\n//                 <button type=\"submit\">Giriş Yap</button>\n//                 {error && <p className=\"error\">{error}</p>}\n//                 <div className=\"form-links\">\n//                   <span onClick={() => navigate('/forgot-password')}>Şifremi Unuttum</span>\n//                 </div>\n//               </form>\n//             )}\n\n//             {activeTab === 'user' && (\n//               <form className=\"login-form animate-form\" onSubmit={handleUserLogin}>\n//                 <h2>Hoş Geldiniz</h2>\n//                 <input type=\"email\" placeholder=\"E-posta\" value={userEmail} onChange={(e) => setUserEmail(e.target.value)} required />\n//                 <input type=\"password\" placeholder=\"Şifre\" value={userPassword} onChange={(e) => setUserPassword(e.target.value)} required />\n//                 <button type=\"submit\">Giriş Yap</button>\n//                 {error && <p className=\"error\">{error}</p>}\n//                 <div className=\"form-links\">\n//                   <span onClick={() => navigate('/forgot-password')}>Şifremi Unuttum</span>\n//                 </div>\n//               </form>\n//             )}\n\n//             {activeTab === 'register' && (\n//               <form className=\"login-form animate-form\" onSubmit={handleRegister}>\n//                 <h2>Yeni Hesap Oluştur</h2>\n//                 <input type=\"text\" placeholder=\"Ad Soyad\" value={registerName} onChange={(e) => setRegisterName(e.target.value)} required />\n//                 <input type=\"email\" placeholder=\"E-posta\" value={registerEmail} onChange={(e) => setRegisterEmail(e.target.value)} required />\n//                 <input type=\"password\" placeholder=\"Şifre (en az 6 karakter)\" value={registerPassword} onChange={(e) => setRegisterPassword(e.target.value)} required />\n//                 <button type=\"submit\">Hesap Oluştur</button>\n//                 {error && <p className=\"error\">{error}</p>}\n//               </form>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;","map":{"version":3,"names":[],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/LoginPage.js"],"sourcesContent":["// // // export default LoginPage;\r\n// // import React, { useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import './LoginPage.css';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import { jwtDecode } from 'jwt-decode';\r\n\r\n// // function LoginPage() {\r\n// //   const [activeTab, setActiveTab] = useState('admin'); // 'admin', 'user', 'register'\r\n\r\n// //   const [adminEmail, setAdminEmail] = useState('');\r\n// //   const [adminPassword, setAdminPassword] = useState('');\r\n\r\n// //   const [userEmail, setUserEmail] = useState('');\r\n// //   const [userPassword, setUserPassword] = useState('');\r\n\r\n// //   const [registerName, setRegisterName] = useState('');\r\n// //   const [registerEmail, setRegisterEmail] = useState('');\r\n// //   const [registerPassword, setRegisterPassword] = useState('');\r\n\r\n// //   const [error, setError] = useState('');\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const clearErrors = () => setError('');\r\n\r\n// //   const handleAdminLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setError('');\r\n// //     try {\r\n// //       const res = await axios.post('http://localhost:5000/api/login', {\r\n// //         email: adminEmail,\r\n// //         password: adminPassword\r\n// //       });\r\n// //       const token = res.data.token;\r\n// //       const decoded = jwtDecode(token);\r\n\r\n// //       if (decoded.role !== 'admin') {\r\n// //         setError('Bu alan sadece yöneticilere aittir.');\r\n// //         return;\r\n// //       }\r\n\r\n// //       localStorage.setItem('token', token);\r\n// //       navigate('/dashboard');\r\n// //     } catch (err) {\r\n// //       setError(err.response?.data?.message || 'Giriş işlemi başarısız.');\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleUserLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setError('');\r\n// //     try {\r\n// //       const res = await axios.post('http://localhost:5000/api/login', {\r\n// //         email: userEmail,\r\n// //         password: userPassword\r\n// //       });\r\n// //       const token = res.data.token;\r\n// //       localStorage.setItem('token', token);\r\n// //       navigate('/home');\r\n// //     } catch (err) {\r\n// //       setError(err.response?.data?.message || 'Giriş işlemi başarısız.');\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleRegister = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setError('');\r\n// //     try {\r\n// //   await axios.post('http://localhost:5000/api/register', {\r\n// //     name: registerName,\r\n// //     email: registerEmail,\r\n// //     password: registerPassword\r\n// //   });\r\n// //   alert('Kayıt başarılı! Şimdi giriş yapabilirsiniz.');\r\n// //   setActiveTab('user');\r\n// // } catch (err) {\r\n// //   setError(err.response?.data?.message || 'Kayıt başarısız.');\r\n// // }\r\n\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"login-container\">\r\n// //       <div className=\"login-wrapper\">\r\n// //         <div className=\"role-tabs\">\r\n// //           <button\r\n// //             className={`tab-button ${activeTab === 'admin' ? 'active' : ''}`}\r\n// //             onClick={() => { setActiveTab('admin'); clearErrors(); }}\r\n// //           >\r\n// //             Yönetici Girişi\r\n// //           </button>\r\n// //           <button\r\n// //             className={`tab-button ${activeTab === 'user' ? 'active' : ''}`}\r\n// //             onClick={() => { setActiveTab('user'); clearErrors(); }}\r\n// //           >\r\n// //             Kullanıcı Girişi\r\n// //           </button>\r\n// //           <button\r\n// //             className={`tab-button ${activeTab === 'register' ? 'active' : ''}`}\r\n// //             onClick={() => { setActiveTab('register'); clearErrors(); }}\r\n// //           >\r\n// //             Kayıt Ol\r\n// //           </button>\r\n// //         </div>\r\n\r\n// //         {/* === Yönetici Girişi === */}\r\n// //         {activeTab === 'admin' && (\r\n// //           <form className=\"login-form\" onSubmit={handleAdminLogin}>\r\n// //             <h2>Yönetici Girişi</h2>\r\n// //             <input\r\n// //               type=\"email\"\r\n// //               placeholder=\"E-posta\"\r\n// //               value={adminEmail}\r\n// //               onChange={(e) => setAdminEmail(e.target.value)}\r\n// //               required\r\n// //             />\r\n// //             <input\r\n// //               type=\"password\"\r\n// //               placeholder=\"Şifre\"\r\n// //               value={adminPassword}\r\n// //               onChange={(e) => setAdminPassword(e.target.value)}\r\n// //               required\r\n// //             />\r\n// //             <button type=\"submit\">Giriş Yap</button>\r\n// //             {error && <p className=\"error\">{error}</p>}\r\n// //             <div className=\"form-switch\">\r\n// //               <span onClick={() => navigate('/forgot-password')}>Şifremi Unuttum</span>\r\n// //             </div>\r\n// //           </form>\r\n// //         )}\r\n\r\n// //         {/* === Kullanıcı Girişi === */}\r\n// //         {activeTab === 'user' && (\r\n// //           <form className=\"login-form\" onSubmit={handleUserLogin}>\r\n// //             <h2>Kullanıcı Girişi</h2>\r\n// //             <input\r\n// //               type=\"email\"\r\n// //               placeholder=\"E-posta\"\r\n// //               value={userEmail}\r\n// //               onChange={(e) => setUserEmail(e.target.value)}\r\n// //               required\r\n// //             />\r\n// //             <input\r\n// //               type=\"password\"\r\n// //               placeholder=\"Şifre\"\r\n// //               value={userPassword}\r\n// //               onChange={(e) => setUserPassword(e.target.value)}\r\n// //               required\r\n// //             />\r\n// //             <button type=\"submit\">Giriş Yap</button>\r\n// //             {error && <p className=\"error\">{error}</p>}\r\n// //             <div className=\"form-switch\">\r\n// //               <span onClick={() => setActiveTab('register')}>Kaydol</span>\r\n// //               <span onClick={() => navigate('/forgot-password')}>Şifremi Unuttum</span>\r\n// //             </div>\r\n// //           </form>\r\n// //         )}\r\n\r\n// //         {/* === Kayıt Formu === */}\r\n// //         {activeTab === 'register' && (\r\n// //           <form className=\"login-form\" onSubmit={handleRegister}>\r\n// //             <h2>Kayıt Ol</h2>\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               placeholder=\"Ad Soyad\"\r\n// //               value={registerName}\r\n// //               onChange={(e) => setRegisterName(e.target.value)}\r\n// //               required\r\n// //             />\r\n// //             <input\r\n// //               type=\"email\"\r\n// //               placeholder=\"E-posta\"\r\n// //               value={registerEmail}\r\n// //               onChange={(e) => setRegisterEmail(e.target.value)}\r\n// //               required\r\n// //             />\r\n// //             <input\r\n// //               type=\"password\"\r\n// //               placeholder=\"Şifre\"\r\n// //               value={registerPassword}\r\n// //               onChange={(e) => setRegisterPassword(e.target.value)}\r\n// //               required\r\n// //             />\r\n// //             <button type=\"submit\">Kaydol</button>\r\n// //             {error && <p className=\"error\">{error}</p>}\r\n// //           </form>\r\n// //         )}\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default LoginPage;\r\n// // BU KODUN TAMAMINI KOPYALAYIP MEVCUT LoginPage.js DOSYANIZLA DEĞİŞTİRİN\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './LoginPage.css'; // Yeni CSS dosyasını kullanacak\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { jwtDecode } from 'jwt-decode';\r\n\r\n// function LoginPage() {\r\n//   // Mevcut state ve fonksiyonlarınız olduğu gibi korunuyor.\r\n//   const [activeTab, setActiveTab] = useState('user'); // Varsayılan olarak kullanıcı girişi daha mantıklı\r\n//   const [adminEmail, setAdminEmail] = useState('');\r\n//   const [adminPassword, setAdminPassword] = useState('');\r\n//   const [userEmail, setUserEmail] = useState('');\r\n//   const [userPassword, setUserPassword] = useState('');\r\n//   const [registerName, setRegisterName] = useState('');\r\n//   const [registerEmail, setRegisterEmail] = useState('');\r\n//   const [registerPassword, setRegisterPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const clearErrors = () => setError('');\r\n\r\n//   const handleAdminLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/login', { email: adminEmail, password: adminPassword });\r\n//       const token = res.data.token;\r\n//       const decoded = jwtDecode(token);\r\n//       if (decoded.role !== 'admin') {\r\n//         setError('Bu alan sadece yöneticilere aittir.');\r\n//         return;\r\n//       }\r\n//       localStorage.setItem('token', token);\r\n//       navigate('/dashboard');\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız.');\r\n//     }\r\n//   };\r\n\r\n//   const handleUserLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/login', { email: userEmail, password: userPassword });\r\n//       localStorage.setItem('token', res.data.token);\r\n//       navigate('/home');\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız.');\r\n//     }\r\n//   };\r\n\r\n//   const handleRegister = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n//     try {\r\n//       await axios.post('http://localhost:5000/api/register', { name: registerName, email: registerEmail, password: registerPassword });\r\n//       alert('Kayıt başarılı! Şimdi giriş yapabilirsiniz.');\r\n//       setActiveTab('user');\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Kayıt başarısız.');\r\n//     }\r\n//   };\r\n\r\n//   // YENİ ve MODERN JSX YAPISI\r\n//   return (\r\n//     <div className=\"login-page-container\">\r\n//       {/* Sol Taraf - Görsel Alanı */}\r\n//       <div className=\"visual-section\">\r\n//         <div className=\"overlay\"></div>\r\n//         <div className=\"brand-showcase\">\r\n//           <h1>BayramlarAuto</h1>\r\n//           <p>Hayalinizdeki araca bir adım daha yaklaşın.</p>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Sağ Taraf - Form Alanı */}\r\n//       <div className=\"form-section\">\r\n//         <div className=\"login-wrapper\">\r\n//           <div className=\"role-tabs\">\r\n//             <button className={`tab-button ${activeTab === 'user' ? 'active' : ''}`} onClick={() => { setActiveTab('user'); clearErrors(); }}>\r\n//               Kullanıcı Girişi\r\n//             </button>\r\n//             <button className={`tab-button ${activeTab === 'register' ? 'active' : ''}`} onClick={() => { setActiveTab('register'); clearErrors(); }}>\r\n//               Kayıt Ol\r\n//             </button>\r\n//             <button className={`tab-button admin-tab ${activeTab === 'admin' ? 'active' : ''}`} onClick={() => { setActiveTab('admin'); clearErrors(); }}>\r\n//               Yönetici\r\n//             </button>\r\n//           </div>\r\n\r\n//           <div className=\"form-content\">\r\n//             {activeTab === 'admin' && (\r\n//               <form className=\"login-form animate-form\" onSubmit={handleAdminLogin}>\r\n//                 <h2>Yönetici Girişi</h2>\r\n//                 <input type=\"email\" placeholder=\"E-posta\" value={adminEmail} onChange={(e) => setAdminEmail(e.target.value)} required />\r\n//                 <input type=\"password\" placeholder=\"Şifre\" value={adminPassword} onChange={(e) => setAdminPassword(e.target.value)} required />\r\n//                 <button type=\"submit\">Giriş Yap</button>\r\n//                 {error && <p className=\"error\">{error}</p>}\r\n//                 <div className=\"form-links\">\r\n//                   <span onClick={() => navigate('/forgot-password')}>Şifremi Unuttum</span>\r\n//                 </div>\r\n//               </form>\r\n//             )}\r\n\r\n//             {activeTab === 'user' && (\r\n//               <form className=\"login-form animate-form\" onSubmit={handleUserLogin}>\r\n//                 <h2>Hoş Geldiniz</h2>\r\n//                 <input type=\"email\" placeholder=\"E-posta\" value={userEmail} onChange={(e) => setUserEmail(e.target.value)} required />\r\n//                 <input type=\"password\" placeholder=\"Şifre\" value={userPassword} onChange={(e) => setUserPassword(e.target.value)} required />\r\n//                 <button type=\"submit\">Giriş Yap</button>\r\n//                 {error && <p className=\"error\">{error}</p>}\r\n//                 <div className=\"form-links\">\r\n//                   <span onClick={() => navigate('/forgot-password')}>Şifremi Unuttum</span>\r\n//                 </div>\r\n//               </form>\r\n//             )}\r\n\r\n//             {activeTab === 'register' && (\r\n//               <form className=\"login-form animate-form\" onSubmit={handleRegister}>\r\n//                 <h2>Yeni Hesap Oluştur</h2>\r\n//                 <input type=\"text\" placeholder=\"Ad Soyad\" value={registerName} onChange={(e) => setRegisterName(e.target.value)} required />\r\n//                 <input type=\"email\" placeholder=\"E-posta\" value={registerEmail} onChange={(e) => setRegisterEmail(e.target.value)} required />\r\n//                 <input type=\"password\" placeholder=\"Şifre (en az 6 karakter)\" value={registerPassword} onChange={(e) => setRegisterPassword(e.target.value)} required />\r\n//                 <button type=\"submit\">Hesap Oluştur</button>\r\n//                 {error && <p className=\"error\">{error}</p>}\r\n//               </form>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LoginPage;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}