{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\ChatModal.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import { jwtDecode } from 'jwt-decode';\n// import axios from 'axios';\n// import './ChatModal.css';\n// import { socket } from './socket';\n\n// function ChatModal({ vehicle, closeModal }) {\n//   const [messages, setMessages] = useState([]);\n//   const [newMessage, setNewMessage] = useState('');\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const messagesEndRef = useRef(null);\n\n//   // DAHA SAĞLAM useEffect YAPISI\n//   useEffect(() => {\n//     // 1. Kullanıcı kimliğini al ve doğrula\n//     const token = localStorage.getItem('token');\n//     if (!token) {\n//       console.error(\"Token bulunamadı, sohbet kapatılıyor.\");\n//       closeModal();\n//       return; // Token yoksa işlemi hemen bitir.\n//     }\n\n//     let decodedUser;\n//     try {\n//       decodedUser = jwtDecode(token);\n//       setCurrentUser(decodedUser); // UI'ın doğru render olması için state'i ayarla\n//     } catch (e) {\n//       console.error(\"Geçersiz Token:\", e);\n//       closeModal();\n//       return; // Hatalı token ise işlemi bitir.\n//     }\n\n//     // 2. Artık kullanıcıyı bildiğimize göre, socket bağlantısını kur\n//     // const conversationId = `user_${decodedUser.id}-admin_1-vehicle_${vehicle.id}`;\n// const conversationId = currentUser ? `user_${currentUser.id}-admin_1` : null;\n//     socket.connect();\n\n//     // 3. Socket olay dinleyicilerini (listeners) ayarla\n//     function onConnect() {\n//       socket.emit('join_room', conversationId);\n//     }\n\n//     function handleLoadMessages(loadedMessages) {\n//       setMessages(loadedMessages);\n//     }\n\n//     function handleReceiveMessage(message) {\n//       // Sadece bu sohbete ait mesajları ekle\n//       if (message.conversation_id === conversationId) {\n//         setMessages((prev) => [...prev, message]);\n//       }\n//     }\n\n//     function handleMessageDeleted({ messageId }) {\n//       setMessages((prevMessages) => prevMessages.filter(msg => msg.id !== messageId));\n//     }\n\n//     socket.on('connect', onConnect);\n//     socket.on('load_messages', handleLoadMessages);\n//     socket.on('receive_message', handleReceiveMessage);\n//     socket.on('message_deleted', handleMessageDeleted);\n\n//     // Eğer socket zaten bağlıysa, odaya hemen katıl\n//     if (socket.connected) {\n//       onConnect();\n//     }\n\n//     // 4. Temizleme fonksiyonu: Modal kapandığında tüm bağlantıları ve dinleyicileri kaldır\n//     return () => {\n//       socket.off('connect', onConnect);\n//       socket.off('load_messages', handleLoadMessages);\n//       socket.off('receive_message', handleReceiveMessage);\n//       socket.off('message_deleted', handleMessageDeleted);\n//       socket.disconnect();\n//     };\n\n//   // Bu effect, sadece farklı bir araç için modal açıldığında veya kapatma fonksiyonu değiştiğinde çalışır.\n//   }, [vehicle.id, closeModal]);\n\n//   // Mesajlar her değiştiğinde en sona kaydır\n//   useEffect(() => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   }, [messages]);\n\n//   const handleSendMessage = (e) => {\n//     e.preventDefault();\n//     const trimmedMessage = newMessage.trim();\n//     if (trimmedMessage === '' || !currentUser) return;\n\n//     const messageData = {\n//       conversation_id: `user_${currentUser.id}-admin_1-vehicle_${vehicle.id}`,\n//       sender_id: currentUser.id, // State'ten gelen en güncel ID\n//       receiver_id: 1, // Admin ID'si (varsayım)\n//       vehicle_id: vehicle.id,\n//       message: trimmedMessage,\n//     };\n\n//     socket.emit('send_message', messageData);\n//     setNewMessage('');\n//   };\n\n//   const handleDeleteMessage = async (messageId) => {\n//     if (window.confirm(\"Mesajı silmek istediğinizden emin misiniz?\")) {\n//         try {\n//             const token = localStorage.getItem('token');\n//             await axios.delete(`http://localhost:5000/api/messages/${messageId}`, {\n//                 headers: { 'Authorization': `Bearer ${token}` }\n//             });\n//         } catch (error) {\n//             console.error(\"Mesaj silinemedi:\", error);\n//             alert(error.response?.data?.message || \"Mesaj silinirken bir hata oluştu.\");\n//         }\n//     }\n//   };\n//   return (\n//     <div className=\"chat-modal-overlay\" onClick={closeModal}>\n//       <div className=\"chat-modal-content\" onClick={(e) => e.stopPropagation()}>\n//         <div className=\"chat-header\">\n//           <h3>{vehicle.brand} {vehicle.model}</h3>\n//           <span>Satıcı ile Mesajlaşma</span>\n//           <button onClick={closeModal} className=\"close-chat-btn\">×</button>\n//         </div>\n//         <div className=\"chat-messages\">\n//           {messages.map((msg) => {\n//             const isSentByUser = parseInt(msg.sender_id) === currentUser?.id;\n//             return (\n//               <div\n//                 key={msg.id}\n//                 className={`message-wrapper ${isSentByUser ? 'sent' : 'received'}`}\n//               >\n//                 <div className=\"message-bubble\">\n//                   {isSentByUser && (\n//                     <button \n//                       className=\"delete-message-btn\" \n//                       onClick={() => handleDeleteMessage(msg.id)}\n//                       title=\"Mesajı Sil\"\n//                     >\n//                       ×\n//                     </button>\n//                   )}\n//                   <p>{msg.message}</p>\n//                   <span className=\"message-time\">\n//                     {new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n//                   </span>\n//                 </div>\n//               </div>\n//             );\n//           })}\n//           <div ref={messagesEndRef} />\n//         </div>\n//         <form className=\"chat-input-form\" onSubmit={handleSendMessage}>\n//           <input\n//             type=\"text\"\n//             value={newMessage}\n//             onChange={(e) => setNewMessage(e.target.value)}\n//             placeholder=\"Mesajınızı yazın...\"\n//             disabled={!currentUser}\n//           />\n//           <button type=\"submit\" disabled={!currentUser || !newMessage.trim()}>Gönder</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ChatModal;\n// ChatModal.js (TAM ve EKSİKSİZ KOD)\n\n// ChatModal.js (TAM ve EKSİKSİZ KOD)\n\n// ChatModal.js (TAM ve EKSİKSİZ KOD)\n\n// ChatModal.js (TAM ve EKSİKSİZ KOD)\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\nimport './ChatModal.css';\nimport { socket } from './socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatModal({\n  vehicle,\n  closeModal\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        setCurrentUser(jwtDecode(token));\n      } catch (e) {\n        closeModal();\n      }\n    } else {\n      closeModal();\n    }\n  }, [closeModal]);\n  const conversationId = currentUser ? `user_${currentUser.id}-vehicle_${vehicle.id}-admin_1` : null;\n  useEffect(() => {\n    if (!currentUser || !conversationId) return;\n    if (!socket.connected) socket.connect();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      closeModal();\n      return;\n    }\n    const onConnect = () => socket.emit('join_room', {\n      conversationId,\n      token\n    });\n    const handleLoadMessages = loadedMessages => setMessages(loadedMessages);\n    const handleReceiveMessage = message => {\n      if (message.conversation_id === conversationId) setMessages(prev => [...prev, message]);\n    };\n    const handleMessageDeleted = ({\n      messageId\n    }) => setMessages(prev => prev.filter(msg => msg.id !== messageId));\n    socket.on('connect', onConnect);\n    socket.on('load_messages', handleLoadMessages);\n    socket.on('receive_message', handleReceiveMessage);\n    socket.on('message_deleted', handleMessageDeleted);\n    if (socket.connected) onConnect();\n    return () => {\n      socket.off('connect', onConnect);\n      socket.off('load_messages', handleLoadMessages);\n      socket.off('receive_message', handleReceiveMessage);\n      socket.off('message_deleted', handleMessageDeleted);\n    };\n  }, [currentUser, conversationId, closeModal]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    const trimmedMessage = newMessage.trim();\n    if (trimmedMessage === '' || !currentUser || !conversationId) return;\n    const messageData = {\n      conversation_id: conversationId,\n      sender_id: currentUser.id,\n      receiver_id: 1,\n      // Admin ID'si\n      vehicle_id: vehicle.id,\n      message: trimmedMessage\n    };\n    socket.emit('send_message', messageData);\n    setNewMessage('');\n  };\n  const handleDeleteMessage = async messageId => {\n    if (window.confirm(\"Mesajı silmek istediğinizden emin misiniz?\")) {\n      try {\n        const token = localStorage.getItem('token');\n        await axios.delete(`http://localhost:5000/api/messages/${messageId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      } catch (error) {\n        var _error$response, _error$response$data;\n        alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Mesaj silinirken bir hata oluştu.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-modal-overlay\",\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [vehicle.brand, \" \", vehicle.model]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Sat\\u0131c\\u0131 ile Mesajla\\u015Fma\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"close-chat-btn\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map(msg => {\n          const isSentByUser = currentUser ? parseInt(msg.sender_id) === currentUser.id : false;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-wrapper ${isSentByUser ? 'sent' : 'received'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble\",\n              children: [isSentByUser && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-message-btn\",\n                onClick: () => handleDeleteMessage(msg.id),\n                title: \"Mesaj\\u0131 Sil\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: msg.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: new Date(msg.created_at).toLocaleTimeString([], {\n                  hour: '2-digit',\n                  minute: '2-digit'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)\n          }, msg.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat-input-form\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Mesaj\\u0131n\\u0131z\\u0131 yaz\\u0131n...\",\n          disabled: !currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !currentUser || !newMessage.trim(),\n          children: \"G\\xF6nder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatModal, \"6DufjDdN5Qn14yafmoQ2OcC0JIY=\");\n_c = ChatModal;\nexport default ChatModal;\nvar _c;\n$RefreshReg$(_c, \"ChatModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jwtDecode","axios","socket","jsxDEV","_jsxDEV","ChatModal","vehicle","closeModal","_s","messages","setMessages","newMessage","setNewMessage","currentUser","setCurrentUser","messagesEndRef","token","localStorage","getItem","e","conversationId","id","connected","connect","onConnect","emit","handleLoadMessages","loadedMessages","handleReceiveMessage","message","conversation_id","prev","handleMessageDeleted","messageId","filter","msg","on","off","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","preventDefault","trimmedMessage","trim","messageData","sender_id","receiver_id","vehicle_id","handleDeleteMessage","window","confirm","delete","headers","error","_error$response","_error$response$data","alert","response","data","className","onClick","children","stopPropagation","brand","model","fileName","_jsxFileName","lineNumber","columnNumber","map","isSentByUser","parseInt","title","Date","created_at","toLocaleTimeString","hour","minute","ref","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/ChatModal.js"],"sourcesContent":["\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import { jwtDecode } from 'jwt-decode';\r\n// import axios from 'axios';\r\n// import './ChatModal.css';\r\n// import { socket } from './socket';\r\n\r\n// function ChatModal({ vehicle, closeModal }) {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [newMessage, setNewMessage] = useState('');\r\n//   const [currentUser, setCurrentUser] = useState(null);\r\n//   const messagesEndRef = useRef(null);\r\n\r\n//   // DAHA SAĞLAM useEffect YAPISI\r\n//   useEffect(() => {\r\n//     // 1. Kullanıcı kimliğini al ve doğrula\r\n//     const token = localStorage.getItem('token');\r\n//     if (!token) {\r\n//       console.error(\"Token bulunamadı, sohbet kapatılıyor.\");\r\n//       closeModal();\r\n//       return; // Token yoksa işlemi hemen bitir.\r\n//     }\r\n\r\n//     let decodedUser;\r\n//     try {\r\n//       decodedUser = jwtDecode(token);\r\n//       setCurrentUser(decodedUser); // UI'ın doğru render olması için state'i ayarla\r\n//     } catch (e) {\r\n//       console.error(\"Geçersiz Token:\", e);\r\n//       closeModal();\r\n//       return; // Hatalı token ise işlemi bitir.\r\n//     }\r\n    \r\n//     // 2. Artık kullanıcıyı bildiğimize göre, socket bağlantısını kur\r\n//     // const conversationId = `user_${decodedUser.id}-admin_1-vehicle_${vehicle.id}`;\r\n// const conversationId = currentUser ? `user_${currentUser.id}-admin_1` : null;\r\n//     socket.connect();\r\n\r\n//     // 3. Socket olay dinleyicilerini (listeners) ayarla\r\n//     function onConnect() {\r\n//       socket.emit('join_room', conversationId);\r\n//     }\r\n    \r\n//     function handleLoadMessages(loadedMessages) {\r\n//       setMessages(loadedMessages);\r\n//     }\r\n\r\n//     function handleReceiveMessage(message) {\r\n//       // Sadece bu sohbete ait mesajları ekle\r\n//       if (message.conversation_id === conversationId) {\r\n//         setMessages((prev) => [...prev, message]);\r\n//       }\r\n//     }\r\n\r\n//     function handleMessageDeleted({ messageId }) {\r\n//       setMessages((prevMessages) => prevMessages.filter(msg => msg.id !== messageId));\r\n//     }\r\n\r\n//     socket.on('connect', onConnect);\r\n//     socket.on('load_messages', handleLoadMessages);\r\n//     socket.on('receive_message', handleReceiveMessage);\r\n//     socket.on('message_deleted', handleMessageDeleted);\r\n    \r\n//     // Eğer socket zaten bağlıysa, odaya hemen katıl\r\n//     if (socket.connected) {\r\n//       onConnect();\r\n//     }\r\n\r\n//     // 4. Temizleme fonksiyonu: Modal kapandığında tüm bağlantıları ve dinleyicileri kaldır\r\n//     return () => {\r\n//       socket.off('connect', onConnect);\r\n//       socket.off('load_messages', handleLoadMessages);\r\n//       socket.off('receive_message', handleReceiveMessage);\r\n//       socket.off('message_deleted', handleMessageDeleted);\r\n//       socket.disconnect();\r\n//     };\r\n    \r\n//   // Bu effect, sadece farklı bir araç için modal açıldığında veya kapatma fonksiyonu değiştiğinde çalışır.\r\n//   }, [vehicle.id, closeModal]);\r\n\r\n//   // Mesajlar her değiştiğinde en sona kaydır\r\n//   useEffect(() => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n//   }, [messages]);\r\n\r\n//   const handleSendMessage = (e) => {\r\n//     e.preventDefault();\r\n//     const trimmedMessage = newMessage.trim();\r\n//     if (trimmedMessage === '' || !currentUser) return;\r\n\r\n//     const messageData = {\r\n//       conversation_id: `user_${currentUser.id}-admin_1-vehicle_${vehicle.id}`,\r\n//       sender_id: currentUser.id, // State'ten gelen en güncel ID\r\n//       receiver_id: 1, // Admin ID'si (varsayım)\r\n//       vehicle_id: vehicle.id,\r\n//       message: trimmedMessage,\r\n//     };\r\n\r\n//     socket.emit('send_message', messageData);\r\n//     setNewMessage('');\r\n//   };\r\n\r\n//   const handleDeleteMessage = async (messageId) => {\r\n//     if (window.confirm(\"Mesajı silmek istediğinizden emin misiniz?\")) {\r\n//         try {\r\n//             const token = localStorage.getItem('token');\r\n//             await axios.delete(`http://localhost:5000/api/messages/${messageId}`, {\r\n//                 headers: { 'Authorization': `Bearer ${token}` }\r\n//             });\r\n//         } catch (error) {\r\n//             console.error(\"Mesaj silinemedi:\", error);\r\n//             alert(error.response?.data?.message || \"Mesaj silinirken bir hata oluştu.\");\r\n//         }\r\n//     }\r\n//   };\r\n//   return (\r\n//     <div className=\"chat-modal-overlay\" onClick={closeModal}>\r\n//       <div className=\"chat-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n//         <div className=\"chat-header\">\r\n//           <h3>{vehicle.brand} {vehicle.model}</h3>\r\n//           <span>Satıcı ile Mesajlaşma</span>\r\n//           <button onClick={closeModal} className=\"close-chat-btn\">×</button>\r\n//         </div>\r\n//         <div className=\"chat-messages\">\r\n//           {messages.map((msg) => {\r\n//             const isSentByUser = parseInt(msg.sender_id) === currentUser?.id;\r\n//             return (\r\n//               <div\r\n//                 key={msg.id}\r\n//                 className={`message-wrapper ${isSentByUser ? 'sent' : 'received'}`}\r\n//               >\r\n//                 <div className=\"message-bubble\">\r\n//                   {isSentByUser && (\r\n//                     <button \r\n//                       className=\"delete-message-btn\" \r\n//                       onClick={() => handleDeleteMessage(msg.id)}\r\n//                       title=\"Mesajı Sil\"\r\n//                     >\r\n//                       ×\r\n//                     </button>\r\n//                   )}\r\n//                   <p>{msg.message}</p>\r\n//                   <span className=\"message-time\">\r\n//                     {new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n//                   </span>\r\n//                 </div>\r\n//               </div>\r\n//             );\r\n//           })}\r\n//           <div ref={messagesEndRef} />\r\n//         </div>\r\n//         <form className=\"chat-input-form\" onSubmit={handleSendMessage}>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={newMessage}\r\n//             onChange={(e) => setNewMessage(e.target.value)}\r\n//             placeholder=\"Mesajınızı yazın...\"\r\n//             disabled={!currentUser}\r\n//           />\r\n//           <button type=\"submit\" disabled={!currentUser || !newMessage.trim()}>Gönder</button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ChatModal;\r\n// ChatModal.js (TAM ve EKSİKSİZ KOD)\r\n\r\n// ChatModal.js (TAM ve EKSİKSİZ KOD)\r\n\r\n// ChatModal.js (TAM ve EKSİKSİZ KOD)\r\n\r\n// ChatModal.js (TAM ve EKSİKSİZ KOD)\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport axios from 'axios';\r\nimport './ChatModal.css';\r\nimport { socket } from './socket';\r\n\r\nfunction ChatModal({ vehicle, closeModal }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try { setCurrentUser(jwtDecode(token)); } catch (e) { closeModal(); }\r\n    } else {\r\n      closeModal();\r\n    }\r\n  }, [closeModal]);\r\n\r\n  const conversationId = currentUser ? `user_${currentUser.id}-vehicle_${vehicle.id}-admin_1` : null;\r\n\r\n  useEffect(() => {\r\n    if (!currentUser || !conversationId) return;\r\n    if (!socket.connected) socket.connect();\r\n    \r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n        closeModal();\r\n        return;\r\n    }\r\n\r\n    const onConnect = () => socket.emit('join_room', { conversationId, token });\r\n    const handleLoadMessages = (loadedMessages) => setMessages(loadedMessages);\r\n    const handleReceiveMessage = (message) => {\r\n      if (message.conversation_id === conversationId) setMessages((prev) => [...prev, message]);\r\n    };\r\n    const handleMessageDeleted = ({ messageId }) => setMessages((prev) => prev.filter(msg => msg.id !== messageId));\r\n\r\n    socket.on('connect', onConnect);\r\n    socket.on('load_messages', handleLoadMessages);\r\n    socket.on('receive_message', handleReceiveMessage);\r\n    socket.on('message_deleted', handleMessageDeleted);\r\n    \r\n    if (socket.connected) onConnect();\r\n\r\n    return () => {\r\n      socket.off('connect', onConnect);\r\n      socket.off('load_messages', handleLoadMessages);\r\n      socket.off('receive_message', handleReceiveMessage);\r\n      socket.off('message_deleted', handleMessageDeleted);\r\n    };\r\n  }, [currentUser, conversationId, closeModal]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    const trimmedMessage = newMessage.trim();\r\n    if (trimmedMessage === '' || !currentUser || !conversationId) return;\r\n\r\n    const messageData = {\r\n      conversation_id: conversationId,\r\n      sender_id: currentUser.id,\r\n      receiver_id: 1, // Admin ID'si\r\n      vehicle_id: vehicle.id,\r\n      message: trimmedMessage,\r\n    };\r\n\r\n    socket.emit('send_message', messageData);\r\n    setNewMessage('');\r\n  };\r\n\r\n  const handleDeleteMessage = async (messageId) => {\r\n    if (window.confirm(\"Mesajı silmek istediğinizden emin misiniz?\")) {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            await axios.delete(`http://localhost:5000/api/messages/${messageId}`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n        } catch (error) {\r\n            alert(error.response?.data?.message || \"Mesaj silinirken bir hata oluştu.\");\r\n        }\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"chat-modal-overlay\" onClick={closeModal}>\r\n      <div className=\"chat-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"chat-header\">\r\n          <h3>{vehicle.brand} {vehicle.model}</h3>\r\n          <span>Satıcı ile Mesajlaşma</span>\r\n          <button onClick={closeModal} className=\"close-chat-btn\">×</button>\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n          {messages.map((msg) => {\r\n            const isSentByUser = currentUser ? parseInt(msg.sender_id) === currentUser.id : false;\r\n            return (\r\n              <div key={msg.id} className={`message-wrapper ${isSentByUser ? 'sent' : 'received'}`}>\r\n                <div className=\"message-bubble\">\r\n                  {isSentByUser && (\r\n                    <button className=\"delete-message-btn\" onClick={() => handleDeleteMessage(msg.id)} title=\"Mesajı Sil\">×</button>\r\n                  )}\r\n                  <p>{msg.message}</p>\r\n                  <span className=\"message-time\">{new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        <form className=\"chat-input-form\" onSubmit={handleSendMessage}>\r\n          <input type=\"text\" value={newMessage} onChange={(e) => setNewMessage(e.target.value)} placeholder=\"Mesajınızı yazın...\" disabled={!currentUser} />\r\n          <button type=\"submit\" disabled={!currentUser || !newMessage.trim()}>Gönder</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatModal;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}