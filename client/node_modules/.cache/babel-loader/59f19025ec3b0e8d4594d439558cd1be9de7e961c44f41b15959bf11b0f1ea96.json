{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\AdminChatBox.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import { jwtDecode } from 'jwt-decode';\n// import axios from 'axios';\n// import './AdminChatBox.css';\n// import { socket } from './socket';\n\n// function AdminChatBox({ conversationId }) {\n//   const [messages, setMessages] = useState([]);\n//   const [newMessage, setNewMessage] = useState('');\n//   const [adminUser, setAdminUser] = useState(null);\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//       try {\n//         setAdminUser(jwtDecode(token));\n//       } catch (error) { \n//         console.error(\"Admin token decode error:\", error);\n//       }\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     if (!conversationId || !adminUser) {\n//         setMessages([]); // Sohbet değiştiğinde eski mesajları temizle\n//         return;\n//     }\n\n//     socket.connect();\n\n//     const onConnect = () => socket.emit('join_room', conversationId);\n//     const handleLoadMessages = (loadedMessages) => setMessages(loadedMessages);\n//     const handleReceiveMessage = (message) => {\n//       if (message.conversation_id === conversationId) {\n//         setMessages(prev => [...prev, message]);\n//       }\n//     };\n//     const handleMessageDeleted = ({ messageId }) => {\n//       setMessages(prev => prev.filter(msg => msg.id !== messageId));\n//     };\n//     const handleConversationDeleted = () => {\n//         // Eğer tüm sohbet silinirse, bu sohbet kutusunu temizle\n//         setMessages([]);\n//     };\n\n//     socket.on('connect', onConnect);\n//     socket.on('load_messages', handleLoadMessages);\n//     socket.on('receive_message', handleReceiveMessage);\n//     socket.on('message_deleted', handleMessageDeleted);\n//     socket.on('conversation_deleted', handleConversationDeleted); // Yeni dinleyici\n\n//     if (socket.connected) {\n//         onConnect();\n//     }\n\n//     return () => {\n//       socket.off('connect', onConnect);\n//       socket.off('load_messages', handleLoadMessages);\n//       socket.off('receive_message', handleReceiveMessage);\n//       socket.off('message_deleted', handleMessageDeleted);\n//       socket.off('conversation_deleted', handleConversationDeleted); // Temizle\n//     };\n//   }, [conversationId, adminUser]);\n\n//   useEffect(() => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   }, [messages]);\n\n//   const handleSendMessage = (e) => {\n//     e.preventDefault();\n//     const trimmedMessage = newMessage.trim();\n//     if (trimmedMessage === '' || !adminUser) return;\n\n//     const userIdPart = conversationId.split('-').find(p => p.startsWith('user_'));\n//     const vehicleIdPart = conversationId.split('-').find(p => p.startsWith('vehicle_'));\n//     if (!userIdPart) return;\n\n//     const receiver_id = parseInt(userIdPart.split('_')[1]);\n//     const vehicle_id = vehicleIdPart ? parseInt(vehicleIdPart.split('_')[1]) : null;\n\n//     socket.emit('send_message', {\n//       conversation_id: conversationId,\n//       sender_id: adminUser.id,\n//       receiver_id,\n//       vehicle_id,\n//       message: trimmedMessage,\n//     });\n//     setNewMessage('');\n//   };\n\n//   const handleDeleteMessage = async (messageId) => {\n//     if (window.confirm(\"Bu mesajı kalıcı olarak silmek istediğinizden emin misiniz?\")) {\n//         try {\n//             const token = localStorage.getItem('token');\n//             await axios.delete(`http://localhost:5000/api/messages/${messageId}`, {\n//                 headers: { 'Authorization': `Bearer ${token}` }\n//             });\n//         } catch (error) {\n//             alert(error.response?.data?.message || \"Mesaj silinirken bir hata oluştu.\");\n//         }\n//     }\n//   };\n\n//   if (!conversationId) {\n//     return <div className=\"admin-chat-box-empty\"><p>Görüntülemek için bir konuşma seçin.</p></div>;\n//   }\n\n//   if (messages.length === 0) {\n//     return (\n//          <div className=\"admin-chat-box\">\n//             <div className=\"chat-messages-admin\">\n//                  <div ref={messagesEndRef} />\n//             </div>\n//              <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\n//                 <input type=\"text\" value={newMessage} onChange={(e) => setNewMessage(e.target.value)} placeholder=\"Cevabınızı yazın...\" />\n//                 <button type=\"submit\" disabled={!newMessage.trim()}>➢</button>\n//             </form>\n//         </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"admin-chat-box\">\n//       <div className=\"chat-messages-admin\">\n//         {messages.map((msg) => {\n//           const isAdminMessage = parseInt(msg.sender_id) === adminUser?.id;\n//           return (\n//             <div key={msg.id} className={`message-container ${isAdminMessage ? 'admin-message' : 'user-message'}`}>\n//               <div className={`message-bubble ${isAdminMessage ? 'admin-bubble' : 'user-bubble'}`}>\n//                 <button \n//                     className=\"delete-message-btn\" \n//                     onClick={() => handleDeleteMessage(msg.id)}\n//                     title=\"Mesajı Sil\"\n//                 >\n//                     ×\n//                 </button>\n//                 <p>{msg.message}</p>\n//                 <span className=\"message-time\">\n//                   {new Date(msg.created_at).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\n//                 </span>\n//               </div>\n//             </div>\n//           );\n//         })}\n//         <div ref={messagesEndRef} />\n//       </div>\n\n//       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\n//         <input type=\"text\" value={newMessage} onChange={(e) => setNewMessage(e.target.value)} placeholder=\"Cevabınızı yazın...\" />\n//         <button type=\"submit\" disabled={!newMessage.trim()}>➢</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default AdminChatBox;\n// Bu kodun tamamını kopyalayıp projenizdeki src/AdminChatBox.js dosyasına yapıştırın.\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\nimport './AdminChatBox.css';\nimport { socket } from './socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminChatBox({\n  conversationId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [adminUser, setAdminUser] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        setAdminUser(jwtDecode(token));\n      } catch (error) {\n        console.error(\"Admin token decode error:\", error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (!conversationId || !adminUser) {\n      setMessages([]); // Sohbet değiştiğinde veya kullanıcı bilgisi yoksa eski mesajları temizle\n      return;\n    }\n\n    // Zaten bağlı değilse bağlan\n    if (!socket.connected) {\n      socket.connect();\n    }\n    const onConnect = () => socket.emit('join_room', conversationId);\n    const handleLoadMessages = loadedMessages => setMessages(loadedMessages);\n    const handleReceiveMessage = message => {\n      if (message.conversation_id === conversationId) {\n        setMessages(prev => [...prev, message]);\n      }\n    };\n    const handleMessageDeleted = ({\n      messageId\n    }) => {\n      setMessages(prev => prev.filter(msg => msg.id !== messageId));\n    };\n\n    // *** GÜNCELLEME: Bu fonksiyon, bir sohbet silindiğinde tetiklenir ***\n    const handleConversationDeleted = deletedConvId => {\n      // Eğer silinen sohbet, şu an ekranda açık olan sohbet ise mesajları temizle\n      if (conversationId === deletedConvId) {\n        setMessages([]);\n      }\n    };\n    socket.on('connect', onConnect);\n    socket.on('load_messages', handleLoadMessages);\n    socket.on('receive_message', handleReceiveMessage);\n    socket.on('message_deleted', handleMessageDeleted);\n    socket.on('conversation_deleted', handleConversationDeleted); // Bu dinleyici, arayüzü güncel tutar\n\n    if (socket.connected) {\n      onConnect();\n    }\n\n    // Temizlik fonksiyonu: Component DOM'dan kaldırıldığında çalışır\n    return () => {\n      socket.off('connect', onConnect);\n      socket.off('load_messages', handleLoadMessages);\n      socket.off('receive_message', handleReceiveMessage);\n      socket.off('message_deleted', handleMessageDeleted);\n      socket.off('conversation_deleted', handleConversationDeleted); // Dinleyiciyi kaldır\n    };\n  }, [conversationId, adminUser]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    const trimmedMessage = newMessage.trim();\n    if (trimmedMessage === '' || !adminUser) return;\n    const userIdPart = conversationId.split('-').find(p => p.startsWith('user_'));\n    const vehicleIdPart = conversationId.split('-').find(p => p.startsWith('vehicle_'));\n    if (!userIdPart) return;\n    const receiver_id = parseInt(userIdPart.split('_')[1]);\n    const vehicle_id = vehicleIdPart ? parseInt(vehicleIdPart.split('_')[1]) : null;\n    socket.emit('send_message', {\n      conversation_id: conversationId,\n      sender_id: adminUser.id,\n      receiver_id,\n      vehicle_id,\n      message: trimmedMessage\n    });\n    setNewMessage('');\n  };\n  const handleDeleteMessage = async messageId => {\n    if (window.confirm(\"Bu mesajı kalıcı olarak silmek istediğinizden emin misiniz?\")) {\n      try {\n        const token = localStorage.getItem('token');\n        await axios.delete(`http://localhost:5000/api/messages/${messageId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      } catch (error) {\n        var _error$response, _error$response$data;\n        alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Mesaj silinirken bir hata oluştu.\");\n      }\n    }\n  };\n  if (!conversationId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-chat-box-empty\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"G\\xF6r\\xFCnt\\xFClemek i\\xE7in bir konu\\u015Fma se\\xE7in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 12\n    }, this);\n  }\n\n  // *** GÜNCELLEME: Mesaj listesi boş olduğunda daha açıklayıcı bir arayüz sunar ***\n  if (messages.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages-admin\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '20px',\n            textAlign: 'center',\n            color: '#888',\n            fontStyle: 'italic'\n          },\n          children: \"Bu sohbette hen\\xFCz mesaj yok veya sohbet silinmi\\u015F.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat-input-form-admin\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Cevab\\u0131n\\u0131z\\u0131 yaz\\u0131n...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !newMessage.trim(),\n          children: \"\\u27A2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-chat-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-admin\",\n      children: [messages.map(msg => {\n        const isAdminMessage = parseInt(msg.sender_id) === (adminUser === null || adminUser === void 0 ? void 0 : adminUser.id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-container ${isAdminMessage ? 'admin-message' : 'user-message'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-bubble ${isAdminMessage ? 'admin-bubble' : 'user-bubble'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-message-btn\",\n              onClick: () => handleDeleteMessage(msg.id),\n              title: \"Mesaj\\u0131 Sil\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: new Date(msg.created_at).toLocaleTimeString('tr-TR', {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-input-form-admin\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Cevab\\u0131n\\u0131z\\u0131 yaz\\u0131n...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !newMessage.trim(),\n        children: \"\\u27A2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminChatBox, \"3gAwUB0tjPPd2I8/jUDeerMNEgU=\");\n_c = AdminChatBox;\nexport default AdminChatBox;\nvar _c;\n$RefreshReg$(_c, \"AdminChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jwtDecode","axios","socket","jsxDEV","_jsxDEV","AdminChatBox","conversationId","_s","messages","setMessages","newMessage","setNewMessage","adminUser","setAdminUser","messagesEndRef","token","localStorage","getItem","error","console","connected","connect","onConnect","emit","handleLoadMessages","loadedMessages","handleReceiveMessage","message","conversation_id","prev","handleMessageDeleted","messageId","filter","msg","id","handleConversationDeleted","deletedConvId","on","off","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trimmedMessage","trim","userIdPart","split","find","p","startsWith","vehicleIdPart","receiver_id","parseInt","vehicle_id","sender_id","handleDeleteMessage","window","confirm","delete","headers","_error$response","_error$response$data","alert","response","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","padding","textAlign","color","fontStyle","ref","onSubmit","type","value","onChange","target","placeholder","disabled","map","isAdminMessage","onClick","title","Date","created_at","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/AdminChatBox.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import { jwtDecode } from 'jwt-decode';\r\n// import axios from 'axios';\r\n// import './AdminChatBox.css';\r\n// import { socket } from './socket';\r\n\r\n// function AdminChatBox({ conversationId }) {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [newMessage, setNewMessage] = useState('');\r\n//   const [adminUser, setAdminUser] = useState(null);\r\n//   const messagesEndRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (token) {\r\n//       try {\r\n//         setAdminUser(jwtDecode(token));\r\n//       } catch (error) { \r\n//         console.error(\"Admin token decode error:\", error);\r\n//       }\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (!conversationId || !adminUser) {\r\n//         setMessages([]); // Sohbet değiştiğinde eski mesajları temizle\r\n//         return;\r\n//     }\r\n    \r\n//     socket.connect();\r\n\r\n//     const onConnect = () => socket.emit('join_room', conversationId);\r\n//     const handleLoadMessages = (loadedMessages) => setMessages(loadedMessages);\r\n//     const handleReceiveMessage = (message) => {\r\n//       if (message.conversation_id === conversationId) {\r\n//         setMessages(prev => [...prev, message]);\r\n//       }\r\n//     };\r\n//     const handleMessageDeleted = ({ messageId }) => {\r\n//       setMessages(prev => prev.filter(msg => msg.id !== messageId));\r\n//     };\r\n//     const handleConversationDeleted = () => {\r\n//         // Eğer tüm sohbet silinirse, bu sohbet kutusunu temizle\r\n//         setMessages([]);\r\n//     };\r\n\r\n//     socket.on('connect', onConnect);\r\n//     socket.on('load_messages', handleLoadMessages);\r\n//     socket.on('receive_message', handleReceiveMessage);\r\n//     socket.on('message_deleted', handleMessageDeleted);\r\n//     socket.on('conversation_deleted', handleConversationDeleted); // Yeni dinleyici\r\n\r\n//     if (socket.connected) {\r\n//         onConnect();\r\n//     }\r\n\r\n//     return () => {\r\n//       socket.off('connect', onConnect);\r\n//       socket.off('load_messages', handleLoadMessages);\r\n//       socket.off('receive_message', handleReceiveMessage);\r\n//       socket.off('message_deleted', handleMessageDeleted);\r\n//       socket.off('conversation_deleted', handleConversationDeleted); // Temizle\r\n//     };\r\n//   }, [conversationId, adminUser]);\r\n\r\n//   useEffect(() => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n//   }, [messages]);\r\n\r\n//   const handleSendMessage = (e) => {\r\n//     e.preventDefault();\r\n//     const trimmedMessage = newMessage.trim();\r\n//     if (trimmedMessage === '' || !adminUser) return;\r\n    \r\n//     const userIdPart = conversationId.split('-').find(p => p.startsWith('user_'));\r\n//     const vehicleIdPart = conversationId.split('-').find(p => p.startsWith('vehicle_'));\r\n//     if (!userIdPart) return;\r\n\r\n//     const receiver_id = parseInt(userIdPart.split('_')[1]);\r\n//     const vehicle_id = vehicleIdPart ? parseInt(vehicleIdPart.split('_')[1]) : null;\r\n\r\n//     socket.emit('send_message', {\r\n//       conversation_id: conversationId,\r\n//       sender_id: adminUser.id,\r\n//       receiver_id,\r\n//       vehicle_id,\r\n//       message: trimmedMessage,\r\n//     });\r\n//     setNewMessage('');\r\n//   };\r\n\r\n//   const handleDeleteMessage = async (messageId) => {\r\n//     if (window.confirm(\"Bu mesajı kalıcı olarak silmek istediğinizden emin misiniz?\")) {\r\n//         try {\r\n//             const token = localStorage.getItem('token');\r\n//             await axios.delete(`http://localhost:5000/api/messages/${messageId}`, {\r\n//                 headers: { 'Authorization': `Bearer ${token}` }\r\n//             });\r\n//         } catch (error) {\r\n//             alert(error.response?.data?.message || \"Mesaj silinirken bir hata oluştu.\");\r\n//         }\r\n//     }\r\n//   };\r\n\r\n//   if (!conversationId) {\r\n//     return <div className=\"admin-chat-box-empty\"><p>Görüntülemek için bir konuşma seçin.</p></div>;\r\n//   }\r\n  \r\n\r\n//   if (messages.length === 0) {\r\n//     return (\r\n//          <div className=\"admin-chat-box\">\r\n//             <div className=\"chat-messages-admin\">\r\n//                  <div ref={messagesEndRef} />\r\n//             </div>\r\n//              <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\r\n//                 <input type=\"text\" value={newMessage} onChange={(e) => setNewMessage(e.target.value)} placeholder=\"Cevabınızı yazın...\" />\r\n//                 <button type=\"submit\" disabled={!newMessage.trim()}>➢</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"admin-chat-box\">\r\n//       <div className=\"chat-messages-admin\">\r\n//         {messages.map((msg) => {\r\n//           const isAdminMessage = parseInt(msg.sender_id) === adminUser?.id;\r\n//           return (\r\n//             <div key={msg.id} className={`message-container ${isAdminMessage ? 'admin-message' : 'user-message'}`}>\r\n//               <div className={`message-bubble ${isAdminMessage ? 'admin-bubble' : 'user-bubble'}`}>\r\n//                 <button \r\n//                     className=\"delete-message-btn\" \r\n//                     onClick={() => handleDeleteMessage(msg.id)}\r\n//                     title=\"Mesajı Sil\"\r\n//                 >\r\n//                     ×\r\n//                 </button>\r\n//                 <p>{msg.message}</p>\r\n//                 <span className=\"message-time\">\r\n//                   {new Date(msg.created_at).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\r\n//                 </span>\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         })}\r\n//         <div ref={messagesEndRef} />\r\n//       </div>\r\n      \r\n//       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\r\n//         <input type=\"text\" value={newMessage} onChange={(e) => setNewMessage(e.target.value)} placeholder=\"Cevabınızı yazın...\" />\r\n//         <button type=\"submit\" disabled={!newMessage.trim()}>➢</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminChatBox;\r\n// Bu kodun tamamını kopyalayıp projenizdeki src/AdminChatBox.js dosyasına yapıştırın.\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport axios from 'axios';\r\nimport './AdminChatBox.css';\r\nimport { socket } from './socket';\r\n\r\nfunction AdminChatBox({ conversationId }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [adminUser, setAdminUser] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        setAdminUser(jwtDecode(token));\r\n      } catch (error) { \r\n        console.error(\"Admin token decode error:\", error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!conversationId || !adminUser) {\r\n        setMessages([]); // Sohbet değiştiğinde veya kullanıcı bilgisi yoksa eski mesajları temizle\r\n        return;\r\n    }\r\n    \r\n    // Zaten bağlı değilse bağlan\r\n    if (!socket.connected) {\r\n        socket.connect();\r\n    }\r\n\r\n    const onConnect = () => socket.emit('join_room', conversationId);\r\n    const handleLoadMessages = (loadedMessages) => setMessages(loadedMessages);\r\n    const handleReceiveMessage = (message) => {\r\n      if (message.conversation_id === conversationId) {\r\n        setMessages(prev => [...prev, message]);\r\n      }\r\n    };\r\n    const handleMessageDeleted = ({ messageId }) => {\r\n      setMessages(prev => prev.filter(msg => msg.id !== messageId));\r\n    };\r\n\r\n    // *** GÜNCELLEME: Bu fonksiyon, bir sohbet silindiğinde tetiklenir ***\r\n    const handleConversationDeleted = (deletedConvId) => {\r\n        // Eğer silinen sohbet, şu an ekranda açık olan sohbet ise mesajları temizle\r\n        if (conversationId === deletedConvId) {\r\n            setMessages([]);\r\n        }\r\n    };\r\n\r\n    socket.on('connect', onConnect);\r\n    socket.on('load_messages', handleLoadMessages);\r\n    socket.on('receive_message', handleReceiveMessage);\r\n    socket.on('message_deleted', handleMessageDeleted);\r\n    socket.on('conversation_deleted', handleConversationDeleted); // Bu dinleyici, arayüzü güncel tutar\r\n\r\n    if (socket.connected) {\r\n        onConnect();\r\n    }\r\n\r\n    // Temizlik fonksiyonu: Component DOM'dan kaldırıldığında çalışır\r\n    return () => {\r\n      socket.off('connect', onConnect);\r\n      socket.off('load_messages', handleLoadMessages);\r\n      socket.off('receive_message', handleReceiveMessage);\r\n      socket.off('message_deleted', handleMessageDeleted);\r\n      socket.off('conversation_deleted', handleConversationDeleted); // Dinleyiciyi kaldır\r\n    };\r\n  }, [conversationId, adminUser]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    const trimmedMessage = newMessage.trim();\r\n    if (trimmedMessage === '' || !adminUser) return;\r\n    \r\n    const userIdPart = conversationId.split('-').find(p => p.startsWith('user_'));\r\n    const vehicleIdPart = conversationId.split('-').find(p => p.startsWith('vehicle_'));\r\n    if (!userIdPart) return;\r\n\r\n    const receiver_id = parseInt(userIdPart.split('_')[1]);\r\n    const vehicle_id = vehicleIdPart ? parseInt(vehicleIdPart.split('_')[1]) : null;\r\n\r\n    socket.emit('send_message', {\r\n      conversation_id: conversationId,\r\n      sender_id: adminUser.id,\r\n      receiver_id,\r\n      vehicle_id,\r\n      message: trimmedMessage,\r\n    });\r\n    setNewMessage('');\r\n  };\r\n\r\n  const handleDeleteMessage = async (messageId) => {\r\n    if (window.confirm(\"Bu mesajı kalıcı olarak silmek istediğinizden emin misiniz?\")) {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            await axios.delete(`http://localhost:5000/api/messages/${messageId}`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n        } catch (error) {\r\n            alert(error.response?.data?.message || \"Mesaj silinirken bir hata oluştu.\");\r\n        }\r\n    }\r\n  };\r\n\r\n  if (!conversationId) {\r\n    return <div className=\"admin-chat-box-empty\"><p>Görüntülemek için bir konuşma seçin.</p></div>;\r\n  }\r\n  \r\n  // *** GÜNCELLEME: Mesaj listesi boş olduğunda daha açıklayıcı bir arayüz sunar ***\r\n  if (messages.length === 0) {\r\n    return (\r\n         <div className=\"admin-chat-box\">\r\n            <div className=\"chat-messages-admin\">\r\n                 <div style={{ padding: '20px', textAlign: 'center', color: '#888', fontStyle: 'italic' }}>\r\n                    Bu sohbette henüz mesaj yok veya sohbet silinmiş.\r\n                 </div>\r\n                 <div ref={messagesEndRef} />\r\n            </div>\r\n             <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\r\n                <input type=\"text\" value={newMessage} onChange={(e) => setNewMessage(e.target.value)} placeholder=\"Cevabınızı yazın...\" />\r\n                <button type=\"submit\" disabled={!newMessage.trim()}>➢</button>\r\n            </form>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-chat-box\">\r\n      <div className=\"chat-messages-admin\">\r\n        {messages.map((msg) => {\r\n          const isAdminMessage = parseInt(msg.sender_id) === adminUser?.id;\r\n          return (\r\n            <div key={msg.id} className={`message-container ${isAdminMessage ? 'admin-message' : 'user-message'}`}>\r\n              <div className={`message-bubble ${isAdminMessage ? 'admin-bubble' : 'user-bubble'}`}>\r\n                <button \r\n                    className=\"delete-message-btn\" \r\n                    onClick={() => handleDeleteMessage(msg.id)}\r\n                    title=\"Mesajı Sil\"\r\n                >\r\n                    ×\r\n                </button>\r\n                <p>{msg.message}</p>\r\n                <span className=\"message-time\">\r\n                  {new Date(msg.created_at).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      \r\n      <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\r\n        <input type=\"text\" value={newMessage} onChange={(e) => setNewMessage(e.target.value)} placeholder=\"Cevabınızı yazın...\" />\r\n        <button type=\"submit\" disabled={!newMessage.trim()}>➢</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminChatBox;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAC3B,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,YAAYA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMiB,cAAc,GAAGf,MAAM,CAAC,IAAI,CAAC;EAEnCD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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}