{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\AdminChatBox.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import io from 'socket.io-client';\n// import { jwtDecode } from 'jwt-decode';\n// import './AdminChatBox.css';\n\n// const socket = io('http://localhost:5000');\n\n// function AdminChatBox({ conversationId }) {\n//   const [messages, setMessages] = useState([]);\n//   const [newMessage, setNewMessage] = useState('');\n//   const [adminUser, setAdminUser] = useState(null);\n//   const [conversationInfo, setConversationInfo] = useState({});\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//       const decoded = jwtDecode(token);\n//       setAdminUser(decoded);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     if (conversationId) {\n//       // conversationId'den bilgileri ayıklayalım (örn: \"user_5-admin_1-vehicle_12\")\n//       const parts = conversationId.split('-');\n//       const userId = parts[0].split('_')[1];\n//       const vehicleId = parts[2].split('_')[1];\n//       setConversationInfo({ userId, vehicleId });\n\n//       socket.emit('join_room', conversationId);\n//       socket.on('load_messages', setMessages);\n//       socket.on('receive_message', (message) => {\n//         setMessages((prev) => [...prev, message]);\n//       });\n//       return () => {\n//         socket.off('load_messages');\n//         socket.off('receive_message');\n//       };\n//     }\n//   }, [conversationId]);\n\n//   useEffect(() => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   }, [messages]);\n\n//   const handleSendMessage = (e) => {\n//     e.preventDefault();\n//     if (newMessage.trim() === '' || !adminUser || !conversationInfo.userId) return;\n\n//     const messageData = {\n//       conversation_id: conversationId,\n//       sender_id: adminUser.id,\n//       receiver_id: parseInt(conversationInfo.userId), // Alıcı, konuşmayı başlatan kullanıcı\n//       vehicle_id: parseInt(conversationInfo.vehicleId),\n//       message: newMessage,\n//     };\n\n//     socket.emit('send_message', messageData);\n//     setNewMessage('');\n//   };\n\n//   if (!conversationId) return null;\n\n//   return (\n//     <div className=\"admin-chat-box\">\n//       <div className=\"chat-messages-admin\">\n//         {messages.map((msg, index) => (\n//           <div\n//             key={msg.id || index}\n//             className={`message-bubble-admin ${msg.sender_id === adminUser?.id ? 'sent-admin' : 'received-admin'}`}\n//           >\n//             <p>{msg.message}</p>\n//             <span className=\"message-time-admin\">{new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\n//           </div>\n//         ))}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\n//         <input\n//           type=\"text\"\n//           value={newMessage}\n//           onChange={(e) => setNewMessage(e.target.value)}\n//           placeholder=\"Cevabınızı yazın...\"\n//         />\n//         <button type=\"submit\">➢</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default AdminChatBox;\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import io from 'socket.io-client';\n// import { jwtDecode } from 'jwt-decode';\n// import './AdminChatBox.css';\n\n// const socket = io('http://localhost:5000');\n\n// function AdminChatBox({ conversationId, vehicleInfo, userInfo }) {\n//   const [messages, setMessages] = useState([]);\n//   const [newMessage, setNewMessage] = useState('');\n//   const [adminUser, setAdminUser] = useState(null);\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//       const decoded = jwtDecode(token);\n//       setAdminUser(decoded);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     if (conversationId && adminUser) {\n//       // Önceki odadan çık\n//       socket.emit('leave_room', conversationId);\n\n//       // Yeni odaya katıl\n//       socket.emit('join_room', conversationId);\n\n//       // Mesajları temizle\n//       setMessages([]);\n\n//       const handleLoadMessages = (loadedMessages) => {\n//         console.log('Mesajlar yüklendi:', loadedMessages);\n//         setMessages(loadedMessages);\n//       };\n\n//       const handleReceiveMessage = (message) => {\n//         console.log('Yeni mesaj alındı:', message);\n//         setMessages((prev) => [...prev, message]);\n//       };\n\n//       socket.on('load_messages', handleLoadMessages);\n//       socket.on('receive_message', handleReceiveMessage);\n\n//       return () => {\n//         socket.off('load_messages', handleLoadMessages);\n//         socket.off('receive_message', handleReceiveMessage);\n//       };\n//     }\n//   }, [conversationId, adminUser]);\n\n//   useEffect(() => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   }, [messages]);\n\n//   const handleSendMessage = (e) => {\n//     e.preventDefault();\n//     if (newMessage.trim() === '' || !adminUser || !userInfo) return;\n\n//     const messageData = {\n//       conversation_id: conversationId,\n//       sender_id: adminUser.id,\n//       receiver_id: userInfo.user_id,\n//       vehicle_id: vehicleInfo?.vehicle_id || null,\n//       message: newMessage,\n//     };\n\n//     console.log('Admin mesaj gönderiyor:', messageData);\n//     socket.emit('send_message', messageData);\n//     setNewMessage('');\n//   };\n\n//   if (!conversationId) {\n//     return (\n//       <div className=\"admin-chat-box-empty\">\n//         <p>Görüntülemek için bir konuşma seçin.</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"admin-chat-box\">\n//       <div className=\"chat-header-admin\">\n//         <div className=\"chat-info\">\n//           <h3>{userInfo?.user_name || 'Kullanıcı'}</h3>\n//           <span>{vehicleInfo?.brand} {vehicleInfo?.model}</span>\n//         </div>\n//       </div>\n\n//       <div className=\"chat-messages-admin\">\n//         {messages.map((msg, index) => (\n//           <div\n//             key={msg.id || index}\n//             className={`message-bubble-admin ${msg.sender_id === adminUser?.id ? 'sent-admin' : 'received-admin'}`}\n//           >\n//             <p>{msg.message}</p>\n//             <span className=\"message-time-admin\">\n//               {new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n//             </span>\n//           </div>\n//         ))}\n//         <div ref={messagesEndRef} />\n//       </div>\n\n//       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\n//         <input\n//           type=\"text\"\n//           value={newMessage}\n//           onChange={(e) => setNewMessage(e.target.value)}\n//           placeholder=\"Cevabınızı yazın...\"\n//         />\n//         <button type=\"submit\">➢</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default AdminChatBox;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { jwtDecode } from 'jwt-decode';\nimport './AdminChatBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction AdminChatBox({\n  conversationId,\n  vehicleInfo,\n  userInfo\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [adminUser, setAdminUser] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        setAdminUser(decoded);\n        console.log('Admin kullanıcısı:', decoded);\n      } catch (error) {\n        console.error('Token decode hatası:', error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (conversationId && adminUser) {\n      console.log('AdminChatBox - Conversation ID:', conversationId);\n      console.log('AdminChatBox - Admin User:', adminUser);\n      console.log('AdminChatBox - User Info:', userInfo);\n      console.log('AdminChatBox - Vehicle Info:', vehicleInfo);\n\n      // Önceki odadan çık\n      socket.emit('leave_room', conversationId);\n\n      // Socket bağlantı kontrolü\n      if (!socket.connected) {\n        console.log('Socket bağlantısı yok, yeniden bağlanıyor...');\n        socket.connect();\n      }\n\n      // Yeni odaya katıl - userId parametresi ekle\n      socket.emit('join_room', {\n        conversationId: conversationId,\n        userId: adminUser.id\n      });\n\n      // Mesajları temizle\n      setMessages([]);\n      const handleLoadMessages = loadedMessages => {\n        console.log('Admin - Mesajlar yüklendi:', loadedMessages);\n        setMessages(loadedMessages);\n      };\n      const handleReceiveMessage = message => {\n        console.log('Admin - Yeni mesaj alındı:', message);\n        setMessages(prev => [...prev, message]);\n      };\n      const handleError = error => {\n        console.error('Socket hatası:', error);\n      };\n\n      // Event listener'ları ekle\n      socket.on('load_messages', handleLoadMessages);\n      socket.on('receive_message', handleReceiveMessage);\n      socket.on('error', handleError);\n      return () => {\n        socket.off('load_messages', handleLoadMessages);\n        socket.off('receive_message', handleReceiveMessage);\n        socket.off('error', handleError);\n      };\n    }\n  }, [conversationId, adminUser, userInfo, vehicleInfo]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (newMessage.trim() === '') {\n      console.log('Boş mesaj gönderilemez');\n      return;\n    }\n    if (!adminUser) {\n      console.log('Admin kullanıcısı bulunamadı');\n      return;\n    }\n    if (!userInfo) {\n      console.log('Kullanıcı bilgisi bulunamadı');\n      return;\n    }\n\n    // Conversation ID'den user_id'yi çıkar\n    let receiverId = null;\n    if (conversationId.startsWith('user_')) {\n      const match = conversationId.match(/user_(\\d+)/);\n      if (match) {\n        receiverId = parseInt(match[1]);\n      }\n    } else if (userInfo.user_id) {\n      receiverId = userInfo.user_id;\n    } else if (userInfo.sender_id) {\n      receiverId = userInfo.sender_id;\n    }\n    if (!receiverId) {\n      console.error('Alıcı ID bulunamadı. UserInfo:', userInfo, 'ConversationId:', conversationId);\n      return;\n    }\n    const messageData = {\n      conversation_id: conversationId,\n      sender_id: adminUser.id,\n      receiver_id: receiverId,\n      vehicle_id: (vehicleInfo === null || vehicleInfo === void 0 ? void 0 : vehicleInfo.vehicle_id) || (vehicleInfo === null || vehicleInfo === void 0 ? void 0 : vehicleInfo.id) || null,\n      message: newMessage\n    };\n    console.log('Admin mesaj gönderiyor:', messageData);\n\n    // Socket bağlantı kontrolü\n    if (!socket.connected) {\n      console.error('Socket bağlantısı yok!');\n      return;\n    }\n    socket.emit('send_message', messageData);\n    setNewMessage('');\n  };\n  if (!conversationId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-chat-box-empty\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"G\\xF6r\\xFCnt\\xFClemek i\\xE7in bir konu\\u015Fma se\\xE7in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-chat-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header-admin\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.user_name) || (userInfo === null || userInfo === void 0 ? void 0 : userInfo.sender_name) || 'Kullanıcı'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [vehicleInfo === null || vehicleInfo === void 0 ? void 0 : vehicleInfo.brand, \" \", vehicleInfo === null || vehicleInfo === void 0 ? void 0 : vehicleInfo.model]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Conversation ID: \", conversationId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-admin\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Hen\\xFCz mesaj yok. \\u0130lk mesaj\\u0131 siz g\\xF6nderin!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-bubble-admin ${msg.sender_id === (adminUser === null || adminUser === void 0 ? void 0 : adminUser.id) ? 'sent-admin' : 'received-admin'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"message-sender\",\n          children: msg.sender_name || (msg.sender_id === (adminUser === null || adminUser === void 0 ? void 0 : adminUser.id) ? 'Admin' : 'Kullanıcı')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-time-admin\",\n          children: new Date(msg.created_at).toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 15\n        }, this)]\n      }, msg.id || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-input-form-admin\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Cevab\\u0131n\\u0131z\\u0131 yaz\\u0131n...\",\n        disabled: !adminUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !adminUser || !newMessage.trim(),\n        children: \"\\u27A2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      style: {\n        fontSize: '10px',\n        color: '#666',\n        padding: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Admin ID: \", adminUser === null || adminUser === void 0 ? void 0 : adminUser.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"User ID: \", (userInfo === null || userInfo === void 0 ? void 0 : userInfo.user_id) || (userInfo === null || userInfo === void 0 ? void 0 : userInfo.sender_id)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Vehicle ID: \", (vehicleInfo === null || vehicleInfo === void 0 ? void 0 : vehicleInfo.vehicle_id) || (vehicleInfo === null || vehicleInfo === void 0 ? void 0 : vehicleInfo.id)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Socket Connected: \", socket.connected ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminChatBox, \"3gAwUB0tjPPd2I8/jUDeerMNEgU=\");\n_c = AdminChatBox;\nexport default AdminChatBox;\nvar _c;\n$RefreshReg$(_c, \"AdminChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jwtDecode","jsxDEV","_jsxDEV","socket","AdminChatBox","conversationId","vehicleInfo","userInfo","_s","messages","setMessages","newMessage","setNewMessage","adminUser","setAdminUser","messagesEndRef","token","localStorage","getItem","decoded","console","log","error","emit","connected","connect","userId","id","handleLoadMessages","loadedMessages","handleReceiveMessage","message","prev","handleError","on","off","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","receiverId","startsWith","match","parseInt","user_id","sender_id","messageData","conversation_id","receiver_id","vehicle_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","user_name","sender_name","brand","model","length","map","msg","index","Date","created_at","toLocaleTimeString","hour","minute","ref","onSubmit","type","value","onChange","target","placeholder","disabled","process","env","NODE_ENV","style","fontSize","color","padding","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/AdminChatBox.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import io from 'socket.io-client';\r\n// import { jwtDecode } from 'jwt-decode';\r\n// import './AdminChatBox.css';\r\n\r\n// const socket = io('http://localhost:5000');\r\n\r\n// function AdminChatBox({ conversationId }) {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [newMessage, setNewMessage] = useState('');\r\n//   const [adminUser, setAdminUser] = useState(null);\r\n//   const [conversationInfo, setConversationInfo] = useState({});\r\n//   const messagesEndRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (token) {\r\n//       const decoded = jwtDecode(token);\r\n//       setAdminUser(decoded);\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (conversationId) {\r\n//       // conversationId'den bilgileri ayıklayalım (örn: \"user_5-admin_1-vehicle_12\")\r\n//       const parts = conversationId.split('-');\r\n//       const userId = parts[0].split('_')[1];\r\n//       const vehicleId = parts[2].split('_')[1];\r\n//       setConversationInfo({ userId, vehicleId });\r\n\r\n//       socket.emit('join_room', conversationId);\r\n//       socket.on('load_messages', setMessages);\r\n//       socket.on('receive_message', (message) => {\r\n//         setMessages((prev) => [...prev, message]);\r\n//       });\r\n//       return () => {\r\n//         socket.off('load_messages');\r\n//         socket.off('receive_message');\r\n//       };\r\n//     }\r\n//   }, [conversationId]);\r\n\r\n//   useEffect(() => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n//   }, [messages]);\r\n\r\n//   const handleSendMessage = (e) => {\r\n//     e.preventDefault();\r\n//     if (newMessage.trim() === '' || !adminUser || !conversationInfo.userId) return;\r\n    \r\n//     const messageData = {\r\n//       conversation_id: conversationId,\r\n//       sender_id: adminUser.id,\r\n//       receiver_id: parseInt(conversationInfo.userId), // Alıcı, konuşmayı başlatan kullanıcı\r\n//       vehicle_id: parseInt(conversationInfo.vehicleId),\r\n//       message: newMessage,\r\n//     };\r\n\r\n//     socket.emit('send_message', messageData);\r\n//     setNewMessage('');\r\n//   };\r\n\r\n//   if (!conversationId) return null;\r\n\r\n//   return (\r\n//     <div className=\"admin-chat-box\">\r\n//       <div className=\"chat-messages-admin\">\r\n//         {messages.map((msg, index) => (\r\n//           <div\r\n//             key={msg.id || index}\r\n//             className={`message-bubble-admin ${msg.sender_id === adminUser?.id ? 'sent-admin' : 'received-admin'}`}\r\n//           >\r\n//             <p>{msg.message}</p>\r\n//             <span className=\"message-time-admin\">{new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\r\n//           </div>\r\n//         ))}\r\n//         <div ref={messagesEndRef} />\r\n//       </div>\r\n//       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={newMessage}\r\n//           onChange={(e) => setNewMessage(e.target.value)}\r\n//           placeholder=\"Cevabınızı yazın...\"\r\n//         />\r\n//         <button type=\"submit\">➢</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminChatBox;\r\n\r\n\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import io from 'socket.io-client';\r\n// import { jwtDecode } from 'jwt-decode';\r\n// import './AdminChatBox.css';\r\n\r\n// const socket = io('http://localhost:5000');\r\n\r\n// function AdminChatBox({ conversationId, vehicleInfo, userInfo }) {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [newMessage, setNewMessage] = useState('');\r\n//   const [adminUser, setAdminUser] = useState(null);\r\n//   const messagesEndRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (token) {\r\n//       const decoded = jwtDecode(token);\r\n//       setAdminUser(decoded);\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (conversationId && adminUser) {\r\n//       // Önceki odadan çık\r\n//       socket.emit('leave_room', conversationId);\r\n      \r\n//       // Yeni odaya katıl\r\n//       socket.emit('join_room', conversationId);\r\n      \r\n//       // Mesajları temizle\r\n//       setMessages([]);\r\n\r\n//       const handleLoadMessages = (loadedMessages) => {\r\n//         console.log('Mesajlar yüklendi:', loadedMessages);\r\n//         setMessages(loadedMessages);\r\n//       };\r\n\r\n//       const handleReceiveMessage = (message) => {\r\n//         console.log('Yeni mesaj alındı:', message);\r\n//         setMessages((prev) => [...prev, message]);\r\n//       };\r\n\r\n//       socket.on('load_messages', handleLoadMessages);\r\n//       socket.on('receive_message', handleReceiveMessage);\r\n\r\n//       return () => {\r\n//         socket.off('load_messages', handleLoadMessages);\r\n//         socket.off('receive_message', handleReceiveMessage);\r\n//       };\r\n//     }\r\n//   }, [conversationId, adminUser]);\r\n\r\n//   useEffect(() => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n//   }, [messages]);\r\n\r\n//   const handleSendMessage = (e) => {\r\n//     e.preventDefault();\r\n//     if (newMessage.trim() === '' || !adminUser || !userInfo) return;\r\n    \r\n//     const messageData = {\r\n//       conversation_id: conversationId,\r\n//       sender_id: adminUser.id,\r\n//       receiver_id: userInfo.user_id,\r\n//       vehicle_id: vehicleInfo?.vehicle_id || null,\r\n//       message: newMessage,\r\n//     };\r\n\r\n//     console.log('Admin mesaj gönderiyor:', messageData);\r\n//     socket.emit('send_message', messageData);\r\n//     setNewMessage('');\r\n//   };\r\n\r\n//   if (!conversationId) {\r\n//     return (\r\n//       <div className=\"admin-chat-box-empty\">\r\n//         <p>Görüntülemek için bir konuşma seçin.</p>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"admin-chat-box\">\r\n//       <div className=\"chat-header-admin\">\r\n//         <div className=\"chat-info\">\r\n//           <h3>{userInfo?.user_name || 'Kullanıcı'}</h3>\r\n//           <span>{vehicleInfo?.brand} {vehicleInfo?.model}</span>\r\n//         </div>\r\n//       </div>\r\n      \r\n//       <div className=\"chat-messages-admin\">\r\n//         {messages.map((msg, index) => (\r\n//           <div\r\n//             key={msg.id || index}\r\n//             className={`message-bubble-admin ${msg.sender_id === adminUser?.id ? 'sent-admin' : 'received-admin'}`}\r\n//           >\r\n//             <p>{msg.message}</p>\r\n//             <span className=\"message-time-admin\">\r\n//               {new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n//             </span>\r\n//           </div>\r\n//         ))}\r\n//         <div ref={messagesEndRef} />\r\n//       </div>\r\n      \r\n//       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={newMessage}\r\n//           onChange={(e) => setNewMessage(e.target.value)}\r\n//           placeholder=\"Cevabınızı yazın...\"\r\n//         />\r\n//         <button type=\"submit\">➢</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminChatBox;\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport './AdminChatBox.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction AdminChatBox({ conversationId, vehicleInfo, userInfo }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [adminUser, setAdminUser] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        setAdminUser(decoded);\r\n        console.log('Admin kullanıcısı:', decoded);\r\n      } catch (error) {\r\n        console.error('Token decode hatası:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (conversationId && adminUser) {\r\n      console.log('AdminChatBox - Conversation ID:', conversationId);\r\n      console.log('AdminChatBox - Admin User:', adminUser);\r\n      console.log('AdminChatBox - User Info:', userInfo);\r\n      console.log('AdminChatBox - Vehicle Info:', vehicleInfo);\r\n\r\n      // Önceki odadan çık\r\n      socket.emit('leave_room', conversationId);\r\n      \r\n      // Socket bağlantı kontrolü\r\n      if (!socket.connected) {\r\n        console.log('Socket bağlantısı yok, yeniden bağlanıyor...');\r\n        socket.connect();\r\n      }\r\n      \r\n      // Yeni odaya katıl - userId parametresi ekle\r\n      socket.emit('join_room', {\r\n        conversationId: conversationId,\r\n        userId: adminUser.id\r\n      });\r\n      \r\n      // Mesajları temizle\r\n      setMessages([]);\r\n\r\n      const handleLoadMessages = (loadedMessages) => {\r\n        console.log('Admin - Mesajlar yüklendi:', loadedMessages);\r\n        setMessages(loadedMessages);\r\n      };\r\n\r\n      const handleReceiveMessage = (message) => {\r\n        console.log('Admin - Yeni mesaj alındı:', message);\r\n        setMessages((prev) => [...prev, message]);\r\n      };\r\n\r\n      const handleError = (error) => {\r\n        console.error('Socket hatası:', error);\r\n      };\r\n\r\n      // Event listener'ları ekle\r\n      socket.on('load_messages', handleLoadMessages);\r\n      socket.on('receive_message', handleReceiveMessage);\r\n      socket.on('error', handleError);\r\n\r\n      return () => {\r\n        socket.off('load_messages', handleLoadMessages);\r\n        socket.off('receive_message', handleReceiveMessage);\r\n        socket.off('error', handleError);\r\n      };\r\n    }\r\n  }, [conversationId, adminUser, userInfo, vehicleInfo]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (newMessage.trim() === '') {\r\n      console.log('Boş mesaj gönderilemez');\r\n      return;\r\n    }\r\n    \r\n    if (!adminUser) {\r\n      console.log('Admin kullanıcısı bulunamadı');\r\n      return;\r\n    }\r\n    \r\n    if (!userInfo) {\r\n      console.log('Kullanıcı bilgisi bulunamadı');\r\n      return;\r\n    }\r\n\r\n    // Conversation ID'den user_id'yi çıkar\r\n    let receiverId = null;\r\n    if (conversationId.startsWith('user_')) {\r\n      const match = conversationId.match(/user_(\\d+)/);\r\n      if (match) {\r\n        receiverId = parseInt(match[1]);\r\n      }\r\n    } else if (userInfo.user_id) {\r\n      receiverId = userInfo.user_id;\r\n    } else if (userInfo.sender_id) {\r\n      receiverId = userInfo.sender_id;\r\n    }\r\n\r\n    if (!receiverId) {\r\n      console.error('Alıcı ID bulunamadı. UserInfo:', userInfo, 'ConversationId:', conversationId);\r\n      return;\r\n    }\r\n    \r\n    const messageData = {\r\n      conversation_id: conversationId,\r\n      sender_id: adminUser.id,\r\n      receiver_id: receiverId,\r\n      vehicle_id: vehicleInfo?.vehicle_id || vehicleInfo?.id || null,\r\n      message: newMessage,\r\n    };\r\n\r\n    console.log('Admin mesaj gönderiyor:', messageData);\r\n    \r\n    // Socket bağlantı kontrolü\r\n    if (!socket.connected) {\r\n      console.error('Socket bağlantısı yok!');\r\n      return;\r\n    }\r\n\r\n    socket.emit('send_message', messageData);\r\n    setNewMessage('');\r\n  };\r\n\r\n  if (!conversationId) {\r\n    return (\r\n      <div className=\"admin-chat-box-empty\">\r\n        <p>Görüntülemek için bir konuşma seçin.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-chat-box\">\r\n      <div className=\"chat-header-admin\">\r\n        <div className=\"chat-info\">\r\n          <h3>{userInfo?.user_name || userInfo?.sender_name || 'Kullanıcı'}</h3>\r\n          <span>{vehicleInfo?.brand} {vehicleInfo?.model}</span>\r\n          <small>Conversation ID: {conversationId}</small>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"chat-messages-admin\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"no-messages\">\r\n            <p>Henüz mesaj yok. İlk mesajı siz gönderin!</p>\r\n          </div>\r\n        ) : (\r\n          messages.map((msg, index) => (\r\n            <div\r\n              key={msg.id || index}\r\n              className={`message-bubble-admin ${msg.sender_id === adminUser?.id ? 'sent-admin' : 'received-admin'}`}\r\n            >\r\n              <p>{msg.message}</p>\r\n              <small className=\"message-sender\">\r\n                {msg.sender_name || (msg.sender_id === adminUser?.id ? 'Admin' : 'Kullanıcı')}\r\n              </small>\r\n              <span className=\"message-time-admin\">\r\n                {new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n              </span>\r\n            </div>\r\n          ))\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      \r\n      <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Cevabınızı yazın...\"\r\n          disabled={!adminUser}\r\n        />\r\n        <button \r\n          type=\"submit\" \r\n          disabled={!adminUser || !newMessage.trim()}\r\n        >\r\n          ➢\r\n        </button>\r\n      </form>\r\n      \r\n      {/* Debug bilgileri - geliştirme sırasında görmek için */}\r\n      {process.env.NODE_ENV === 'development' && (\r\n        <div className=\"debug-info\" style={{ fontSize: '10px', color: '#666', padding: '5px' }}>\r\n          <div>Admin ID: {adminUser?.id}</div>\r\n          <div>User ID: {userInfo?.user_id || userInfo?.sender_id}</div>\r\n          <div>Vehicle ID: {vehicleInfo?.vehicle_id || vehicleInfo?.id}</div>\r\n          <div>Socket Connected: {socket.connected ? 'Yes' : 'No'}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminChatBox;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASK,YAAYA,CAAC;EAAEC,cAAc;EAAEC,WAAW;EAAEC;AAAS,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}