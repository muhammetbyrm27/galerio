{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useCallback } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import { socket } from './socket';\n\n// function Dashboard() {\n//   const navigate = useNavigate();\n//   const [notificationCount, setNotificationCount] = useState(0);\n//   const [isSocketConnected, setIsSocketConnected] = useState(socket.connected);\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     socket.disconnect();\n//     navigate('/');\n//   };\n\n//   const fetchConversationCount = useCallback(async () => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       const response = await axios.get('http://localhost:5000/api/conversations', {\n//         headers: { 'Authorization': `Bearer ${token}` }\n//       });\n//       setNotificationCount(response.data.length);\n//     } catch (error) {\n//       console.error(\"Sohbet sayÄ±sÄ± alÄ±namadÄ±:\", error);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     // Sayfa ilk yÃ¼klendiÄŸinde mevcut sohbet sayÄ±sÄ±nÄ± al\n//     fetchConversationCount();\n\n//     // Socket baÄŸlantÄ±sÄ± yoksa kur\n//     if (!isSocketConnected) {\n//       socket.connect();\n//     }\n\n//     // BaÄŸlantÄ± kurulduÄŸunda state'i gÃ¼ncelle\n//     const onConnect = () => setIsSocketConnected(true);\n//     socket.on('connect', onConnect);\n\n//     const handleNewMessage = () => {\n//         setNotificationCount(prevCount => prevCount + 1);\n//     };\n\n//     // Sunucudan sÄ±fÄ±rlama sinyali geldiÄŸinde sayacÄ± sÄ±fÄ±rla\n//     const handleResetNotifications = () => {\n//         setNotificationCount(0);\n//     };\n\n//     socket.on('admin_new_message_notification', handleNewMessage);\n//     socket.on('reset_notifications', handleResetNotifications);\n\n//     const handleRefresh = () => fetchConversationCount();\n//     socket.on('admin_refresh_conversations', handleRefresh);\n\n//     return () => {\n//       socket.off('connect', onConnect);\n//       socket.off('admin_new_message_notification', handleNewMessage);\n//       socket.off('reset_notifications', handleResetNotifications);\n//       socket.off('admin_refresh_conversations', handleRefresh);\n//       socket.disconnect();\n//     };\n//   }, [fetchConversationCount, isSocketConnected]);\n\n//   // *** GÃœNCELLEME BURADA: Bu fonksiyonun iÃ§eriÄŸi deÄŸiÅŸtirildi ***\n//   // ArtÄ±k sunucuya sinyal gÃ¶ndermek yerine, sayacÄ± doÄŸrudan kendisi sÄ±fÄ±rlÄ±yor\n//   // ve SONRA sayfayÄ± deÄŸiÅŸtiriyor.\n//   const handleNavigateToMessages = () => {\n//     setNotificationCount(0); // SayacÄ± anÄ±nda, yerel olarak sÄ±fÄ±rla\n//     navigate('/admin/messages'); // Sonra Mesajlar sayfasÄ±na git\n//   };\n\n//   return (\n//     <div className=\"dashboard-wrapper\">\n//         <div className=\"car-animation-lane\">\n//             <div className=\"car\"></div>\n//             <div className=\"car\"></div>\n//             <div className=\"car\"></div>\n//             <div className=\"car\"></div>\n//         </div>\n//         <div className=\"dashboard-container\">\n//             <header className=\"dashboard-header\">\n//                 <span>YÃ¶netici Paneli</span>\n//                 <button onClick={handleLogout} className=\"logout-button\">\n//                     Ã‡Ä±kÄ±ÅŸ Yap\n//                 </button>\n//             </header>\n//             <main className=\"dashboard-content\">\n//                 <div className=\"title-section\">\n//                     <h1>ðŸš— BayramlarAuto YÃ¶netim Paneli</h1>\n//                     <p>HoÅŸ geldiniz! Ne yapmak istersiniz?</p>\n//                 </div>\n//                 <nav className=\"navigation-buttons\">\n//                     <button onClick={() => navigate('/admin/vehicles')}>AraÃ§ YÃ¶netimi</button>\n//                     <button onClick={() => navigate('/admin/personnel')}>Personel YÃ¶netimi</button>\n//                     <button onClick={() => navigate('/admin/kredi')}>Kredi Hesaplama</button>\n//                     <button onClick={() => navigate('/admin/piyasa')}>Piyasa DeÄŸeri</button>\n\n//                     <button className=\"messages-button\" onClick={handleNavigateToMessages}>\n//                         Gelen Mesajlar\n//                         {notificationCount > 0 && (\n//                             <span className=\"notification-badge\">{notificationCount}</span>\n//                         )}\n//                     </button>\n//                 </nav>\n//             </main>\n//         </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n// BU KODUN TAMAMINI KOPYALAYIP MEVCUT Dashboard.js DOSYANIZLA DEÄžÄ°ÅžTÄ°RÄ°N\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { socket } from './socket';\nimport { jwtDecode } from 'jwt-decode'; // *** GÃœNCELLEME: Admin ID'sini almak iÃ§in eklendi ***\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [notificationCount, setNotificationCount] = useState(0);\n  const [isSocketConnected, setIsSocketConnected] = useState(socket.connected);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    socket.disconnect();\n    navigate('/');\n  };\n\n  // *** GÃœNCELLEME: Bu fonksiyon artÄ±k doÄŸru endpoint'i Ã§aÄŸÄ±rÄ±yor ***\n  const fetchConversationCount = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      // ArtÄ±k toplam sohbeti deÄŸil, OKUNMAMIÅž sohbet sayÄ±sÄ±nÄ± Ã§ekiyoruz.\n      const response = await axios.get('http://localhost:5000/api/notifications/unread-count', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      // Gelen cevap { unreadCount: 3 } gibi olacaÄŸÄ± iÃ§in response.data.unreadCount kullanÄ±yoruz.\n      setNotificationCount(response.data.unreadCount);\n    } catch (error) {\n      console.error(\"OkunmamÄ±ÅŸ sohbet sayÄ±sÄ± alÄ±namadÄ±:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    // Sayfa ilk yÃ¼klendiÄŸinde mevcut okunmamÄ±ÅŸ sohbet sayÄ±sÄ±nÄ± al\n    fetchConversationCount();\n    if (!isSocketConnected) {\n      socket.connect();\n    }\n    const onConnect = () => setIsSocketConnected(true);\n    socket.on('connect', onConnect);\n\n    // Yeni bir okunmamÄ±ÅŸ mesaj geldiÄŸinde sayacÄ± 1 artÄ±r\n    const handleNewMessage = () => {\n      setNotificationCount(prevCount => prevCount + 1);\n    };\n\n    // Backend'den gelen \"sÄ±fÄ±rla\" sinyali ile sayacÄ± sÄ±fÄ±rla\n    const handleResetNotifications = () => {\n      setNotificationCount(0);\n    };\n\n    // Bir sohbet silindiÄŸinde sayÄ±yÄ± yeniden hesaplamak iÃ§in listeyi tekrar Ã§ek\n    const handleRefresh = () => fetchConversationCount();\n    socket.on('admin_new_unread_message', handleNewMessage); // Backend'deki doÄŸru event adÄ±yla gÃ¼ncellendi\n    socket.on('notifications_were_reset', handleResetNotifications); // Backend'deki doÄŸru event adÄ±yla gÃ¼ncellendi\n    socket.on('admin_refresh_conversations', handleRefresh);\n    return () => {\n      socket.off('connect', onConnect);\n      socket.off('admin_new_unread_message', handleNewMessage);\n      socket.off('notifications_were_reset', handleResetNotifications);\n      socket.off('admin_refresh_conversations', handleRefresh);\n      socket.disconnect();\n    };\n  }, [fetchConversationCount, isSocketConnected]);\n\n  // *** GÃœNCELLEME: Bu fonksiyon artÄ±k backend'e doÄŸru sinyali gÃ¶nderiyor ***\n  // Bu, Mesajlar sayfasÄ±na gitmeden Ã¶nce \"tÃ¼mÃ¼nÃ¼ okundu olarak iÅŸaretle\" komutunu verir.\n  const handleNavigateToMessages = () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const adminId = jwtDecode(token).id;\n        socket.emit('admin_cleared_notifications', {\n          adminId\n        });\n      } catch (e) {\n        console.error(\"Token iÅŸlenemedi\", e);\n      }\n    }\n    navigate('/admin/messages');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-animation-lane\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"dashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Y\\xF6netici Paneli\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          children: \"\\xC7\\u0131k\\u0131\\u015F Yap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uD83D\\uDE97 BayramlarAuto Y\\xF6netim Paneli\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ho\\u015F geldiniz! Ne yapmak istersiniz?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"navigation-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/admin/vehicles'),\n            children: \"Ara\\xE7 Y\\xF6netimi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/admin/personnel'),\n            children: \"Personel Y\\xF6netimi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/admin/kredi'),\n            children: \"Kredi Hesaplama\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/admin/piyasa'),\n            children: \"Piyasa De\\u011Feri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"messages-button\",\n            onClick: handleNavigateToMessages,\n            children: [\"Gelen Mesajlar\", notificationCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-badge\",\n              children: notificationCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"3TwtIV8B0mP4C5ai+nySRY65C7U=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","axios","socket","jwtDecode","jsxDEV","_jsxDEV","Dashboard","_s","navigate","notificationCount","setNotificationCount","isSocketConnected","setIsSocketConnected","connected","handleLogout","localStorage","removeItem","disconnect","fetchConversationCount","token","getItem","response","get","headers","data","unreadCount","error","console","connect","onConnect","on","handleNewMessage","prevCount","handleResetNotifications","handleRefresh","off","handleNavigateToMessages","adminId","id","emit","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/Dashboard.js"],"sourcesContent":["\r\n// import React, { useState, useEffect, useCallback } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './Dashboard.css';\r\n// import { socket } from './socket';\r\n\r\n// function Dashboard() {\r\n//   const navigate = useNavigate();\r\n//   const [notificationCount, setNotificationCount] = useState(0);\r\n//   const [isSocketConnected, setIsSocketConnected] = useState(socket.connected);\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     socket.disconnect();\r\n//     navigate('/');\r\n//   };\r\n\r\n//   const fetchConversationCount = useCallback(async () => {\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       const response = await axios.get('http://localhost:5000/api/conversations', {\r\n//         headers: { 'Authorization': `Bearer ${token}` }\r\n//       });\r\n//       setNotificationCount(response.data.length);\r\n//     } catch (error) {\r\n//       console.error(\"Sohbet sayÄ±sÄ± alÄ±namadÄ±:\", error);\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     // Sayfa ilk yÃ¼klendiÄŸinde mevcut sohbet sayÄ±sÄ±nÄ± al\r\n//     fetchConversationCount();\r\n\r\n//     // Socket baÄŸlantÄ±sÄ± yoksa kur\r\n//     if (!isSocketConnected) {\r\n//       socket.connect();\r\n//     }\r\n\r\n//     // BaÄŸlantÄ± kurulduÄŸunda state'i gÃ¼ncelle\r\n//     const onConnect = () => setIsSocketConnected(true);\r\n//     socket.on('connect', onConnect);\r\n\r\n//     const handleNewMessage = () => {\r\n//         setNotificationCount(prevCount => prevCount + 1);\r\n//     };\r\n    \r\n//     // Sunucudan sÄ±fÄ±rlama sinyali geldiÄŸinde sayacÄ± sÄ±fÄ±rla\r\n//     const handleResetNotifications = () => {\r\n//         setNotificationCount(0);\r\n//     };\r\n\r\n//     socket.on('admin_new_message_notification', handleNewMessage);\r\n//     socket.on('reset_notifications', handleResetNotifications);\r\n    \r\n//     const handleRefresh = () => fetchConversationCount();\r\n//     socket.on('admin_refresh_conversations', handleRefresh);\r\n\r\n//     return () => {\r\n//       socket.off('connect', onConnect);\r\n//       socket.off('admin_new_message_notification', handleNewMessage);\r\n//       socket.off('reset_notifications', handleResetNotifications);\r\n//       socket.off('admin_refresh_conversations', handleRefresh);\r\n//       socket.disconnect();\r\n//     };\r\n//   }, [fetchConversationCount, isSocketConnected]);\r\n\r\n//   // *** GÃœNCELLEME BURADA: Bu fonksiyonun iÃ§eriÄŸi deÄŸiÅŸtirildi ***\r\n//   // ArtÄ±k sunucuya sinyal gÃ¶ndermek yerine, sayacÄ± doÄŸrudan kendisi sÄ±fÄ±rlÄ±yor\r\n//   // ve SONRA sayfayÄ± deÄŸiÅŸtiriyor.\r\n//   const handleNavigateToMessages = () => {\r\n//     setNotificationCount(0); // SayacÄ± anÄ±nda, yerel olarak sÄ±fÄ±rla\r\n//     navigate('/admin/messages'); // Sonra Mesajlar sayfasÄ±na git\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"dashboard-wrapper\">\r\n//         <div className=\"car-animation-lane\">\r\n//             <div className=\"car\"></div>\r\n//             <div className=\"car\"></div>\r\n//             <div className=\"car\"></div>\r\n//             <div className=\"car\"></div>\r\n//         </div>\r\n//         <div className=\"dashboard-container\">\r\n//             <header className=\"dashboard-header\">\r\n//                 <span>YÃ¶netici Paneli</span>\r\n//                 <button onClick={handleLogout} className=\"logout-button\">\r\n//                     Ã‡Ä±kÄ±ÅŸ Yap\r\n//                 </button>\r\n//             </header>\r\n//             <main className=\"dashboard-content\">\r\n//                 <div className=\"title-section\">\r\n//                     <h1>ðŸš— BayramlarAuto YÃ¶netim Paneli</h1>\r\n//                     <p>HoÅŸ geldiniz! Ne yapmak istersiniz?</p>\r\n//                 </div>\r\n//                 <nav className=\"navigation-buttons\">\r\n//                     <button onClick={() => navigate('/admin/vehicles')}>AraÃ§ YÃ¶netimi</button>\r\n//                     <button onClick={() => navigate('/admin/personnel')}>Personel YÃ¶netimi</button>\r\n//                     <button onClick={() => navigate('/admin/kredi')}>Kredi Hesaplama</button>\r\n//                     <button onClick={() => navigate('/admin/piyasa')}>Piyasa DeÄŸeri</button>\r\n                    \r\n                    \r\n//                     <button className=\"messages-button\" onClick={handleNavigateToMessages}>\r\n//                         Gelen Mesajlar\r\n//                         {notificationCount > 0 && (\r\n//                             <span className=\"notification-badge\">{notificationCount}</span>\r\n//                         )}\r\n//                     </button>\r\n//                 </nav>\r\n//             </main>\r\n//         </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n// BU KODUN TAMAMINI KOPYALAYIP MEVCUT Dashboard.js DOSYANIZLA DEÄžÄ°ÅžTÄ°RÄ°N\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Dashboard.css';\r\nimport { socket } from './socket';\r\nimport { jwtDecode } from 'jwt-decode'; // *** GÃœNCELLEME: Admin ID'sini almak iÃ§in eklendi ***\r\n\r\nfunction Dashboard() {\r\n  const navigate = useNavigate();\r\n  const [notificationCount, setNotificationCount] = useState(0);\r\n  const [isSocketConnected, setIsSocketConnected] = useState(socket.connected);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    socket.disconnect();\r\n    navigate('/');\r\n  };\r\n\r\n  // *** GÃœNCELLEME: Bu fonksiyon artÄ±k doÄŸru endpoint'i Ã§aÄŸÄ±rÄ±yor ***\r\n  const fetchConversationCount = useCallback(async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      // ArtÄ±k toplam sohbeti deÄŸil, OKUNMAMIÅž sohbet sayÄ±sÄ±nÄ± Ã§ekiyoruz.\r\n      const response = await axios.get('http://localhost:5000/api/notifications/unread-count', {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      // Gelen cevap { unreadCount: 3 } gibi olacaÄŸÄ± iÃ§in response.data.unreadCount kullanÄ±yoruz.\r\n      setNotificationCount(response.data.unreadCount);\r\n    } catch (error) {\r\n      console.error(\"OkunmamÄ±ÅŸ sohbet sayÄ±sÄ± alÄ±namadÄ±:\", error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Sayfa ilk yÃ¼klendiÄŸinde mevcut okunmamÄ±ÅŸ sohbet sayÄ±sÄ±nÄ± al\r\n    fetchConversationCount();\r\n\r\n    if (!isSocketConnected) {\r\n      socket.connect();\r\n    }\r\n\r\n    const onConnect = () => setIsSocketConnected(true);\r\n    socket.on('connect', onConnect);\r\n\r\n    // Yeni bir okunmamÄ±ÅŸ mesaj geldiÄŸinde sayacÄ± 1 artÄ±r\r\n    const handleNewMessage = () => {\r\n        setNotificationCount(prevCount => prevCount + 1);\r\n    };\r\n    \r\n    // Backend'den gelen \"sÄ±fÄ±rla\" sinyali ile sayacÄ± sÄ±fÄ±rla\r\n    const handleResetNotifications = () => {\r\n        setNotificationCount(0);\r\n    };\r\n    \r\n    // Bir sohbet silindiÄŸinde sayÄ±yÄ± yeniden hesaplamak iÃ§in listeyi tekrar Ã§ek\r\n    const handleRefresh = () => fetchConversationCount();\r\n\r\n    socket.on('admin_new_unread_message', handleNewMessage); // Backend'deki doÄŸru event adÄ±yla gÃ¼ncellendi\r\n    socket.on('notifications_were_reset', handleResetNotifications); // Backend'deki doÄŸru event adÄ±yla gÃ¼ncellendi\r\n    socket.on('admin_refresh_conversations', handleRefresh);\r\n\r\n    return () => {\r\n      socket.off('connect', onConnect);\r\n      socket.off('admin_new_unread_message', handleNewMessage);\r\n      socket.off('notifications_were_reset', handleResetNotifications);\r\n      socket.off('admin_refresh_conversations', handleRefresh);\r\n      socket.disconnect();\r\n    };\r\n  }, [fetchConversationCount, isSocketConnected]);\r\n\r\n  // *** GÃœNCELLEME: Bu fonksiyon artÄ±k backend'e doÄŸru sinyali gÃ¶nderiyor ***\r\n  // Bu, Mesajlar sayfasÄ±na gitmeden Ã¶nce \"tÃ¼mÃ¼nÃ¼ okundu olarak iÅŸaretle\" komutunu verir.\r\n  const handleNavigateToMessages = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        try {\r\n            const adminId = jwtDecode(token).id;\r\n            socket.emit('admin_cleared_notifications', { adminId });\r\n        } catch(e) { console.error(\"Token iÅŸlenemedi\", e); }\r\n    }\r\n    navigate('/admin/messages');\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-wrapper\">\r\n        <div className=\"car-animation-lane\">\r\n            <div className=\"car\"></div>\r\n            <div className=\"car\"></div>\r\n            <div className=\"car\"></div>\r\n            <div className=\"car\"></div>\r\n        </div>\r\n        <div className=\"dashboard-container\">\r\n            <header className=\"dashboard-header\">\r\n                <span>YÃ¶netici Paneli</span>\r\n                <button onClick={handleLogout} className=\"logout-button\">\r\n                    Ã‡Ä±kÄ±ÅŸ Yap\r\n                </button>\r\n            </header>\r\n            <main className=\"dashboard-content\">\r\n                <div className=\"title-section\">\r\n                    <h1>ðŸš— BayramlarAuto YÃ¶netim Paneli</h1>\r\n                    <p>HoÅŸ geldiniz! Ne yapmak istersiniz?</p>\r\n                </div>\r\n                <nav className=\"navigation-buttons\">\r\n                    <button onClick={() => navigate('/admin/vehicles')}>AraÃ§ YÃ¶netimi</button>\r\n                    <button onClick={() => navigate('/admin/personnel')}>Personel YÃ¶netimi</button>\r\n                    <button onClick={() => navigate('/admin/kredi')}>Kredi Hesaplama</button>\r\n                    <button onClick={() => navigate('/admin/piyasa')}>Piyasa DeÄŸeri</button>\r\n                    \r\n                    {/* onClick olayÄ±, gÃ¼ncellenmiÅŸ ve doÄŸru Ã§alÄ±ÅŸan fonksiyonu Ã§aÄŸÄ±rÄ±yor */}\r\n                    <button className=\"messages-button\" onClick={handleNavigateToMessages}>\r\n                        Gelen Mesajlar\r\n                        {notificationCount > 0 && (\r\n                            <span className=\"notification-badge\">{notificationCount}</span>\r\n                        )}\r\n                    </button>\r\n                </nav>\r\n            </main>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}