{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react'; // *** YENİ: useState eklendi\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import './App.css';\n// import { jwtDecode } from 'jwt-decode';\n// import { socket } from './socket';\n// import axios from 'axios'; // *** YENİ: axios eklendi\n\n// // KORUYUCULAR\n// import ProtectedRoute from './ProtectedRoute'; \n// import AdminProtectedRoute from './AdminProtectedRoute'; \n\n// // SAYFALAR\n// import LoginPage from './LoginPage';\n// import ForgotPasswordPage from './ForgotPasswordPage';\n// import HomePage from './HomePage';\n// import Dashboard from './Dashboard';\n// import VehiclesPage from './VehiclesPage';\n// import PersonnelPage from './PersonnelPage';\n// import CreditCalculatorPage from './CreditCalculatorPage';\n// import MarketValuePage from './MarketValuePage';\n// import MessagesPage from './MessagesPage';\n\n// // *** YENİ: Rota yapısını ve state'i bir arada tutmak için AppContent bileşeni ***\n// // Bu yapı, Router'ın içinde hook'ları (useState, useEffect) sorunsuzca kullanmamızı sağlar.\n// function AppContent() {\n//   const [notificationCount, setNotificationCount] = useState(0);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     let userRole = null;\n//     if (token) {\n//       try { userRole = jwtDecode(token).role; } catch (e) {}\n//     }\n\n//     if (userRole === 'admin') {\n//       if (!socket.connected) socket.connect();\n\n//       // Sayfa ilk yüklendiğinde mevcut mesaj sayısını al\n//       axios.get('http://localhost:5000/api/conversations', { headers: { 'Authorization': `Bearer ${token}` }})\n//         .then(res => setNotificationCount(res.data.length))\n//         .catch(err => console.error(\"Bildirim sayısı alınamadı:\", err));\n\n//       const playNotificationSound = () => {\n//         const audio = new Audio('/notification.mp3');\n//         audio.play().catch(e => console.log(\"Ses çalınamadı:\", e));\n//       };\n\n//       // Yeni mesaj geldiğinde sayacı artır ve ses çal\n//       const handleNewMessage = () => {\n//         playNotificationSound();\n//         setNotificationCount(prevCount => prevCount + 1);\n//       };\n\n//       // MessagesPage'den gelen sinyal ile sayacı sıfırla\n//       const handleResetNotifications = () => setNotificationCount(0);\n\n//       // Sohbet silindiğinde sayıyı yeniden hesapla\n//       const handleRefreshCount = () => {\n//          axios.get('http://localhost:5000/api/conversations', { headers: { 'Authorization': `Bearer ${token}` }})\n//           .then(res => setNotificationCount(res.data.length));\n//       };\n\n//       socket.on('admin_new_message_notification', handleNewMessage);\n//       socket.on('reset_notifications', handleResetNotifications);\n//       socket.on('admin_refresh_conversations', handleRefreshCount);\n\n//       return () => {\n//         socket.off('admin_new_message_notification', handleNewMessage);\n//         socket.off('reset_notifications', handleResetNotifications);\n//         socket.off('admin_refresh_conversations', handleRefreshCount);\n//         if (socket.connected) socket.disconnect();\n//       };\n//     }\n//   }, []); // Boş dizi, bu kodun sadece bir kez çalışmasını sağlar.\n\n//   return (\n//     <Routes>\n//       <Route path=\"/\" element={<LoginPage />} />\n//       <Route path=\"/forgot-password\" element={<ForgotPasswordPage />} />\n//       <Route path=\"/home\" element={<ProtectedRoute><HomePage /></ProtectedRoute>} />\n\n//       {/* *** YENİ: Dashboard'a bildirim sayısı prop olarak aktarılıyor *** */}\n//       <Route \n//         path=\"/dashboard\" \n//         element={<AdminProtectedRoute><Dashboard notificationCount={notificationCount} /></AdminProtectedRoute>} \n//       />\n//       <Route path=\"/admin/vehicles\" element={<AdminProtectedRoute><VehiclesPage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/personnel\" element={<AdminProtectedRoute><PersonnelPage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/kredi\" element={<AdminProtectedRoute><CreditCalculatorPage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/piyasa\" element={<AdminProtectedRoute><MarketValuePage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/messages\" element={<AdminProtectedRoute><MessagesPage /></AdminProtectedRoute>} />\n//     </Routes>\n//   );\n// }\n\n// // Ana App bileşeni sadece Router'ı sarmalar\n// function App() {\n//   return (\n//     <Router>\n//       <AppContent />\n//     </Router>\n//   );\n// }\n\n// export default App;\n// BU KODUN TAMAMINI KOPYALAYIP MEVCUT App.js DOSYANIZLA DEĞİŞTİRİN\n\n// import React, { useState, useEffect } from 'react';\n// // *** DEĞİŞİKLİK: useLocation hook'u eklendi ***\n// import { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\n// import './App.css';\n// import { jwtDecode } from 'jwt-decode';\n// import { socket } from './socket';\n// import axios from 'axios';\n\n// // KORUYUCULAR\n// import ProtectedRoute from './ProtectedRoute'; \n// import AdminProtectedRoute from './AdminProtectedRoute'; \n\n// // SAYFALAR\n// import LoginPage from './LoginPage';\n// import ForgotPasswordPage from './ForgotPasswordPage';\n// import HomePage from './HomePage';\n// import Dashboard from './Dashboard';\n// import VehiclesPage from './VehiclesPage';\n// import PersonnelPage from './PersonnelPage';\n// import CreditCalculatorPage from './CreditCalculatorPage';\n// import MarketValuePage from './MarketValuePage';\n// import MessagesPage from './MessagesPage';\n\n// function AppContent() {\n//   const [notificationCount, setNotificationCount] = useState(0);\n//   const location = useLocation(); // *** DEĞİŞİKLİK: Mevcut sayfa yolunu almak için\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     let userRole = null;\n//     if (token) {\n//       try { userRole = jwtDecode(token).role; } catch (e) {}\n//     }\n\n//     if (userRole === 'admin') {\n//       if (!socket.connected) socket.connect();\n\n//       axios.get('http://localhost:5000/api/conversations', { headers: { 'Authorization': `Bearer ${token}` }})\n//         .then(res => setNotificationCount(res.data.length))\n//         .catch(err => console.error(\"Bildirim sayısı alınamadı:\", err));\n\n//       const playNotificationSound = () => {\n//         const audio = new Audio('/notification.mp3');\n//         audio.play().catch(e => console.log(\"Ses çalınamadı:\", e));\n//       };\n\n//       const handleNewMessage = () => {\n//         playNotificationSound();\n//         setNotificationCount(prevCount => prevCount + 1);\n//       };\n\n//       // *** DEĞİŞİKLİK: Artık socket sinyaline gerek yok, sayfa yoluna göre sıfırlama yapılıyor ***\n//       // Eğer kullanıcı şu an mesajlar sayfasındaysa, sayacı sıfırla.\n//       if (location.pathname === '/admin/messages') {\n//         setNotificationCount(0);\n//       }\n\n//       const handleRefreshCount = () => {\n//          axios.get('http://localhost:5000/api/conversations', { headers: { 'Authorization': `Bearer ${token}` }})\n//           .then(res => setNotificationCount(res.data.length));\n//       };\n\n//       socket.on('admin_new_message_notification', handleNewMessage);\n//       socket.on('admin_refresh_conversations', handleRefreshCount);\n\n//       return () => {\n//         socket.off('admin_new_message_notification', handleNewMessage);\n//         socket.off('admin_refresh_conversations', handleRefreshCount);\n//         // Not: disconnect'i burada tutmak, admin çıkış yaptığında bağlantının kesilmesini sağlar.\n//         if (socket.connected) socket.disconnect();\n//       };\n//     }\n//   // *** DEĞİŞİKLİK: Bağımlılık dizisi güncellendi ***\n//   // Bu useEffect'in her sayfa değişiminde tekrar çalışmasını sağlar.\n//   }, [location.pathname]);\n\n//   return (\n//     <Routes>\n//       <Route path=\"/\" element={<LoginPage />} />\n//       <Route path=\"/forgot-password\" element={<ForgotPasswordPage />} />\n//       <Route path=\"/home\" element={<ProtectedRoute><HomePage /></ProtectedRoute>} />\n\n//       <Route \n//         path=\"/dashboard\" \n//         element={<AdminProtectedRoute><Dashboard notificationCount={notificationCount} /></AdminProtectedRoute>} \n//       />\n//       <Route path=\"/admin/vehicles\" element={<AdminProtectedRoute><VehiclesPage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/personnel\" element={<AdminProtectedRoute><PersonnelPage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/kredi\" element={<AdminProtectedRoute><CreditCalculatorPage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/piyasa\" element={<AdminProtectedRoute><MarketValuePage /></AdminProtectedRoute>} />\n//       {/* MessagesPage artık sadece kendi işini yapacak, bildirim sıfırlama görevi App.js'in */}\n//       <Route path=\"/admin/messages\" element={<AdminProtectedRoute><MessagesPage /></AdminProtectedRoute>} />\n//     </Routes>\n//   );\n// }\n\n// function App() {\n//   return (\n//     <Router>\n//       <AppContent />\n//     </Router>\n//   );\n// }\n\n// export default App;\n// BU KODUN TAMAMINI KOPYALAYIP MEVCUT App.js DOSYANIZLA DEĞİŞTİRİN\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\nimport './App.css';\nimport { jwtDecode } from 'jwt-decode';\nimport { socket } from './socket';\nimport axios from 'axios';\n\n// ... (Diğer importlarınız aynı kalacak) ...\nimport ProtectedRoute from './ProtectedRoute';\nimport AdminProtectedRoute from './AdminProtectedRoute';\nimport LoginPage from './LoginPage';\nimport ForgotPasswordPage from './ForgotPasswordPage';\nimport HomePage from './HomePage';\nimport Dashboard from './Dashboard';\nimport VehiclesPage from './VehiclesPage';\nimport PersonnelPage from './PersonnelPage';\nimport CreditCalculatorPage from './CreditCalculatorPage';\nimport MarketValuePage from './MarketValuePage';\nimport MessagesPage from './MessagesPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppContent() {\n  _s();\n  const [notificationCount, setNotificationCount] = useState(0);\n  const location = useLocation();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    let userRole = null;\n    if (token) {\n      try {\n        userRole = jwtDecode(token).role;\n      } catch (e) {}\n    }\n    if (userRole === 'admin') {\n      if (!socket.connected) socket.connect();\n\n      // *** DEĞİŞİKLİK: Artık yeni \"unread-count\" rotasını çağırıyoruz ***\n      axios.get('http://localhost:5000/api/notifications/unread-count', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(res => setNotificationCount(res.data.unreadCount)) // Gelen cevap \"unreadCount\" olacak\n      .catch(err => console.error(\"Bildirim sayısı alınamadı:\", err));\n      const playNotificationSound = () => {\n        const audio = new Audio('/notification.mp3');\n        audio.play().catch(e => console.log(\"Ses çalınamadı:\", e));\n      };\n      const handleNewMessage = () => {\n        playNotificationSound();\n        setNotificationCount(prevCount => prevCount + 1);\n      };\n\n      // Bu sinyal, backend'den tüm mesajlar okundu olarak işaretlendikten sonra gelir.\n      const handleResetNotifications = () => setNotificationCount(0);\n      socket.on('admin_new_message_notification', handleNewMessage);\n      socket.on('reset_notifications', handleResetNotifications);\n      return () => {\n        socket.off('admin_new_message_notification', handleNewMessage);\n        socket.off('reset_notifications', handleResetNotifications);\n        if (socket.connected) socket.disconnect();\n      };\n    }\n  }, [location.pathname]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/forgot-password\",\n      element: /*#__PURE__*/_jsxDEV(ForgotPasswordPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/home\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dashboard\",\n      element: /*#__PURE__*/_jsxDEV(AdminProtectedRoute, {\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {\n          notificationCount: notificationCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admin/vehicles\",\n      element: /*#__PURE__*/_jsxDEV(AdminProtectedRoute, {\n        children: /*#__PURE__*/_jsxDEV(VehiclesPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admin/personnel\",\n      element: /*#__PURE__*/_jsxDEV(AdminProtectedRoute, {\n        children: /*#__PURE__*/_jsxDEV(PersonnelPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admin/kredi\",\n      element: /*#__PURE__*/_jsxDEV(AdminProtectedRoute, {\n        children: /*#__PURE__*/_jsxDEV(CreditCalculatorPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admin/piyasa\",\n      element: /*#__PURE__*/_jsxDEV(AdminProtectedRoute, {\n        children: /*#__PURE__*/_jsxDEV(MarketValuePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admin/messages\",\n      element: /*#__PURE__*/_jsxDEV(AdminProtectedRoute, {\n        children: /*#__PURE__*/_jsxDEV(MessagesPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n}\n_s(AppContent, \"ipdRXqjWclIm8pxdP5ITYsCmZcM=\", false, function () {\n  return [useLocation];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useLocation","jwtDecode","socket","axios","ProtectedRoute","AdminProtectedRoute","LoginPage","ForgotPasswordPage","HomePage","Dashboard","VehiclesPage","PersonnelPage","CreditCalculatorPage","MarketValuePage","MessagesPage","jsxDEV","_jsxDEV","AppContent","_s","notificationCount","setNotificationCount","location","token","localStorage","getItem","userRole","role","e","connected","connect","get","headers","then","res","data","unreadCount","catch","err","console","error","playNotificationSound","audio","Audio","play","log","handleNewMessage","prevCount","handleResetNotifications","on","off","disconnect","pathname","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/App.js"],"sourcesContent":["\n\n// import React, { useState, useEffect } from 'react'; // *** YENİ: useState eklendi\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import './App.css';\n// import { jwtDecode } from 'jwt-decode';\n// import { socket } from './socket';\n// import axios from 'axios'; // *** YENİ: axios eklendi\n\n// // KORUYUCULAR\n// import ProtectedRoute from './ProtectedRoute'; \n// import AdminProtectedRoute from './AdminProtectedRoute'; \n\n// // SAYFALAR\n// import LoginPage from './LoginPage';\n// import ForgotPasswordPage from './ForgotPasswordPage';\n// import HomePage from './HomePage';\n// import Dashboard from './Dashboard';\n// import VehiclesPage from './VehiclesPage';\n// import PersonnelPage from './PersonnelPage';\n// import CreditCalculatorPage from './CreditCalculatorPage';\n// import MarketValuePage from './MarketValuePage';\n// import MessagesPage from './MessagesPage';\n\n\n// // *** YENİ: Rota yapısını ve state'i bir arada tutmak için AppContent bileşeni ***\n// // Bu yapı, Router'ın içinde hook'ları (useState, useEffect) sorunsuzca kullanmamızı sağlar.\n// function AppContent() {\n//   const [notificationCount, setNotificationCount] = useState(0);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     let userRole = null;\n//     if (token) {\n//       try { userRole = jwtDecode(token).role; } catch (e) {}\n//     }\n\n//     if (userRole === 'admin') {\n//       if (!socket.connected) socket.connect();\n\n//       // Sayfa ilk yüklendiğinde mevcut mesaj sayısını al\n//       axios.get('http://localhost:5000/api/conversations', { headers: { 'Authorization': `Bearer ${token}` }})\n//         .then(res => setNotificationCount(res.data.length))\n//         .catch(err => console.error(\"Bildirim sayısı alınamadı:\", err));\n      \n//       const playNotificationSound = () => {\n//         const audio = new Audio('/notification.mp3');\n//         audio.play().catch(e => console.log(\"Ses çalınamadı:\", e));\n//       };\n\n//       // Yeni mesaj geldiğinde sayacı artır ve ses çal\n//       const handleNewMessage = () => {\n//         playNotificationSound();\n//         setNotificationCount(prevCount => prevCount + 1);\n//       };\n\n//       // MessagesPage'den gelen sinyal ile sayacı sıfırla\n//       const handleResetNotifications = () => setNotificationCount(0);\n      \n//       // Sohbet silindiğinde sayıyı yeniden hesapla\n//       const handleRefreshCount = () => {\n//          axios.get('http://localhost:5000/api/conversations', { headers: { 'Authorization': `Bearer ${token}` }})\n//           .then(res => setNotificationCount(res.data.length));\n//       };\n\n//       socket.on('admin_new_message_notification', handleNewMessage);\n//       socket.on('reset_notifications', handleResetNotifications);\n//       socket.on('admin_refresh_conversations', handleRefreshCount);\n\n//       return () => {\n//         socket.off('admin_new_message_notification', handleNewMessage);\n//         socket.off('reset_notifications', handleResetNotifications);\n//         socket.off('admin_refresh_conversations', handleRefreshCount);\n//         if (socket.connected) socket.disconnect();\n//       };\n//     }\n//   }, []); // Boş dizi, bu kodun sadece bir kez çalışmasını sağlar.\n\n//   return (\n//     <Routes>\n//       <Route path=\"/\" element={<LoginPage />} />\n//       <Route path=\"/forgot-password\" element={<ForgotPasswordPage />} />\n//       <Route path=\"/home\" element={<ProtectedRoute><HomePage /></ProtectedRoute>} />\n      \n//       {/* *** YENİ: Dashboard'a bildirim sayısı prop olarak aktarılıyor *** */}\n//       <Route \n//         path=\"/dashboard\" \n//         element={<AdminProtectedRoute><Dashboard notificationCount={notificationCount} /></AdminProtectedRoute>} \n//       />\n//       <Route path=\"/admin/vehicles\" element={<AdminProtectedRoute><VehiclesPage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/personnel\" element={<AdminProtectedRoute><PersonnelPage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/kredi\" element={<AdminProtectedRoute><CreditCalculatorPage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/piyasa\" element={<AdminProtectedRoute><MarketValuePage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/messages\" element={<AdminProtectedRoute><MessagesPage /></AdminProtectedRoute>} />\n//     </Routes>\n//   );\n// }\n\n// // Ana App bileşeni sadece Router'ı sarmalar\n// function App() {\n//   return (\n//     <Router>\n//       <AppContent />\n//     </Router>\n//   );\n// }\n\n// export default App;\n// BU KODUN TAMAMINI KOPYALAYIP MEVCUT App.js DOSYANIZLA DEĞİŞTİRİN\n\n// import React, { useState, useEffect } from 'react';\n// // *** DEĞİŞİKLİK: useLocation hook'u eklendi ***\n// import { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\n// import './App.css';\n// import { jwtDecode } from 'jwt-decode';\n// import { socket } from './socket';\n// import axios from 'axios';\n\n// // KORUYUCULAR\n// import ProtectedRoute from './ProtectedRoute'; \n// import AdminProtectedRoute from './AdminProtectedRoute'; \n\n// // SAYFALAR\n// import LoginPage from './LoginPage';\n// import ForgotPasswordPage from './ForgotPasswordPage';\n// import HomePage from './HomePage';\n// import Dashboard from './Dashboard';\n// import VehiclesPage from './VehiclesPage';\n// import PersonnelPage from './PersonnelPage';\n// import CreditCalculatorPage from './CreditCalculatorPage';\n// import MarketValuePage from './MarketValuePage';\n// import MessagesPage from './MessagesPage';\n\n// function AppContent() {\n//   const [notificationCount, setNotificationCount] = useState(0);\n//   const location = useLocation(); // *** DEĞİŞİKLİK: Mevcut sayfa yolunu almak için\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     let userRole = null;\n//     if (token) {\n//       try { userRole = jwtDecode(token).role; } catch (e) {}\n//     }\n\n//     if (userRole === 'admin') {\n//       if (!socket.connected) socket.connect();\n\n//       axios.get('http://localhost:5000/api/conversations', { headers: { 'Authorization': `Bearer ${token}` }})\n//         .then(res => setNotificationCount(res.data.length))\n//         .catch(err => console.error(\"Bildirim sayısı alınamadı:\", err));\n      \n//       const playNotificationSound = () => {\n//         const audio = new Audio('/notification.mp3');\n//         audio.play().catch(e => console.log(\"Ses çalınamadı:\", e));\n//       };\n\n//       const handleNewMessage = () => {\n//         playNotificationSound();\n//         setNotificationCount(prevCount => prevCount + 1);\n//       };\n      \n//       // *** DEĞİŞİKLİK: Artık socket sinyaline gerek yok, sayfa yoluna göre sıfırlama yapılıyor ***\n//       // Eğer kullanıcı şu an mesajlar sayfasındaysa, sayacı sıfırla.\n//       if (location.pathname === '/admin/messages') {\n//         setNotificationCount(0);\n//       }\n      \n//       const handleRefreshCount = () => {\n//          axios.get('http://localhost:5000/api/conversations', { headers: { 'Authorization': `Bearer ${token}` }})\n//           .then(res => setNotificationCount(res.data.length));\n//       };\n\n//       socket.on('admin_new_message_notification', handleNewMessage);\n//       socket.on('admin_refresh_conversations', handleRefreshCount);\n\n//       return () => {\n//         socket.off('admin_new_message_notification', handleNewMessage);\n//         socket.off('admin_refresh_conversations', handleRefreshCount);\n//         // Not: disconnect'i burada tutmak, admin çıkış yaptığında bağlantının kesilmesini sağlar.\n//         if (socket.connected) socket.disconnect();\n//       };\n//     }\n//   // *** DEĞİŞİKLİK: Bağımlılık dizisi güncellendi ***\n//   // Bu useEffect'in her sayfa değişiminde tekrar çalışmasını sağlar.\n//   }, [location.pathname]);\n\n//   return (\n//     <Routes>\n//       <Route path=\"/\" element={<LoginPage />} />\n//       <Route path=\"/forgot-password\" element={<ForgotPasswordPage />} />\n//       <Route path=\"/home\" element={<ProtectedRoute><HomePage /></ProtectedRoute>} />\n      \n//       <Route \n//         path=\"/dashboard\" \n//         element={<AdminProtectedRoute><Dashboard notificationCount={notificationCount} /></AdminProtectedRoute>} \n//       />\n//       <Route path=\"/admin/vehicles\" element={<AdminProtectedRoute><VehiclesPage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/personnel\" element={<AdminProtectedRoute><PersonnelPage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/kredi\" element={<AdminProtectedRoute><CreditCalculatorPage /></AdminProtectedRoute>} />\n//       <Route path=\"/admin/piyasa\" element={<AdminProtectedRoute><MarketValuePage /></AdminProtectedRoute>} />\n//       {/* MessagesPage artık sadece kendi işini yapacak, bildirim sıfırlama görevi App.js'in */}\n//       <Route path=\"/admin/messages\" element={<AdminProtectedRoute><MessagesPage /></AdminProtectedRoute>} />\n//     </Routes>\n//   );\n// }\n\n// function App() {\n//   return (\n//     <Router>\n//       <AppContent />\n//     </Router>\n//   );\n// }\n\n// export default App;\n// BU KODUN TAMAMINI KOPYALAYIP MEVCUT App.js DOSYANIZLA DEĞİŞTİRİN\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\nimport './App.css';\nimport { jwtDecode } from 'jwt-decode';\nimport { socket } from './socket';\nimport axios from 'axios';\n\n// ... (Diğer importlarınız aynı kalacak) ...\nimport ProtectedRoute from './ProtectedRoute'; \nimport AdminProtectedRoute from './AdminProtectedRoute'; \nimport LoginPage from './LoginPage';\nimport ForgotPasswordPage from './ForgotPasswordPage';\nimport HomePage from './HomePage';\nimport Dashboard from './Dashboard';\nimport VehiclesPage from './VehiclesPage';\nimport PersonnelPage from './PersonnelPage';\nimport CreditCalculatorPage from './CreditCalculatorPage';\nimport MarketValuePage from './MarketValuePage';\nimport MessagesPage from './MessagesPage';\n\n\nfunction AppContent() {\n  const [notificationCount, setNotificationCount] = useState(0);\n  const location = useLocation();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    let userRole = null;\n    if (token) {\n      try { userRole = jwtDecode(token).role; } catch (e) {}\n    }\n\n    if (userRole === 'admin') {\n      if (!socket.connected) socket.connect();\n\n      // *** DEĞİŞİKLİK: Artık yeni \"unread-count\" rotasını çağırıyoruz ***\n      axios.get('http://localhost:5000/api/notifications/unread-count', { headers: { 'Authorization': `Bearer ${token}` }})\n        .then(res => setNotificationCount(res.data.unreadCount)) // Gelen cevap \"unreadCount\" olacak\n        .catch(err => console.error(\"Bildirim sayısı alınamadı:\", err));\n      \n      const playNotificationSound = () => {\n        const audio = new Audio('/notification.mp3');\n        audio.play().catch(e => console.log(\"Ses çalınamadı:\", e));\n      };\n\n      const handleNewMessage = () => {\n        playNotificationSound();\n        setNotificationCount(prevCount => prevCount + 1);\n      };\n\n      // Bu sinyal, backend'den tüm mesajlar okundu olarak işaretlendikten sonra gelir.\n      const handleResetNotifications = () => setNotificationCount(0);\n      \n      socket.on('admin_new_message_notification', handleNewMessage);\n      socket.on('reset_notifications', handleResetNotifications);\n\n      return () => {\n        socket.off('admin_new_message_notification', handleNewMessage);\n        socket.off('reset_notifications', handleResetNotifications);\n        if (socket.connected) socket.disconnect();\n      };\n    }\n  }, [location.pathname]);\n\n  return (\n    <Routes>\n      {/* Rotalarınız olduğu gibi kalıyor */}\n      <Route path=\"/\" element={<LoginPage />} />\n      <Route path=\"/forgot-password\" element={<ForgotPasswordPage />} />\n      <Route path=\"/home\" element={<ProtectedRoute><HomePage /></ProtectedRoute>} />\n      \n      <Route \n        path=\"/dashboard\" \n        element={<AdminProtectedRoute><Dashboard notificationCount={notificationCount} /></AdminProtectedRoute>} \n      />\n      <Route path=\"/admin/vehicles\" element={<AdminProtectedRoute><VehiclesPage /></AdminProtectedRoute>} />\n      <Route path=\"/admin/personnel\" element={<AdminProtectedRoute><PersonnelPage /></AdminProtectedRoute>} />\n      <Route path=\"/admin/kredi\" element={<AdminProtectedRoute><CreditCalculatorPage /></AdminProtectedRoute>} />\n      <Route path=\"/admin/piyasa\" element={<AdminProtectedRoute><MarketValuePage /></AdminProtectedRoute>} />\n      <Route path=\"/admin/messages\" element={<AdminProtectedRoute><MessagesPage /></AdminProtectedRoute>} />\n    </Routes>\n  );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <AppContent />\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AACtF,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}