{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\MessagesPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import AdminChatBox from './AdminChatBox';\n// import './MessagesPage.css';\n\n// function MessagesPage() {\n//   const [conversations, setConversations] = useState([]);\n//   const [selectedConversation, setSelectedConversation] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchConversations = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await axios.get('http://localhost:5000/api/conversations', {\n//           headers: { 'Authorization': `Bearer ${token}` }\n//         });\n//         setConversations(response.data);\n//       } catch (error) {\n//         console.error(\"Konuşmalar yüklenemedi:\", error);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n//     fetchConversations();\n//   }, []);\n\n//   if (isLoading) return <div className=\"loading-container\">Gelen Kutusu Yükleniyor...</div>;\n\n//   return (\n//     <div className=\"messages-page-container\">\n//       <div className=\"conversations-list\">\n//         <div className=\"list-header\">\n//           <h2>Gelen Kutusu</h2>\n//         </div>\n//         <div className=\"list-content\">\n//           {conversations.length === 0 ? (\n//             <p className=\"no-messages\">Hiç mesajınız yok.</p>\n//           ) : (\n//             conversations.map(convo => (\n//               <div \n//                 key={convo.conversation_id} \n//                 className={`conversation-item ${selectedConversation?.conversation_id === convo.conversation_id ? 'active' : ''}`}\n//                 onClick={() => setSelectedConversation(convo)}\n//               >\n//                 <div className=\"convo-info\">\n//                   {/* ===> DEĞİŞİKLİK BURADA: Artık kullanıcının adı görünüyor <=== */}\n//                   <strong>{convo.user_name}</strong>\n//                   <span>{convo.brand} {convo.model}</span>\n//                 </div>\n//                 <p className=\"last-message\">{convo.message}</p>\n//                 <span className=\"convo-time\">{new Date(convo.created_at).toLocaleString('tr-TR')}</span>\n//               </div>\n//             ))\n//           )}\n//         </div>\n//       </div>\n//       <div className=\"chat-box-area\">\n//         {selectedConversation ? (\n//           // ===> DEĞİŞİKLİK BURADA: Sohbet kutusuna user_id ve vehicle_id de gönderiliyor <===\n//           <AdminChatBox \n//             key={selectedConversation.conversation_id} // Konuşma değiştiğinde bileşenin yeniden render olmasını sağlar\n//             conversationId={selectedConversation.conversation_id} \n//             vehicleId={selectedConversation.vehicle_id}\n//             userId={selectedConversation.user_id}\n//           />\n//         ) : (\n//           <div className=\"no-chat-selected\">\n//             <p>Görüntülemek için bir konuşma seçin.</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default MessagesPage;\n// src/MessagesPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AdminChatBox from './AdminChatBox';\nimport './MessagesPage.css';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction MessagesPage() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const token = localStorage.getItem('token');\n  const authConfig = {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  const fetchConversations = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/conversations', authConfig);\n      setConversations(response.data);\n    } catch (error) {\n      console.error(\"Konuşmalar yüklenemedi:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchConversations();\n    socket.on('new_conversation_update', fetchConversations); // Gelen kutusunu anında yenile\n    return () => {\n      socket.off('new_conversation_update');\n    };\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: \"Gelen Kutusu Y\\xFCkleniyor...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversations-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Gelen Kutusu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-content\",\n        children: conversations.map(convo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `conversation-item ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.conversation_id) === convo.conversation_id ? 'active' : ''}`,\n          onClick: () => setSelectedConversation(convo),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"convo-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: convo.user_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [convo.brand, \" \", convo.model]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"last-message\",\n            children: convo.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"convo-time\",\n            children: new Date(convo.created_at).toLocaleString('tr-TR')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, convo.conversation_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box-area\",\n      children: selectedConversation ? /*#__PURE__*/_jsxDEV(AdminChatBox, {\n        conversation: selectedConversation\n      }, selectedConversation.conversation_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"G\\xF6r\\xFCnt\\xFClemek i\\xE7in bir konu\\u015Fma se\\xE7in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(MessagesPage, \"AhlRllTo70lWT/cmz86FEYjfcOw=\");\n_c = MessagesPage;\nexport default MessagesPage;\nvar _c;\n$RefreshReg$(_c, \"MessagesPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","AdminChatBox","io","jsxDEV","_jsxDEV","socket","MessagesPage","_s","conversations","setConversations","selectedConversation","setSelectedConversation","isLoading","setIsLoading","token","localStorage","getItem","authConfig","headers","fetchConversations","response","get","data","error","console","on","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","convo","conversation_id","onClick","user_name","brand","model","message","Date","created_at","toLocaleString","conversation","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/MessagesPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import AdminChatBox from './AdminChatBox';\r\n// import './MessagesPage.css';\r\n\r\n// function MessagesPage() {\r\n//   const [conversations, setConversations] = useState([]);\r\n//   const [selectedConversation, setSelectedConversation] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const fetchConversations = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await axios.get('http://localhost:5000/api/conversations', {\r\n//           headers: { 'Authorization': `Bearer ${token}` }\r\n//         });\r\n//         setConversations(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Konuşmalar yüklenemedi:\", error);\r\n//       } finally {\r\n//         setIsLoading(false);\r\n//       }\r\n//     };\r\n//     fetchConversations();\r\n//   }, []);\r\n\r\n//   if (isLoading) return <div className=\"loading-container\">Gelen Kutusu Yükleniyor...</div>;\r\n\r\n//   return (\r\n//     <div className=\"messages-page-container\">\r\n//       <div className=\"conversations-list\">\r\n//         <div className=\"list-header\">\r\n//           <h2>Gelen Kutusu</h2>\r\n//         </div>\r\n//         <div className=\"list-content\">\r\n//           {conversations.length === 0 ? (\r\n//             <p className=\"no-messages\">Hiç mesajınız yok.</p>\r\n//           ) : (\r\n//             conversations.map(convo => (\r\n//               <div \r\n//                 key={convo.conversation_id} \r\n//                 className={`conversation-item ${selectedConversation?.conversation_id === convo.conversation_id ? 'active' : ''}`}\r\n//                 onClick={() => setSelectedConversation(convo)}\r\n//               >\r\n//                 <div className=\"convo-info\">\r\n//                   {/* ===> DEĞİŞİKLİK BURADA: Artık kullanıcının adı görünüyor <=== */}\r\n//                   <strong>{convo.user_name}</strong>\r\n//                   <span>{convo.brand} {convo.model}</span>\r\n//                 </div>\r\n//                 <p className=\"last-message\">{convo.message}</p>\r\n//                 <span className=\"convo-time\">{new Date(convo.created_at).toLocaleString('tr-TR')}</span>\r\n//               </div>\r\n//             ))\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"chat-box-area\">\r\n//         {selectedConversation ? (\r\n//           // ===> DEĞİŞİKLİK BURADA: Sohbet kutusuna user_id ve vehicle_id de gönderiliyor <===\r\n//           <AdminChatBox \r\n//             key={selectedConversation.conversation_id} // Konuşma değiştiğinde bileşenin yeniden render olmasını sağlar\r\n//             conversationId={selectedConversation.conversation_id} \r\n//             vehicleId={selectedConversation.vehicle_id}\r\n//             userId={selectedConversation.user_id}\r\n//           />\r\n//         ) : (\r\n//           <div className=\"no-chat-selected\">\r\n//             <p>Görüntülemek için bir konuşma seçin.</p>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default MessagesPage;\r\n// src/MessagesPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport AdminChatBox from './AdminChatBox';\r\nimport './MessagesPage.css';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction MessagesPage() {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const token = localStorage.getItem('token');\r\n  const authConfig = { headers: { 'Authorization': `Bearer ${token}` } };\r\n\r\n  const fetchConversations = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/conversations', authConfig);\r\n      setConversations(response.data);\r\n    } catch (error) { console.error(\"Konuşmalar yüklenemedi:\", error); } \r\n    finally { setIsLoading(false); }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchConversations();\r\n    socket.on('new_conversation_update', fetchConversations); // Gelen kutusunu anında yenile\r\n    return () => { socket.off('new_conversation_update'); };\r\n  }, []);\r\n\r\n  if (isLoading) return <div className=\"loading-container\">Gelen Kutusu Yükleniyor...</div>;\r\n\r\n  return (\r\n    <div className=\"messages-page-container\">\r\n      <div className=\"conversations-list\">\r\n        <div className=\"list-header\"><h2>Gelen Kutusu</h2></div>\r\n        <div className=\"list-content\">\r\n          {conversations.map(convo => (\r\n            <div key={convo.conversation_id} \r\n                 className={`conversation-item ${selectedConversation?.conversation_id === convo.conversation_id ? 'active' : ''}`}\r\n                 onClick={() => setSelectedConversation(convo)}>\r\n              <div className=\"convo-info\">\r\n                <strong>{convo.user_name}</strong>\r\n                <span>{convo.brand} {convo.model}</span>\r\n              </div>\r\n              <p className=\"last-message\">{convo.message}</p>\r\n              <span className=\"convo-time\">{new Date(convo.created_at).toLocaleString('tr-TR')}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-box-area\">\r\n        {selectedConversation ? (\r\n          <AdminChatBox \r\n            key={selectedConversation.conversation_id}\r\n            conversation={selectedConversation}\r\n          />\r\n        ) : (\r\n          <div className=\"no-chat-selected\"><p>Görüntülemek için bir konuşma seçin.</p></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MessagesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}