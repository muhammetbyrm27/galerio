{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n// // import './LoginPage.css';\n// // import { useNavigate } from 'react-router-dom';\n\n// // function LoginPage() {\n// //   const [formType, setFormType] = useState('login'); \n// //   const [email, setEmail] = useState('');\n// //   const [password, setPassword] = useState('');\n// //   const [error, setError] = useState('');\n// //   const [message, setMessage] = useState('');\n\n// //   const navigate = useNavigate();\n\n// //   const clearFields = () => {\n// //     setEmail('');\n// //     setPassword('');\n// //     setError('');\n// //     setMessage('');\n// //   };\n\n// //   const handleLogin = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const res = await axios.post('http://localhost:5000/api/login', { email, password });\n// //       localStorage.setItem('token', res.data.token);\n\n// //       navigate('/dashboard', { replace: true });\n\n// //     } catch (err) {\n// //       setError(err.response?.data?.message || 'Giriş hatası');\n// //     }\n// //   };\n\n// //   const handleRegister = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const res = await axios.post('http://localhost:5000/api/register', {\n// //         email,\n// //         password\n// //       });\n// //       setMessage(res.data.message);\n// //       clearFields();\n// //       setTimeout(() => {\n// //         setFormType('login');\n// //         setMessage(''); \n// //       }, 2000); \n// //     } catch (err) {\n// //       setError(err.response?.data?.message || 'Kayıt hatası');\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"login-container\">\n// //       <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\n// //         <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\n\n// //         <input\n// //           type=\"email\"\n// //           placeholder=\"E-posta\"\n// //           value={email}\n// //           onChange={(e) => setEmail(e.target.value)}\n// //           required\n// //         />\n// //         <input\n// //           type=\"password\"\n// //           placeholder=\"Şifre\"\n// //           value={password}\n// //           onChange={(e) => setPassword(e.target.value)}\n// //           required\n// //         />\n\n// //         <button type=\"submit\">\n// //           {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\n// //         </button>\n\n// //         {error && <p className=\"error\">{error}</p>}\n// //         {message && <p className=\"success\">{message}</p>}\n\n// //         <div className=\"form-switch\">\n// //           <button\n// //             type=\"button\"\n// //             onClick={() => {\n// //               setFormType(formType === 'login' ? 'register' : 'login');\n// //               clearFields();\n// //             }}\n// //           >\n// //             {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\n// //           </button>\n// //           <button type=\"button\" onClick={() => navigate('/forgot-password')}>\n// //             Şifremi Unuttum\n// //           </button>\n// //         </div>\n// //       </form>\n// //     </div>\n// //   );\n// // }\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './LoginPage.css';\n// import { useNavigate } from 'react-router-dom';\n// import { jwtDecode } from 'jwt-decode';\n\n// function LoginPage() {\n//   const [loginMode, setLoginMode] = useState('admin');\n//   const [formType, setFormType] = useState('login'); \n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const navigate = useNavigate();\n\n//   const clearFields = () => {\n//     setEmail('');\n//     setPassword('');\n//     setError('');\n//     setMessage('');\n//   };\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/login', { email, password });\n//       const token = res.data.token;\n//       localStorage.setItem('token', token);\n\n//       const decodedToken = jwtDecode(token);\n\n//       if (decodedToken.role === 'admin') {\n//         // Yönetici ise, senin sevdiğin eski Dashboard'a gider.\n//         navigate('/dashboard', { replace: true });\n//       } else {\n//         // Kullanıcı ise, UserDashboard'a gider.\n//         navigate('/user-dashboard', { replace: true });\n//       }\n//     } catch (err) {\n//       console.error(\"Giriş hatası detayı:\", err); // Hataları konsolda görmek için\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız');\n//     }\n//   };\n\n//   const handleRegister = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/register', {\n//         email,\n//         password\n//       });\n//       setMessage(res.data.message);\n//       clearFields();\n//       setTimeout(() => {\n//         setFormType('login');\n//         setMessage(''); \n//       }, 2000); \n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Kayıt hatası');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <div className=\"login-wrapper\">\n//         <div className=\"role-tabs\">\n//           <button \n//             className={`tab-button ${loginMode === 'admin' ? 'active' : ''}`}\n//             onClick={() => setLoginMode('admin')}\n//           >\n//             Yönetici Girişi\n//           </button>\n//           <button \n//             className={`tab-button ${loginMode === 'user' ? 'active' : ''}`}\n//             onClick={() => setLoginMode('user')}\n//           >\n//             Kullanıcı Girişi\n//           </button>\n//         </div>\n//         <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\n//           <h2>{formType === 'login' ? (loginMode === 'admin' ? 'Yönetici Girişi' : 'Kullanıcı Girişi') : 'Kaydol'}</h2>\n//           <input\n//             type=\"email\"\n//             placeholder=\"E-posta Adresi\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//           <input\n//             type=\"password\"\n//             placeholder=\"Şifre\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//           <button type=\"submit\">\n//             {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\n//           </button>\n//           {error && <p className=\"error\">{error}</p>}\n//           {message && <p className=\"success\">{message}</p>}\n//           <div className=\"form-switch\">\n//             <button\n//               type=\"button\"\n//               onClick={() => {\n//                 setFormType(formType === 'login' ? 'register' : 'login');\n//                 clearFields();\n//               }}\n//             >\n//               {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\n//             </button>\n//             <button type=\"button\" onClick={() => navigate('/forgot-password')}>\n//               Şifremi Unuttum\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;\n\n// ===================================\n// src/LoginPage.js\n// ===================================\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './LoginPage.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  // Sadece hangi sekmenin aktif olduğunu tutan tek bir state\n  const [activeTab, setActiveTab] = useState('admin'); // 'admin' veya 'user'\n\n  // Her form için ayrı state'ler. Bu, karışıklığı önler.\n  const [adminEmail, setAdminEmail] = useState('');\n  const [adminPassword, setAdminPassword] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // YÖNETİCİ GİRİŞ FONKSİYONU\n  const handleAdminLogin = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const res = await axios.post('http://localhost:5000/api/login', {\n        email: adminEmail,\n        password: adminPassword\n      });\n      const token = res.data.token;\n      const decodedToken = jwtDecode(token);\n\n      // Sadece admin ise devam et, değilse hata ver.\n      if (decodedToken.role !== 'admin') {\n        setError('Bu alan sadece yöneticilere aittir.');\n        return;\n      }\n      localStorage.setItem('token', token);\n      navigate('/dashboard', {\n        replace: true\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Giriş işlemi başarısız');\n    }\n  };\n\n  // KULLANICI GİRİŞ FONKSİYONU\n  const handleUserLogin = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const res = await axios.post('http://localhost:5000/api/login', {\n        email: userEmail,\n        password: userPassword\n      });\n      const token = res.data.token;\n      // Kullanıcının admin olup olmadığını kontrol etmeye gerek yok, backend zaten doğru rolü veriyor.\n      localStorage.setItem('token', token);\n      navigate('/home', {\n        replace: true\n      });\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Giriş işlemi başarısız');\n    }\n  };\n  const clearErrors = () => setError('');\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5000/api/register', {\n        email,\n        password\n      });\n      setMessage(res.data.message);\n      clearFields();\n      setTimeout(() => {\n        setFormType('login');\n        setMessage('');\n      }, 2000);\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Kayıt hatası');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"role-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'admin' ? 'active' : ''}`,\n          onClick: () => {\n            setActiveTab('admin');\n            clearErrors();\n          },\n          children: \"Y\\xF6netici Giri\\u015Fi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'user' ? 'active' : ''}`,\n          onClick: () => {\n            setActiveTab('user');\n            clearErrors();\n          },\n          children: \"Kullan\\u0131c\\u0131 Giri\\u015Fi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), activeTab === 'admin' && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleAdminLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Y\\xF6netici Giri\\u015Fi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"E-posta Adresi\",\n          value: adminEmail,\n          onChange: e => setAdminEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\u015Eifre\",\n          value: adminPassword,\n          onChange: e => setAdminPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Giri\\u015F Yap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-switch admin-switch\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => navigate('/forgot-password'),\n            children: \"\\u015Eifremi Unuttum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), activeTab === 'user' && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleUserLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Kullan\\u0131c\\u0131 Giri\\u015Fi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"E-posta Adresi\",\n          value: userEmail,\n          onChange: e => setUserEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\u015Eifre\",\n          value: userPassword,\n          onChange: e => setUserPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Giri\\u015F Yap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => navigate('/login'),\n            children: \"Kaydol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => navigate('/forgot-password'),\n            children: \"\\u015Eifremi Unuttum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"FYrNNL04sHw5junClyLKa77jjyM=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jwtDecode","jsxDEV","_jsxDEV","LoginPage","_s","activeTab","setActiveTab","adminEmail","setAdminEmail","adminPassword","setAdminPassword","userEmail","setUserEmail","userPassword","setUserPassword","error","setError","navigate","handleAdminLogin","e","preventDefault","res","post","email","password","token","data","decodedToken","role","localStorage","setItem","replace","err","_err$response","_err$response$data","response","message","handleUserLogin","_err$response2","_err$response2$data","clearErrors","handleRegister","setMessage","clearFields","setTimeout","setFormType","_err$response3","_err$response3$data","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/LoginPage.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import './LoginPage.css';\r\n// // import { useNavigate } from 'react-router-dom';\r\n\r\n// // function LoginPage() {\r\n// //   const [formType, setFormType] = useState('login'); \r\n// //   const [email, setEmail] = useState('');\r\n// //   const [password, setPassword] = useState('');\r\n// //   const [error, setError] = useState('');\r\n// //   const [message, setMessage] = useState('');\r\n  \r\n// //   const navigate = useNavigate();\r\n\r\n// //   const clearFields = () => {\r\n// //     setEmail('');\r\n// //     setPassword('');\r\n// //     setError('');\r\n// //     setMessage('');\r\n// //   };\r\n\r\n// //   const handleLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       const res = await axios.post('http://localhost:5000/api/login', { email, password });\r\n// //       localStorage.setItem('token', res.data.token);\r\n      \r\n// //       navigate('/dashboard', { replace: true });\r\n\r\n// //     } catch (err) {\r\n// //       setError(err.response?.data?.message || 'Giriş hatası');\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleRegister = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       const res = await axios.post('http://localhost:5000/api/register', {\r\n// //         email,\r\n// //         password\r\n// //       });\r\n// //       setMessage(res.data.message);\r\n// //       clearFields();\r\n// //       setTimeout(() => {\r\n// //         setFormType('login');\r\n// //         setMessage(''); \r\n// //       }, 2000); \r\n// //     } catch (err) {\r\n// //       setError(err.response?.data?.message || 'Kayıt hatası');\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"login-container\">\r\n// //       <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\r\n// //         <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\r\n\r\n// //         <input\r\n// //           type=\"email\"\r\n// //           placeholder=\"E-posta\"\r\n// //           value={email}\r\n// //           onChange={(e) => setEmail(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <input\r\n// //           type=\"password\"\r\n// //           placeholder=\"Şifre\"\r\n// //           value={password}\r\n// //           onChange={(e) => setPassword(e.target.value)}\r\n// //           required\r\n// //         />\r\n        \r\n// //         <button type=\"submit\">\r\n// //           {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\r\n// //         </button>\r\n\r\n// //         {error && <p className=\"error\">{error}</p>}\r\n// //         {message && <p className=\"success\">{message}</p>}\r\n\r\n// //         <div className=\"form-switch\">\r\n// //           <button\r\n// //             type=\"button\"\r\n// //             onClick={() => {\r\n// //               setFormType(formType === 'login' ? 'register' : 'login');\r\n// //               clearFields();\r\n// //             }}\r\n// //           >\r\n// //             {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\r\n// //           </button>\r\n// //           <button type=\"button\" onClick={() => navigate('/forgot-password')}>\r\n// //             Şifremi Unuttum\r\n// //           </button>\r\n// //         </div>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './LoginPage.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { jwtDecode } from 'jwt-decode';\r\n\r\n// function LoginPage() {\r\n//   const [loginMode, setLoginMode] = useState('admin');\r\n//   const [formType, setFormType] = useState('login'); \r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n  \r\n//   const navigate = useNavigate();\r\n\r\n//   const clearFields = () => {\r\n//     setEmail('');\r\n//     setPassword('');\r\n//     setError('');\r\n//     setMessage('');\r\n//   };\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/login', { email, password });\r\n//       const token = res.data.token;\r\n//       localStorage.setItem('token', token);\r\n      \r\n//       const decodedToken = jwtDecode(token);\r\n      \r\n//       if (decodedToken.role === 'admin') {\r\n//         // Yönetici ise, senin sevdiğin eski Dashboard'a gider.\r\n//         navigate('/dashboard', { replace: true });\r\n//       } else {\r\n//         // Kullanıcı ise, UserDashboard'a gider.\r\n//         navigate('/user-dashboard', { replace: true });\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Giriş hatası detayı:\", err); // Hataları konsolda görmek için\r\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız');\r\n//     }\r\n//   };\r\n\r\n//   const handleRegister = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/register', {\r\n//         email,\r\n//         password\r\n//       });\r\n//       setMessage(res.data.message);\r\n//       clearFields();\r\n//       setTimeout(() => {\r\n//         setFormType('login');\r\n//         setMessage(''); \r\n//       }, 2000); \r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Kayıt hatası');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <div className=\"login-wrapper\">\r\n//         <div className=\"role-tabs\">\r\n//           <button \r\n//             className={`tab-button ${loginMode === 'admin' ? 'active' : ''}`}\r\n//             onClick={() => setLoginMode('admin')}\r\n//           >\r\n//             Yönetici Girişi\r\n//           </button>\r\n//           <button \r\n//             className={`tab-button ${loginMode === 'user' ? 'active' : ''}`}\r\n//             onClick={() => setLoginMode('user')}\r\n//           >\r\n//             Kullanıcı Girişi\r\n//           </button>\r\n//         </div>\r\n//         <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\r\n//           <h2>{formType === 'login' ? (loginMode === 'admin' ? 'Yönetici Girişi' : 'Kullanıcı Girişi') : 'Kaydol'}</h2>\r\n//           <input\r\n//             type=\"email\"\r\n//             placeholder=\"E-posta Adresi\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//             required\r\n//           />\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Şifre\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             required\r\n//           />\r\n//           <button type=\"submit\">\r\n//             {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\r\n//           </button>\r\n//           {error && <p className=\"error\">{error}</p>}\r\n//           {message && <p className=\"success\">{message}</p>}\r\n//           <div className=\"form-switch\">\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={() => {\r\n//                 setFormType(formType === 'login' ? 'register' : 'login');\r\n//                 clearFields();\r\n//               }}\r\n//             >\r\n//               {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\r\n//             </button>\r\n//             <button type=\"button\" onClick={() => navigate('/forgot-password')}>\r\n//               Şifremi Unuttum\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LoginPage;\r\n\r\n// ===================================\r\n// src/LoginPage.js\r\n// ===================================\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './LoginPage.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nfunction LoginPage() {\r\n  // Sadece hangi sekmenin aktif olduğunu tutan tek bir state\r\n  const [activeTab, setActiveTab] = useState('admin'); // 'admin' veya 'user'\r\n\r\n  // Her form için ayrı state'ler. Bu, karışıklığı önler.\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n  const [adminPassword, setAdminPassword] = useState('');\r\n  \r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // YÖNETİCİ GİRİŞ FONKSİYONU\r\n  const handleAdminLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/login', { email: adminEmail, password: adminPassword });\r\n      const token = res.data.token;\r\n      const decodedToken = jwtDecode(token);\r\n\r\n      // Sadece admin ise devam et, değilse hata ver.\r\n      if (decodedToken.role !== 'admin') {\r\n        setError('Bu alan sadece yöneticilere aittir.');\r\n        return;\r\n      }\r\n\r\n      localStorage.setItem('token', token);\r\n      navigate('/dashboard', { replace: true });\r\n\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Giriş işlemi başarısız');\r\n    }\r\n  };\r\n\r\n  // KULLANICI GİRİŞ FONKSİYONU\r\n  const handleUserLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/login', { email: userEmail, password: userPassword });\r\n      const token = res.data.token;\r\n      // Kullanıcının admin olup olmadığını kontrol etmeye gerek yok, backend zaten doğru rolü veriyor.\r\n      localStorage.setItem('token', token);\r\n      navigate('/home', { replace: true });\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Giriş işlemi başarısız');\r\n    }\r\n  };\r\n\r\n  const clearErrors = () => setError('');\r\n\r\n   const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/register', {\r\n        email,\r\n        password\r\n      });\r\n      setMessage(res.data.message);\r\n      clearFields();\r\n      setTimeout(() => {\r\n        setFormType('login');\r\n        setMessage(''); \r\n      }, 2000); \r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Kayıt hatası');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-wrapper\">\r\n        <div className=\"role-tabs\">\r\n          <button \r\n            className={`tab-button ${activeTab === 'admin' ? 'active' : ''}`}\r\n            onClick={() => { setActiveTab('admin'); clearErrors(); }}\r\n          >\r\n            Yönetici Girişi\r\n          </button>\r\n          <button \r\n            className={`tab-button ${activeTab === 'user' ? 'active' : ''}`}\r\n            onClick={() => { setActiveTab('user'); clearErrors(); }}\r\n          >\r\n            Kullanıcı Girişi\r\n          </button>\r\n        </div>\r\n\r\n        {/* === YÖNETİCİ GİRİŞ FORMU === */}\r\n        {activeTab === 'admin' && (\r\n          <form className=\"login-form\" onSubmit={handleAdminLogin}>\r\n            <h2>Yönetici Girişi</h2>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"E-posta Adresi\"\r\n              value={adminEmail}\r\n              onChange={(e) => setAdminEmail(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Şifre\"\r\n              value={adminPassword}\r\n              onChange={(e) => setAdminPassword(e.target.value)}\r\n              required\r\n            />\r\n            <button type=\"submit\">Giriş Yap</button>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            <div className=\"form-switch admin-switch\">\r\n              {/* Yönetici formunda sadece \"Şifremi Unuttum\" var */}\r\n              <span onClick={() => navigate('/forgot-password')}>Şifremi Unuttum</span>\r\n            </div>\r\n          </form>\r\n        )}\r\n\r\n        {/* === KULLANICI GİRİŞ FORMU === */}\r\n        {activeTab === 'user' && (\r\n          <form className=\"login-form\" onSubmit={handleUserLogin}>\r\n            <h2>Kullanıcı Girişi</h2>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"E-posta Adresi\"\r\n              value={userEmail}\r\n              onChange={(e) => setUserEmail(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Şifre\"\r\n              value={userPassword}\r\n              onChange={(e) => setUserPassword(e.target.value)}\r\n              required\r\n            />\r\n            <button type=\"submit\">Giriş Yap</button>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            {/* Kullanıcı formunda hepsi var */}\r\n            <div className=\"form-switch\">\r\n              <button type=\"button\" onClick={() => navigate('/login')}>\r\n                Kaydol\r\n              </button>\r\n              <button type=\"button\" onClick={() => navigate('/forgot-password')}>\r\n                Şifremi Unuttum\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}