{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\ChatModal.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import io from 'socket.io-client';\n// import { jwtDecode } from 'jwt-decode';\n// import './ChatModal.css';\n\n// const socket = io('http://localhost:5000');\n\n// function ChatModal({ vehicle, closeModal }) {\n//   const [messages, setMessages] = useState([]);\n//   const [newMessage, setNewMessage] = useState('');\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//       try {\n//         const decoded = jwtDecode(token);\n//         setCurrentUser(decoded);\n//       } catch (e) {\n//         console.error(\"Geçersiz Token:\", e);\n//         closeModal();\n//       }\n//     }\n//   }, [closeModal]);\n\n//   const conversationId = currentUser ? `user_${currentUser.id}-admin_1-vehicle_${vehicle.id}` : null;\n\n//   useEffect(() => {\n//     if (conversationId && currentUser) {\n//       console.log(`[Kullanıcı Sohbet] ${conversationId} odasına katılınıyor...`);\n\n//       // Önceki bağlantıları temizle\n//       socket.off('load_messages');\n//       socket.off('receive_message');\n\n//       socket.emit('join_room', conversationId);\n\n//       const handleLoadMessages = (loadedMessages) => {\n//         console.log(`[Kullanıcı Sohbet] ${loadedMessages.length} adet geçmiş mesaj yüklendi.`);\n//         setMessages(loadedMessages);\n//       };\n\n//       const handleReceiveMessage = (message) => {\n//         console.log('[Kullanıcı Sohbet] Yeni mesaj alındı:', message);\n//         setMessages((prevMessages) => [...prevMessages, message]);\n//       };\n\n//       socket.on('load_messages', handleLoadMessages);\n//       socket.on('receive_message', handleReceiveMessage);\n\n//       return () => {\n//         console.log(`[Kullanıcı Sohbet] Listener'lar temizleniyor.`);\n//         socket.off('load_messages', handleLoadMessages);\n//         socket.off('receive_message', handleReceiveMessage);\n//         socket.emit('leave_room', conversationId);\n//       };\n//     }\n//   }, [conversationId, currentUser]);\n\n//   useEffect(() => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   }, [messages]);\n\n//   const handleSendMessage = (e) => {\n//     e.preventDefault();\n//     if (newMessage.trim() === '' || !currentUser || !conversationId) return;\n\n//     const messageData = {\n//       conversation_id: conversationId,\n//       sender_id: currentUser.id,\n//       receiver_id: 1, // Admin'in ID'si\n//       vehicle_id: vehicle.id,\n//       message: newMessage,\n//     };\n\n//     console.log('[Kullanıcı Sohbet] Mesaj gönderiliyor:', messageData);\n//     socket.emit('send_message', messageData);\n//     setNewMessage('');\n//   };\n\n//   return (\n//     <div className=\"chat-modal-overlay\" onClick={closeModal}>\n//       <div className=\"chat-modal-content\" onClick={(e) => e.stopPropagation()}>\n//         <div className=\"chat-header\">\n//           <div className=\"chat-header-info\">\n//             <h3>{vehicle.brand} {vehicle.model}</h3>\n//             <span>Satıcı ile Mesajlaşma</span>\n//           </div>\n//           <button onClick={closeModal} className=\"close-chat-btn\">×</button>\n//         </div>\n\n//         <div className=\"chat-messages\">\n//           {messages.map((msg, index) => (\n//             <div\n//               key={msg.id || index}\n//               className={`message-bubble ${msg.sender_id === currentUser?.id ? 'sent' : 'received'}`}\n//             >\n//               <p>{msg.message}</p>\n//               <span className=\"message-time\">\n//                 {new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n//               </span>\n//             </div>\n//           ))}\n//           <div ref={messagesEndRef} />\n//         </div>\n\n//         <form className=\"chat-input-form\" onSubmit={handleSendMessage}>\n//           <input\n//             type=\"text\"\n//             value={newMessage}\n//             onChange={(e) => setNewMessage(e.target.value)}\n//             placeholder=\"Mesajınızı yazın...\"\n//             disabled={!currentUser}\n//           />\n//           <button type=\"submit\" disabled={!currentUser}>Gönder</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ChatModal;\nimport React, { useState, useEffect, useRef } from 'react'; // <-- HATA BURADAYDI, DÜZELTİLDİ\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\nimport './ChatModal.css';\nimport { socket } from './socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatModal({\n  vehicle,\n  closeModal\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        setCurrentUser(jwtDecode(token));\n      } catch (e) {\n        console.error(\"Geçersiz Token:\", e);\n        closeModal();\n      }\n    } else {\n      closeModal();\n    }\n  }, [closeModal]);\n  const conversationId = currentUser ? `user_${currentUser.id}-admin_1-vehicle_${vehicle.id}` : null;\n  useEffect(() => {\n    if (!conversationId) return;\n    socket.connect();\n    function onConnect() {\n      socket.emit('join_room', conversationId);\n    }\n    function handleLoadMessages(loadedMessages) {\n      setMessages(loadedMessages);\n    }\n    function handleReceiveMessage(message) {\n      if (message.conversation_id === conversationId) {\n        setMessages(prev => [...prev, message]);\n      }\n    }\n    function handleMessageDeleted({\n      messageId\n    }) {\n      setMessages(prevMessages => prevMessages.filter(msg => msg.id !== messageId));\n    }\n    socket.on('connect', onConnect);\n    socket.on('load_messages', handleLoadMessages);\n    socket.on('receive_message', handleReceiveMessage);\n    socket.on('message_deleted', handleMessageDeleted);\n    if (socket.connected) {\n      onConnect();\n    }\n    return () => {\n      socket.off('connect', onConnect);\n      socket.off('load_messages', handleLoadMessages);\n      socket.off('receive_message', handleReceiveMessage);\n      socket.off('message_deleted', handleMessageDeleted);\n      socket.disconnect();\n    };\n  }, [conversationId]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    const trimmedMessage = newMessage.trim();\n    if (trimmedMessage === '' || !currentUser || !conversationId) return;\n    const messageData = {\n      conversation_id: conversationId,\n      sender_id: currentUser.id,\n      receiver_id: 1,\n      vehicle_id: vehicle.id,\n      message: trimmedMessage\n    };\n    socket.emit('send_message', messageData);\n    setNewMessage('');\n  };\n  const handleDeleteMessage = async messageId => {\n    if (window.confirm(\"Mesajı silmek istediğinizden emin misiniz?\")) {\n      try {\n        const token = localStorage.getItem('token');\n        await axios.delete(`http://localhost:5000/api/messages/${messageId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error(\"Mesaj silinemedi:\", error);\n        alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Mesaj silinirken bir hata oluştu.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-modal-overlay\",\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [vehicle.brand, \" \", vehicle.model]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Sat\\u0131c\\u0131 ile Mesajla\\u015Fma\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"close-chat-btn\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map(msg => {\n          const isSentByUser = parseInt(msg.sender_id) === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-wrapper ${isSentByUser ? 'sent' : 'received'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble\",\n              children: [isSentByUser && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-message-btn\",\n                onClick: () => handleDeleteMessage(msg.id),\n                title: \"Mesaj\\u0131 Sil\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: msg.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: new Date(msg.created_at).toLocaleTimeString([], {\n                  hour: '2-digit',\n                  minute: '2-digit'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)\n          }, msg.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat-input-form\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Mesaj\\u0131n\\u0131z\\u0131 yaz\\u0131n...\",\n          disabled: !currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !currentUser || !newMessage.trim(),\n          children: \"G\\xF6nder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatModal, \"6DufjDdN5Qn14yafmoQ2OcC0JIY=\");\n_c = ChatModal;\nexport default ChatModal;\nvar _c;\n$RefreshReg$(_c, \"ChatModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jwtDecode","axios","socket","jsxDEV","_jsxDEV","ChatModal","vehicle","closeModal","_s","messages","setMessages","newMessage","setNewMessage","currentUser","setCurrentUser","messagesEndRef","token","localStorage","getItem","e","console","error","conversationId","id","connect","onConnect","emit","handleLoadMessages","loadedMessages","handleReceiveMessage","message","conversation_id","prev","handleMessageDeleted","messageId","prevMessages","filter","msg","on","connected","off","disconnect","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","preventDefault","trimmedMessage","trim","messageData","sender_id","receiver_id","vehicle_id","handleDeleteMessage","window","confirm","delete","headers","_error$response","_error$response$data","alert","response","data","className","onClick","children","stopPropagation","brand","model","fileName","_jsxFileName","lineNumber","columnNumber","map","isSentByUser","parseInt","title","Date","created_at","toLocaleTimeString","hour","minute","ref","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/ChatModal.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import io from 'socket.io-client';\r\n// import { jwtDecode } from 'jwt-decode';\r\n// import './ChatModal.css';\r\n\r\n// const socket = io('http://localhost:5000');\r\n\r\n// function ChatModal({ vehicle, closeModal }) {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [newMessage, setNewMessage] = useState('');\r\n//   const [currentUser, setCurrentUser] = useState(null);\r\n//   const messagesEndRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (token) {\r\n//       try {\r\n//         const decoded = jwtDecode(token);\r\n//         setCurrentUser(decoded);\r\n//       } catch (e) {\r\n//         console.error(\"Geçersiz Token:\", e);\r\n//         closeModal();\r\n//       }\r\n//     }\r\n//   }, [closeModal]);\r\n\r\n//   const conversationId = currentUser ? `user_${currentUser.id}-admin_1-vehicle_${vehicle.id}` : null;\r\n\r\n//   useEffect(() => {\r\n//     if (conversationId && currentUser) {\r\n//       console.log(`[Kullanıcı Sohbet] ${conversationId} odasına katılınıyor...`);\r\n      \r\n//       // Önceki bağlantıları temizle\r\n//       socket.off('load_messages');\r\n//       socket.off('receive_message');\r\n      \r\n//       socket.emit('join_room', conversationId);\r\n\r\n//       const handleLoadMessages = (loadedMessages) => {\r\n//         console.log(`[Kullanıcı Sohbet] ${loadedMessages.length} adet geçmiş mesaj yüklendi.`);\r\n//         setMessages(loadedMessages);\r\n//       };\r\n\r\n//       const handleReceiveMessage = (message) => {\r\n//         console.log('[Kullanıcı Sohbet] Yeni mesaj alındı:', message);\r\n//         setMessages((prevMessages) => [...prevMessages, message]);\r\n//       };\r\n\r\n//       socket.on('load_messages', handleLoadMessages);\r\n//       socket.on('receive_message', handleReceiveMessage);\r\n\r\n//       return () => {\r\n//         console.log(`[Kullanıcı Sohbet] Listener'lar temizleniyor.`);\r\n//         socket.off('load_messages', handleLoadMessages);\r\n//         socket.off('receive_message', handleReceiveMessage);\r\n//         socket.emit('leave_room', conversationId);\r\n//       };\r\n//     }\r\n//   }, [conversationId, currentUser]);\r\n\r\n//   useEffect(() => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n//   }, [messages]);\r\n\r\n//   const handleSendMessage = (e) => {\r\n//     e.preventDefault();\r\n//     if (newMessage.trim() === '' || !currentUser || !conversationId) return;\r\n\r\n//     const messageData = {\r\n//       conversation_id: conversationId,\r\n//       sender_id: currentUser.id,\r\n//       receiver_id: 1, // Admin'in ID'si\r\n//       vehicle_id: vehicle.id,\r\n//       message: newMessage,\r\n//     };\r\n\r\n//     console.log('[Kullanıcı Sohbet] Mesaj gönderiliyor:', messageData);\r\n//     socket.emit('send_message', messageData);\r\n//     setNewMessage('');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"chat-modal-overlay\" onClick={closeModal}>\r\n//       <div className=\"chat-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n//         <div className=\"chat-header\">\r\n//           <div className=\"chat-header-info\">\r\n//             <h3>{vehicle.brand} {vehicle.model}</h3>\r\n//             <span>Satıcı ile Mesajlaşma</span>\r\n//           </div>\r\n//           <button onClick={closeModal} className=\"close-chat-btn\">×</button>\r\n//         </div>\r\n        \r\n//         <div className=\"chat-messages\">\r\n//           {messages.map((msg, index) => (\r\n//             <div\r\n//               key={msg.id || index}\r\n//               className={`message-bubble ${msg.sender_id === currentUser?.id ? 'sent' : 'received'}`}\r\n//             >\r\n//               <p>{msg.message}</p>\r\n//               <span className=\"message-time\">\r\n//                 {new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n//               </span>\r\n//             </div>\r\n//           ))}\r\n//           <div ref={messagesEndRef} />\r\n//         </div>\r\n        \r\n//         <form className=\"chat-input-form\" onSubmit={handleSendMessage}>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={newMessage}\r\n//             onChange={(e) => setNewMessage(e.target.value)}\r\n//             placeholder=\"Mesajınızı yazın...\"\r\n//             disabled={!currentUser}\r\n//           />\r\n//           <button type=\"submit\" disabled={!currentUser}>Gönder</button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ChatModal;\r\nimport React, { useState, useEffect, useRef } from 'react'; // <-- HATA BURADAYDI, DÜZELTİLDİ\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport axios from 'axios';\r\nimport './ChatModal.css';\r\nimport { socket } from './socket';\r\n\r\nfunction ChatModal({ vehicle, closeModal }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        setCurrentUser(jwtDecode(token));\r\n      } catch (e) {\r\n        console.error(\"Geçersiz Token:\", e);\r\n        closeModal();\r\n      }\r\n    } else {\r\n      closeModal();\r\n    }\r\n  }, [closeModal]);\r\n\r\n  const conversationId = currentUser ? `user_${currentUser.id}-admin_1-vehicle_${vehicle.id}` : null;\r\n\r\n  useEffect(() => {\r\n    if (!conversationId) return;\r\n\r\n    socket.connect();\r\n\r\n    function onConnect() {\r\n      socket.emit('join_room', conversationId);\r\n    }\r\n    \r\n    function handleLoadMessages(loadedMessages) {\r\n      setMessages(loadedMessages);\r\n    }\r\n\r\n    function handleReceiveMessage(message) {\r\n      if (message.conversation_id === conversationId) {\r\n        setMessages((prev) => [...prev, message]);\r\n      }\r\n    }\r\n\r\n    function handleMessageDeleted({ messageId }) {\r\n      setMessages((prevMessages) => prevMessages.filter(msg => msg.id !== messageId));\r\n    }\r\n\r\n    socket.on('connect', onConnect);\r\n    socket.on('load_messages', handleLoadMessages);\r\n    socket.on('receive_message', handleReceiveMessage);\r\n    socket.on('message_deleted', handleMessageDeleted);\r\n    \r\n    if (socket.connected) {\r\n      onConnect();\r\n    }\r\n\r\n    return () => {\r\n      socket.off('connect', onConnect);\r\n      socket.off('load_messages', handleLoadMessages);\r\n      socket.off('receive_message', handleReceiveMessage);\r\n      socket.off('message_deleted', handleMessageDeleted);\r\n      socket.disconnect();\r\n    };\r\n  }, [conversationId]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    const trimmedMessage = newMessage.trim();\r\n    if (trimmedMessage === '' || !currentUser || !conversationId) return;\r\n\r\n    const messageData = {\r\n      conversation_id: conversationId,\r\n      sender_id: currentUser.id,\r\n      receiver_id: 1,\r\n      vehicle_id: vehicle.id,\r\n      message: trimmedMessage,\r\n    };\r\n\r\n    socket.emit('send_message', messageData);\r\n    setNewMessage('');\r\n  };\r\n\r\n  const handleDeleteMessage = async (messageId) => {\r\n    if (window.confirm(\"Mesajı silmek istediğinizden emin misiniz?\")) {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            await axios.delete(`http://localhost:5000/api/messages/${messageId}`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Mesaj silinemedi:\", error);\r\n            alert(error.response?.data?.message || \"Mesaj silinirken bir hata oluştu.\");\r\n        }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-modal-overlay\" onClick={closeModal}>\r\n      <div className=\"chat-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"chat-header\">\r\n          <h3>{vehicle.brand} {vehicle.model}</h3>\r\n          <span>Satıcı ile Mesajlaşma</span>\r\n          <button onClick={closeModal} className=\"close-chat-btn\">×</button>\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n          {messages.map((msg) => {\r\n            const isSentByUser = parseInt(msg.sender_id) === currentUser?.id;\r\n            return (\r\n              <div\r\n                key={msg.id}\r\n                className={`message-wrapper ${isSentByUser ? 'sent' : 'received'}`}\r\n              >\r\n                <div className=\"message-bubble\">\r\n                  {isSentByUser && (\r\n                    <button \r\n                      className=\"delete-message-btn\" \r\n                      onClick={() => handleDeleteMessage(msg.id)}\r\n                      title=\"Mesajı Sil\"\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  )}\r\n                  <p>{msg.message}</p>\r\n                  <span className=\"message-time\">\r\n                    {new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        <form className=\"chat-input-form\" onSubmit={handleSendMessage}>\r\n          <input\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Mesajınızı yazın...\"\r\n            disabled={!currentUser}\r\n          />\r\n          <button type=\"submit\" disabled={!currentUser || !newMessage.trim()}>Gönder</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}