{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\AdminChatBox.js\",\n  _s = $RefreshSig$();\n// // // export default AdminChatBox;\n// // import React, { useState, useEffect, useRef } from 'react';\n// // import io from 'socket.io-client';\n// // import { jwtDecode } from 'jwt-decode';\n// // import './AdminChatBox.css';\n\n// // const socket = io('http://localhost:5000');\n\n// // function AdminChatBox({ conversationId }) {\n// //   const [messages, setMessages] = useState([]);\n// //   const [newMessage, setNewMessage] = useState('');\n// //   const [adminUser, setAdminUser] = useState(null);\n// //   const [conversationInfo, setConversationInfo] = useState({});\n// //   const messagesEndRef = useRef(null);\n\n// //   useEffect(() => {\n// //     const token = localStorage.getItem('token');\n// //     if (token) {\n// //       const decoded = jwtDecode(token);\n// //       setAdminUser(decoded);\n// //       console.log('üîç Admin User:', decoded);\n// //     }\n// //   }, []);\n\n// //   useEffect(() => {\n// //     if (conversationId) {\n// //       const parts = conversationId.split('-');\n// //       const userId = parts[0].split('_')[1];\n// //       const vehicleId = parts[2] ? parts[2].split('_')[1] : null;\n// //       setConversationInfo({ userId, vehicleId });\n\n// //       console.log('üîç Conversation Info:', { userId, vehicleId, conversationId });\n\n// //       // √ñnceki listener'larƒ± temizle\n// //       socket.off('load_messages');\n// //       socket.off('receive_message');\n\n// //       socket.emit('join_room', conversationId);\n\n// //       socket.on('load_messages', (loadedMessages) => {\n// //         console.log('üîç Y√ºklenen mesajlar:', loadedMessages);\n// //         setMessages(loadedMessages);\n// //       });\n\n// //       socket.on('receive_message', (message) => {\n// //         console.log('üîç Yeni mesaj:', message);\n// //         setMessages((prev) => [...prev, message]);\n// //       });\n\n// //       return () => {\n// //         socket.off('load_messages');\n// //         socket.off('receive_message');\n// //       };\n// //     }\n// //   }, [conversationId]);\n\n// //   useEffect(() => {\n// //     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n// //   }, [messages]);\n\n// //   const handleSendMessage = (e) => {\n// //     e.preventDefault();\n// //     if (newMessage.trim() === '' || !adminUser || !conversationInfo.userId) return;\n\n// //     const messageData = {\n// //       conversation_id: conversationId,\n// //       sender_id: adminUser.id,\n// //       receiver_id: parseInt(conversationInfo.userId),\n// //       vehicle_id: conversationInfo.vehicleId ? parseInt(conversationInfo.vehicleId) : null,\n// //       message: newMessage.trim(),\n// //     };\n\n// //     console.log('üîç G√∂nderilen mesaj verisi:', messageData);\n// //     socket.emit('send_message', messageData);\n// //     setNewMessage('');\n// //   };\n\n// //   if (!conversationId) {\n// //     return (\n// //       <div className=\"admin-chat-box-empty\">\n// //         <p>G√∂r√ºnt√ºlemek i√ßin bir konu≈üma se√ßin.</p>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"admin-chat-box\">\n// //       <div className=\"chat-messages-admin\">\n// //         {messages.map((msg, index) => {\n// //           const isAdminMessage = parseInt(msg.sender_id) === parseInt(adminUser?.id);\n\n// //           console.log(`üîç Mesaj ${index + 1}:`, {\n// //             id: msg.id,\n// //             sender_id: msg.sender_id,\n// //             admin_id: adminUser?.id,\n// //             isAdmin: isAdminMessage,\n// //             message: msg.message\n// //           });\n\n// //           return (\n// //             <div\n// //               key={msg.id || index}\n// //               className={`message-container ${isAdminMessage ? 'admin-message' : 'user-message'}`}\n// //             >\n// //               <div className={`message-bubble ${isAdminMessage ? 'admin-bubble' : 'user-bubble'}`}>\n// //                 <p>{msg.message}</p>\n// //                 <span className=\"message-time\">\n// //                   {new Date(msg.created_at).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\n// //                 </span>\n// //               </div>\n// //             </div>\n// //           );\n// //         })}\n// //         <div ref={messagesEndRef} />\n// //       </div>\n\n// //       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\n// //         <input\n// //           type=\"text\"\n// //           value={newMessage}\n// //           onChange={(e) => setNewMessage(e.target.value)}\n// //           placeholder=\"Cevabƒ±nƒ±zƒ± yazƒ±n...\"\n// //         />\n// //         <button \n// //           type=\"submit\" \n// //           disabled={!newMessage.trim()}\n// //         >\n// //           ‚û¢\n// //         </button>\n// //       </form>\n// //     </div>\n// //   );\n// // }\n\n// // export default AdminChatBox;\n// import React, { useState, useEffect, useRef } from 'react';\n// import io from 'socket.io-client';\n// import { jwtDecode } from 'jwt-decode';\n// import './AdminChatBox.css';\n\n// const socket = io('http://localhost:5000');\n\n// function AdminChatBox({ conversationId }) {\n//   const [messages, setMessages] = useState([]);\n//   const [newMessage, setNewMessage] = useState('');\n//   const [adminUser, setAdminUser] = useState(null);\n//   const [conversationInfo, setConversationInfo] = useState({});\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//       try {\n//         const decoded = jwtDecode(token);\n//         setAdminUser(decoded);\n//       } catch (error) {\n//         console.error(\"Admin token decode error:\", error);\n//       }\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     // Sadece conversationId deƒüi≈ütiƒüinde √ßalƒ±≈ü\n//     if (conversationId && adminUser) {\n//       const parts = conversationId.split('-');\n//       const userIdPart = parts.find(p => p.startsWith('user_'));\n//       const vehicleIdPart = parts.find(p => p.startsWith('vehicle_'));\n\n//       const userId = userIdPart ? userIdPart.split('_')[1] : null;\n//       const vehicleId = vehicleIdPart ? vehicleIdPart.split('_')[1] : null;\n//       setConversationInfo({ userId, vehicleId });\n\n//       socket.emit('join_room', conversationId);\n\n//       const handleLoadMessages = (loadedMessages) => {\n//         setMessages(loadedMessages);\n//       };\n\n//       const handleReceiveMessage = (message) => {\n//         // Sadece mevcut sohbetimize aitse mesajƒ± ekle\n//         if (message.conversation_id === conversationId) {\n//             setMessages((prev) => [...prev, message]);\n//         }\n//       };\n\n//       socket.on('load_messages', handleLoadMessages);\n//       socket.on('receive_message', handleReceiveMessage);\n\n//       // Component unmount olduƒüunda veya conversationId deƒüi≈ütiƒüinde listener'larƒ± kaldƒ±r\n//       return () => {\n//         socket.off('load_messages', handleLoadMessages);\n//         socket.off('receive_message', handleReceiveMessage);\n//         // ƒ∞steƒüe baƒülƒ±: odadan ayrƒ±lma eventi de eklenebilir\n//         // socket.emit('leave_room', conversationId);\n//       };\n//     }\n//   }, [conversationId, adminUser]);\n\n//   useEffect(() => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   }, [messages]);\n\n//   const handleSendMessage = (e) => {\n//     e.preventDefault();\n//     if (newMessage.trim() === '' || !adminUser || !conversationInfo.userId) return;\n\n//     const messageData = {\n//       conversation_id: conversationId,\n//       sender_id: adminUser.id,\n//       receiver_id: parseInt(conversationInfo.userId),\n//       vehicle_id: conversationInfo.vehicleId ? parseInt(conversationInfo.vehicleId) : null,\n//       message: newMessage.trim(),\n//     };\n\n//     socket.emit('send_message', messageData);\n//     setNewMessage('');\n//   };\n\n//   if (!conversationId) {\n//     return (\n//       <div className=\"admin-chat-box-empty\">\n//         <p>G√∂r√ºnt√ºlemek i√ßin bir konu≈üma se√ßin.</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"admin-chat-box\">\n//       <div className=\"chat-messages-admin\">\n//         {messages.map((msg, index) => {\n//           const isAdminMessage = parseInt(msg.sender_id) === adminUser?.id;\n//           return (\n//             <div\n//               key={msg.id || index}\n//               className={`message-container ${isAdminMessage ? 'admin-message' : 'user-message'}`}\n//             >\n//               <div className={`message-bubble ${isAdminMessage ? 'admin-bubble' : 'user-bubble'}`}>\n//                 <p>{msg.message}</p>\n//                 <span className=\"message-time\">\n//                   {new Date(msg.created_at).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\n//                 </span>\n//               </div>\n//             </div>\n//           );\n//         })}\n//         <div ref={messagesEndRef} />\n//       </div>\n\n//       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\n//         <input\n//           type=\"text\"\n//           value={newMessage}\n//           onChange={(e) => setNewMessage(e.target.value)}\n//           placeholder=\"Cevabƒ±nƒ±zƒ± yazƒ±n...\"\n//         />\n//         <button type=\"submit\" disabled={!newMessage.trim()}>\n//           ‚û¢\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default AdminChatBox;\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport './AdminChatBox.css';\nimport { socket } from './socket'; // <-- Merkezi socket'i import ediyoruz\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminChatBox({\n  conversationId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [adminUser, setAdminUser] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // Admin bilgisini token'dan al\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        setAdminUser(jwtDecode(token));\n      } catch (error) {\n        console.error(\"Admin token decode error:\", error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (!conversationId || !adminUser) {\n      return; // Gerekli bilgiler yoksa hi√ßbir ≈üey yapma\n    }\n\n    // 1. Manuel olarak baƒülantƒ±yƒ± ba≈ülat\n    socket.connect();\n\n    // 2. Baƒülantƒ± kurulduƒüunda odaya katƒ±l\n    function onConnect() {\n      console.log('Admin Socket Baƒülandƒ±! Odaya katƒ±lƒ±yor:', conversationId);\n      socket.emit('join_room', conversationId);\n    }\n\n    // 3. Mesajlarƒ± dinle\n    function onReceiveMessage(message) {\n      if (message.conversation_id === conversationId) {\n        setMessages(prev => [...prev, message]);\n      }\n    }\n\n    // 4. Ge√ßmi≈ü mesajlarƒ± dinle\n    function onLoadMessages(loadedMessages) {\n      setMessages(loadedMessages);\n    }\n\n    // Listener'larƒ± (dinleyicileri) ekle\n    socket.on('connect', onConnect);\n    socket.on('receive_message', onReceiveMessage);\n    socket.on('load_messages', onLoadMessages);\n\n    // ƒ∞lk baƒülantƒ± zaten kurulmu≈üsa onConnect'i manuel tetikle\n    if (socket.connected) {\n      onConnect();\n    }\n\n    // Component'tan √ßƒ±kƒ±ldƒ±ƒüƒ±nda (unmount) temizlik yap\n    return () => {\n      console.log('AdminChatBox temizleniyor, listenerlar kaldƒ±rƒ±lƒ±yor.');\n      socket.off('connect', onConnect);\n      socket.off('receive_message', onReceiveMessage);\n      socket.off('load_messages', onLoadMessages);\n      // Eƒüer ba≈üka bir sohbet kutusu a√ßƒ±k kalmayacaksa baƒülantƒ±yƒ± kapatabiliriz\n      // socket.disconnect(); \n    };\n  }, [conversationId, adminUser]); // Sadece bu deƒüerler deƒüi≈ütiƒüinde effect'i yeniden √ßalƒ±≈ütƒ±r\n\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    // Mesaj geldiƒüinde en alta kaydƒ±r\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    const trimmedMessage = newMessage.trim();\n    if (trimmedMessage === '' || !adminUser) return;\n\n    // conversationId'den kullanƒ±cƒ± ID'sini al\n    const userIdPart = conversationId.split('-').find(p => p.startsWith('user_'));\n    const vehicleIdPart = conversationId.split('-').find(p => p.startsWith('vehicle_'));\n    if (!userIdPart) return; // Kullanƒ±cƒ± ID'si bulunamazsa g√∂nderme\n\n    const receiver_id = parseInt(userIdPart.split('_')[1]);\n    const vehicle_id = vehicleIdPart ? parseInt(vehicleIdPart.split('_')[1]) : null;\n    const messageData = {\n      conversation_id: conversationId,\n      sender_id: adminUser.id,\n      receiver_id,\n      vehicle_id,\n      message: trimmedMessage\n    };\n    socket.emit('send_message', messageData);\n    setNewMessage('');\n  };\n  if (!conversationId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-chat-box-empty\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"G\\xF6r\\xFCnt\\xFClemek i\\xE7in bir konu\\u015Fma se\\xE7in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-chat-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-admin\",\n      children: [messages.map((msg, index) => {\n        const isAdminMessage = parseInt(msg.sender_id) === (adminUser === null || adminUser === void 0 ? void 0 : adminUser.id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-container ${isAdminMessage ? 'admin-message' : 'user-message'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-bubble ${isAdminMessage ? 'admin-bubble' : 'user-bubble'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: new Date(msg.created_at).toLocaleTimeString('tr-TR', {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this)\n        }, msg.id || index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-input-form-admin\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Cevab\\u0131n\\u0131z\\u0131 yaz\\u0131n...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !newMessage.trim(),\n        children: \"\\u27A2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminChatBox, \"3gAwUB0tjPPd2I8/jUDeerMNEgU=\");\n_c = AdminChatBox;\nexport default AdminChatBox;\nvar _c;\n$RefreshReg$(_c, \"AdminChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jwtDecode","socket","jsxDEV","_jsxDEV","AdminChatBox","conversationId","_s","messages","setMessages","newMessage","setNewMessage","adminUser","setAdminUser","messagesEndRef","token","localStorage","getItem","error","console","connect","onConnect","log","emit","onReceiveMessage","message","conversation_id","prev","onLoadMessages","loadedMessages","on","connected","off","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trimmedMessage","trim","userIdPart","split","find","p","startsWith","vehicleIdPart","receiver_id","parseInt","vehicle_id","messageData","sender_id","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","isAdminMessage","Date","created_at","toLocaleTimeString","hour","minute","ref","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/AdminChatBox.js"],"sourcesContent":["\r\n\r\n// // // export default AdminChatBox;\r\n// // import React, { useState, useEffect, useRef } from 'react';\r\n// // import io from 'socket.io-client';\r\n// // import { jwtDecode } from 'jwt-decode';\r\n// // import './AdminChatBox.css';\r\n\r\n// // const socket = io('http://localhost:5000');\r\n\r\n// // function AdminChatBox({ conversationId }) {\r\n// //   const [messages, setMessages] = useState([]);\r\n// //   const [newMessage, setNewMessage] = useState('');\r\n// //   const [adminUser, setAdminUser] = useState(null);\r\n// //   const [conversationInfo, setConversationInfo] = useState({});\r\n// //   const messagesEndRef = useRef(null);\r\n\r\n// //   useEffect(() => {\r\n// //     const token = localStorage.getItem('token');\r\n// //     if (token) {\r\n// //       const decoded = jwtDecode(token);\r\n// //       setAdminUser(decoded);\r\n// //       console.log('üîç Admin User:', decoded);\r\n// //     }\r\n// //   }, []);\r\n\r\n// //   useEffect(() => {\r\n// //     if (conversationId) {\r\n// //       const parts = conversationId.split('-');\r\n// //       const userId = parts[0].split('_')[1];\r\n// //       const vehicleId = parts[2] ? parts[2].split('_')[1] : null;\r\n// //       setConversationInfo({ userId, vehicleId });\r\n\r\n// //       console.log('üîç Conversation Info:', { userId, vehicleId, conversationId });\r\n\r\n// //       // √ñnceki listener'larƒ± temizle\r\n// //       socket.off('load_messages');\r\n// //       socket.off('receive_message');\r\n\r\n// //       socket.emit('join_room', conversationId);\r\n      \r\n// //       socket.on('load_messages', (loadedMessages) => {\r\n// //         console.log('üîç Y√ºklenen mesajlar:', loadedMessages);\r\n// //         setMessages(loadedMessages);\r\n// //       });\r\n      \r\n// //       socket.on('receive_message', (message) => {\r\n// //         console.log('üîç Yeni mesaj:', message);\r\n// //         setMessages((prev) => [...prev, message]);\r\n// //       });\r\n\r\n// //       return () => {\r\n// //         socket.off('load_messages');\r\n// //         socket.off('receive_message');\r\n// //       };\r\n// //     }\r\n// //   }, [conversationId]);\r\n\r\n// //   useEffect(() => {\r\n// //     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n// //   }, [messages]);\r\n\r\n// //   const handleSendMessage = (e) => {\r\n// //     e.preventDefault();\r\n// //     if (newMessage.trim() === '' || !adminUser || !conversationInfo.userId) return;\r\n    \r\n// //     const messageData = {\r\n// //       conversation_id: conversationId,\r\n// //       sender_id: adminUser.id,\r\n// //       receiver_id: parseInt(conversationInfo.userId),\r\n// //       vehicle_id: conversationInfo.vehicleId ? parseInt(conversationInfo.vehicleId) : null,\r\n// //       message: newMessage.trim(),\r\n// //     };\r\n\r\n// //     console.log('üîç G√∂nderilen mesaj verisi:', messageData);\r\n// //     socket.emit('send_message', messageData);\r\n// //     setNewMessage('');\r\n// //   };\r\n\r\n// //   if (!conversationId) {\r\n// //     return (\r\n// //       <div className=\"admin-chat-box-empty\">\r\n// //         <p>G√∂r√ºnt√ºlemek i√ßin bir konu≈üma se√ßin.</p>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   return (\r\n// //     <div className=\"admin-chat-box\">\r\n// //       <div className=\"chat-messages-admin\">\r\n// //         {messages.map((msg, index) => {\r\n// //           const isAdminMessage = parseInt(msg.sender_id) === parseInt(adminUser?.id);\r\n          \r\n// //           console.log(`üîç Mesaj ${index + 1}:`, {\r\n// //             id: msg.id,\r\n// //             sender_id: msg.sender_id,\r\n// //             admin_id: adminUser?.id,\r\n// //             isAdmin: isAdminMessage,\r\n// //             message: msg.message\r\n// //           });\r\n\r\n// //           return (\r\n// //             <div\r\n// //               key={msg.id || index}\r\n// //               className={`message-container ${isAdminMessage ? 'admin-message' : 'user-message'}`}\r\n// //             >\r\n// //               <div className={`message-bubble ${isAdminMessage ? 'admin-bubble' : 'user-bubble'}`}>\r\n// //                 <p>{msg.message}</p>\r\n// //                 <span className=\"message-time\">\r\n// //                   {new Date(msg.created_at).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\r\n// //                 </span>\r\n// //               </div>\r\n// //             </div>\r\n// //           );\r\n// //         })}\r\n// //         <div ref={messagesEndRef} />\r\n// //       </div>\r\n      \r\n// //       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\r\n// //         <input\r\n// //           type=\"text\"\r\n// //           value={newMessage}\r\n// //           onChange={(e) => setNewMessage(e.target.value)}\r\n// //           placeholder=\"Cevabƒ±nƒ±zƒ± yazƒ±n...\"\r\n// //         />\r\n// //         <button \r\n// //           type=\"submit\" \r\n// //           disabled={!newMessage.trim()}\r\n// //         >\r\n// //           ‚û¢\r\n// //         </button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default AdminChatBox;\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import io from 'socket.io-client';\r\n// import { jwtDecode } from 'jwt-decode';\r\n// import './AdminChatBox.css';\r\n\r\n// const socket = io('http://localhost:5000');\r\n\r\n// function AdminChatBox({ conversationId }) {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [newMessage, setNewMessage] = useState('');\r\n//   const [adminUser, setAdminUser] = useState(null);\r\n//   const [conversationInfo, setConversationInfo] = useState({});\r\n//   const messagesEndRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (token) {\r\n//       try {\r\n//         const decoded = jwtDecode(token);\r\n//         setAdminUser(decoded);\r\n//       } catch (error) {\r\n//         console.error(\"Admin token decode error:\", error);\r\n//       }\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     // Sadece conversationId deƒüi≈ütiƒüinde √ßalƒ±≈ü\r\n//     if (conversationId && adminUser) {\r\n//       const parts = conversationId.split('-');\r\n//       const userIdPart = parts.find(p => p.startsWith('user_'));\r\n//       const vehicleIdPart = parts.find(p => p.startsWith('vehicle_'));\r\n      \r\n//       const userId = userIdPart ? userIdPart.split('_')[1] : null;\r\n//       const vehicleId = vehicleIdPart ? vehicleIdPart.split('_')[1] : null;\r\n//       setConversationInfo({ userId, vehicleId });\r\n\r\n//       socket.emit('join_room', conversationId);\r\n\r\n//       const handleLoadMessages = (loadedMessages) => {\r\n//         setMessages(loadedMessages);\r\n//       };\r\n\r\n//       const handleReceiveMessage = (message) => {\r\n//         // Sadece mevcut sohbetimize aitse mesajƒ± ekle\r\n//         if (message.conversation_id === conversationId) {\r\n//             setMessages((prev) => [...prev, message]);\r\n//         }\r\n//       };\r\n\r\n//       socket.on('load_messages', handleLoadMessages);\r\n//       socket.on('receive_message', handleReceiveMessage);\r\n\r\n//       // Component unmount olduƒüunda veya conversationId deƒüi≈ütiƒüinde listener'larƒ± kaldƒ±r\r\n//       return () => {\r\n//         socket.off('load_messages', handleLoadMessages);\r\n//         socket.off('receive_message', handleReceiveMessage);\r\n//         // ƒ∞steƒüe baƒülƒ±: odadan ayrƒ±lma eventi de eklenebilir\r\n//         // socket.emit('leave_room', conversationId);\r\n//       };\r\n//     }\r\n//   }, [conversationId, adminUser]);\r\n\r\n//   useEffect(() => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n//   }, [messages]);\r\n\r\n//   const handleSendMessage = (e) => {\r\n//     e.preventDefault();\r\n//     if (newMessage.trim() === '' || !adminUser || !conversationInfo.userId) return;\r\n    \r\n//     const messageData = {\r\n//       conversation_id: conversationId,\r\n//       sender_id: adminUser.id,\r\n//       receiver_id: parseInt(conversationInfo.userId),\r\n//       vehicle_id: conversationInfo.vehicleId ? parseInt(conversationInfo.vehicleId) : null,\r\n//       message: newMessage.trim(),\r\n//     };\r\n\r\n//     socket.emit('send_message', messageData);\r\n//     setNewMessage('');\r\n//   };\r\n\r\n//   if (!conversationId) {\r\n//     return (\r\n//       <div className=\"admin-chat-box-empty\">\r\n//         <p>G√∂r√ºnt√ºlemek i√ßin bir konu≈üma se√ßin.</p>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"admin-chat-box\">\r\n//       <div className=\"chat-messages-admin\">\r\n//         {messages.map((msg, index) => {\r\n//           const isAdminMessage = parseInt(msg.sender_id) === adminUser?.id;\r\n//           return (\r\n//             <div\r\n//               key={msg.id || index}\r\n//               className={`message-container ${isAdminMessage ? 'admin-message' : 'user-message'}`}\r\n//             >\r\n//               <div className={`message-bubble ${isAdminMessage ? 'admin-bubble' : 'user-bubble'}`}>\r\n//                 <p>{msg.message}</p>\r\n//                 <span className=\"message-time\">\r\n//                   {new Date(msg.created_at).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\r\n//                 </span>\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         })}\r\n//         <div ref={messagesEndRef} />\r\n//       </div>\r\n      \r\n//       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={newMessage}\r\n//           onChange={(e) => setNewMessage(e.target.value)}\r\n//           placeholder=\"Cevabƒ±nƒ±zƒ± yazƒ±n...\"\r\n//         />\r\n//         <button type=\"submit\" disabled={!newMessage.trim()}>\r\n//           ‚û¢\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminChatBox;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport './AdminChatBox.css';\r\nimport { socket } from './socket'; // <-- Merkezi socket'i import ediyoruz\r\n\r\nfunction AdminChatBox({ conversationId }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [adminUser, setAdminUser] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Admin bilgisini token'dan al\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        setAdminUser(jwtDecode(token));\r\n      } catch (error) {\r\n        console.error(\"Admin token decode error:\", error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!conversationId || !adminUser) {\r\n      return; // Gerekli bilgiler yoksa hi√ßbir ≈üey yapma\r\n    }\r\n\r\n    // 1. Manuel olarak baƒülantƒ±yƒ± ba≈ülat\r\n    socket.connect();\r\n\r\n    // 2. Baƒülantƒ± kurulduƒüunda odaya katƒ±l\r\n    function onConnect() {\r\n      console.log('Admin Socket Baƒülandƒ±! Odaya katƒ±lƒ±yor:', conversationId);\r\n      socket.emit('join_room', conversationId);\r\n    }\r\n\r\n    // 3. Mesajlarƒ± dinle\r\n    function onReceiveMessage(message) {\r\n      if (message.conversation_id === conversationId) {\r\n        setMessages((prev) => [...prev, message]);\r\n      }\r\n    }\r\n    \r\n    // 4. Ge√ßmi≈ü mesajlarƒ± dinle\r\n    function onLoadMessages(loadedMessages) {\r\n        setMessages(loadedMessages);\r\n    }\r\n\r\n    // Listener'larƒ± (dinleyicileri) ekle\r\n    socket.on('connect', onConnect);\r\n    socket.on('receive_message', onReceiveMessage);\r\n    socket.on('load_messages', onLoadMessages);\r\n\r\n    // ƒ∞lk baƒülantƒ± zaten kurulmu≈üsa onConnect'i manuel tetikle\r\n    if (socket.connected) {\r\n        onConnect();\r\n    }\r\n\r\n    // Component'tan √ßƒ±kƒ±ldƒ±ƒüƒ±nda (unmount) temizlik yap\r\n    return () => {\r\n      console.log('AdminChatBox temizleniyor, listenerlar kaldƒ±rƒ±lƒ±yor.');\r\n      socket.off('connect', onConnect);\r\n      socket.off('receive_message', onReceiveMessage);\r\n      socket.off('load_messages', onLoadMessages);\r\n      // Eƒüer ba≈üka bir sohbet kutusu a√ßƒ±k kalmayacaksa baƒülantƒ±yƒ± kapatabiliriz\r\n      // socket.disconnect(); \r\n    };\r\n  }, [conversationId, adminUser]); // Sadece bu deƒüerler deƒüi≈ütiƒüinde effect'i yeniden √ßalƒ±≈ütƒ±r\r\n\r\n  useEffect(() => {\r\n    // Mesaj geldiƒüinde en alta kaydƒ±r\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    const trimmedMessage = newMessage.trim();\r\n    if (trimmedMessage === '' || !adminUser) return;\r\n\r\n    // conversationId'den kullanƒ±cƒ± ID'sini al\r\n    const userIdPart = conversationId.split('-').find(p => p.startsWith('user_'));\r\n    const vehicleIdPart = conversationId.split('-').find(p => p.startsWith('vehicle_'));\r\n    if (!userIdPart) return; // Kullanƒ±cƒ± ID'si bulunamazsa g√∂nderme\r\n\r\n    const receiver_id = parseInt(userIdPart.split('_')[1]);\r\n    const vehicle_id = vehicleIdPart ? parseInt(vehicleIdPart.split('_')[1]) : null;\r\n\r\n    const messageData = {\r\n      conversation_id: conversationId,\r\n      sender_id: adminUser.id,\r\n      receiver_id,\r\n      vehicle_id,\r\n      message: trimmedMessage,\r\n    };\r\n\r\n    socket.emit('send_message', messageData);\r\n    setNewMessage('');\r\n  };\r\n\r\n  if (!conversationId) {\r\n    return (\r\n      <div className=\"admin-chat-box-empty\">\r\n        <p>G√∂r√ºnt√ºlemek i√ßin bir konu≈üma se√ßin.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-chat-box\">\r\n      <div className=\"chat-messages-admin\">\r\n        {messages.map((msg, index) => {\r\n          const isAdminMessage = parseInt(msg.sender_id) === adminUser?.id;\r\n          return (\r\n            <div key={msg.id || index} className={`message-container ${isAdminMessage ? 'admin-message' : 'user-message'}`}>\r\n              <div className={`message-bubble ${isAdminMessage ? 'admin-bubble' : 'user-bubble'}`}>\r\n                <p>{msg.message}</p>\r\n                <span className=\"message-time\">\r\n                  {new Date(msg.created_at).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      \r\n      <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Cevabƒ±nƒ±zƒ± yazƒ±n...\"\r\n        />\r\n        <button type=\"submit\" disabled={!newMessage.trim()}>\r\n          ‚û¢\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminChatBox;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}