{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\AdminChatBox.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import io from 'socket.io-client';\n// import { jwtDecode } from 'jwt-decode';\n// import './AdminChatBox.css';\n\n// const socket = io('http://localhost:5000');\n\n// function AdminChatBox({ conversationId }) {\n//   const [messages, setMessages] = useState([]);\n//   const [newMessage, setNewMessage] = useState('');\n//   const [adminUser, setAdminUser] = useState(null);\n//   const [conversationInfo, setConversationInfo] = useState({});\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//       const decoded = jwtDecode(token);\n//       setAdminUser(decoded);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     if (conversationId) {\n//       // conversationId'den bilgileri ayıklayalım (örn: \"user_5-admin_1-vehicle_12\")\n//       const parts = conversationId.split('-');\n//       const userId = parts[0].split('_')[1];\n//       const vehicleId = parts[2].split('_')[1];\n//       setConversationInfo({ userId, vehicleId });\n\n//       socket.emit('join_room', conversationId);\n//       socket.on('load_messages', setMessages);\n//       socket.on('receive_message', (message) => {\n//         setMessages((prev) => [...prev, message]);\n//       });\n//       return () => {\n//         socket.off('load_messages');\n//         socket.off('receive_message');\n//       };\n//     }\n//   }, [conversationId]);\n\n//   useEffect(() => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   }, [messages]);\n\n//   const handleSendMessage = (e) => {\n//     e.preventDefault();\n//     if (newMessage.trim() === '' || !adminUser || !conversationInfo.userId) return;\n\n//     const messageData = {\n//       conversation_id: conversationId,\n//       sender_id: adminUser.id,\n//       receiver_id: parseInt(conversationInfo.userId), // Alıcı, konuşmayı başlatan kullanıcı\n//       vehicle_id: parseInt(conversationInfo.vehicleId),\n//       message: newMessage,\n//     };\n\n//     socket.emit('send_message', messageData);\n//     setNewMessage('');\n//   };\n\n//   if (!conversationId) return null;\n\n//   return (\n//     <div className=\"admin-chat-box\">\n//       <div className=\"chat-messages-admin\">\n//         {messages.map((msg, index) => (\n//           <div\n//             key={msg.id || index}\n//             className={`message-bubble-admin ${msg.sender_id === adminUser?.id ? 'sent-admin' : 'received-admin'}`}\n//           >\n//             <p>{msg.message}</p>\n//             <span className=\"message-time-admin\">{new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\n//           </div>\n//         ))}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\n//         <input\n//           type=\"text\"\n//           value={newMessage}\n//           onChange={(e) => setNewMessage(e.target.value)}\n//           placeholder=\"Cevabınızı yazın...\"\n//         />\n//         <button type=\"submit\">➢</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default AdminChatBox;\n\n// // import React, { useState, useEffect, useRef } from 'react';\n// // import io from 'socket.io-client';\n// // import { jwtDecode } from 'jwt-decode';\n// // import './AdminChatBox.css';\n\n// // const socket = io('http://localhost:5000');\n\n// // function AdminChatBox({ conversationId, vehicleInfo, userInfo }) {\n// //   const [messages, setMessages] = useState([]);\n// //   const [newMessage, setNewMessage] = useState('');\n// //   const [adminUser, setAdminUser] = useState(null);\n// //   const messagesEndRef = useRef(null);\n\n// //   useEffect(() => {\n// //     const token = localStorage.getItem('token');\n// //     if (token) {\n// //       const decoded = jwtDecode(token);\n// //       setAdminUser(decoded);\n// //     }\n// //   }, []);\n\n// //   useEffect(() => {\n// //     if (conversationId && adminUser) {\n// //       // Önceki odadan çık\n// //       socket.emit('leave_room', conversationId);\n\n// //       // Yeni odaya katıl\n// //       socket.emit('join_room', conversationId);\n\n// //       // Mesajları temizle\n// //       setMessages([]);\n\n// //       const handleLoadMessages = (loadedMessages) => {\n// //         console.log('Mesajlar yüklendi:', loadedMessages);\n// //         setMessages(loadedMessages);\n// //       };\n\n// //       const handleReceiveMessage = (message) => {\n// //         console.log('Yeni mesaj alındı:', message);\n// //         setMessages((prev) => [...prev, message]);\n// //       };\n\n// //       socket.on('load_messages', handleLoadMessages);\n// //       socket.on('receive_message', handleReceiveMessage);\n\n// //       return () => {\n// //         socket.off('load_messages', handleLoadMessages);\n// //         socket.off('receive_message', handleReceiveMessage);\n// //       };\n// //     }\n// //   }, [conversationId, adminUser]);\n\n// //   useEffect(() => {\n// //     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n// //   }, [messages]);\n\n// //   const handleSendMessage = (e) => {\n// //     e.preventDefault();\n// //     if (newMessage.trim() === '' || !adminUser || !userInfo) return;\n\n// //     const messageData = {\n// //       conversation_id: conversationId,\n// //       sender_id: adminUser.id,\n// //       receiver_id: userInfo.user_id,\n// //       vehicle_id: vehicleInfo?.vehicle_id || null,\n// //       message: newMessage,\n// //     };\n\n// //     console.log('Admin mesaj gönderiyor:', messageData);\n// //     socket.emit('send_message', messageData);\n// //     setNewMessage('');\n// //   };\n\n// //   if (!conversationId) {\n// //     return (\n// //       <div className=\"admin-chat-box-empty\">\n// //         <p>Görüntülemek için bir konuşma seçin.</p>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"admin-chat-box\">\n// //       <div className=\"chat-header-admin\">\n// //         <div className=\"chat-info\">\n// //           <h3>{userInfo?.user_name || 'Kullanıcı'}</h3>\n// //           <span>{vehicleInfo?.brand} {vehicleInfo?.model}</span>\n// //         </div>\n// //       </div>\n\n// //       <div className=\"chat-messages-admin\">\n// //         {messages.map((msg, index) => (\n// //           <div\n// //             key={msg.id || index}\n// //             className={`message-bubble-admin ${msg.sender_id === adminUser?.id ? 'sent-admin' : 'received-admin'}`}\n// //           >\n// //             <p>{msg.message}</p>\n// //             <span className=\"message-time-admin\">\n// //               {new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n// //             </span>\n// //           </div>\n// //         ))}\n// //         <div ref={messagesEndRef} />\n// //       </div>\n\n// //       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\n// //         <input\n// //           type=\"text\"\n// //           value={newMessage}\n// //           onChange={(e) => setNewMessage(e.target.value)}\n// //           placeholder=\"Cevabınızı yazın...\"\n// //         />\n// //         <button type=\"submit\">➢</button>\n// //       </form>\n// //     </div>\n// //   );\n// // }\n\n// // export default AdminChatBox;\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { jwtDecode } from 'jwt-decode';\nimport './AdminChatBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction AdminChatBox({\n  conversationId,\n  vehicleInfo,\n  userInfo\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [adminUser, setAdminUser] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        setAdminUser(decoded);\n        console.log('Admin kullanıcısı yüklendi:', decoded);\n      } catch (error) {\n        console.error('Token decode hatası:', error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (conversationId && adminUser) {\n      console.log('=== ADMIN CHAT BOX ===');\n      console.log('Conversation ID:', conversationId);\n      console.log('Admin User ID:', adminUser.id);\n      console.log('User Info:', userInfo);\n      console.log('Vehicle Info:', vehicleInfo);\n\n      // Önceki bağlantıları temizle\n      socket.off('load_messages');\n      socket.off('receive_message');\n      socket.off('error');\n\n      // Yeni odaya katıl\n      socket.emit('join_room', {\n        conversationId: conversationId,\n        userId: adminUser.id\n      });\n\n      // Mesajları temizle\n      setMessages([]);\n      const handleLoadMessages = loadedMessages => {\n        console.log('Admin - Yüklenen mesajlar:', loadedMessages);\n        // Her mesaj için sender bilgisini kontrol et\n        const processedMessages = loadedMessages.map(msg => {\n          console.log(`Mesaj ID: ${msg.id}, Sender ID: ${msg.sender_id}, Admin ID: ${adminUser.id}`);\n          return {\n            ...msg,\n            isFromAdmin: parseInt(msg.sender_id) === parseInt(adminUser.id)\n          };\n        });\n        setMessages(processedMessages);\n      };\n      const handleReceiveMessage = message => {\n        console.log('Admin - Yeni mesaj alındı:', message);\n        console.log(`Yeni mesaj - Sender ID: ${message.sender_id}, Admin ID: ${adminUser.id}`);\n        const processedMessage = {\n          ...message,\n          isFromAdmin: parseInt(message.sender_id) === parseInt(adminUser.id)\n        };\n        setMessages(prev => [...prev, processedMessage]);\n      };\n      const handleError = error => {\n        console.error('Socket hatası:', error);\n        alert('Bağlantı hatası: ' + error.message);\n      };\n\n      // Event listener'ları ekle\n      socket.on('load_messages', handleLoadMessages);\n      socket.on('receive_message', handleReceiveMessage);\n      socket.on('error', handleError);\n      return () => {\n        socket.off('load_messages', handleLoadMessages);\n        socket.off('receive_message', handleReceiveMessage);\n        socket.off('error', handleError);\n      };\n    }\n  }, [conversationId, adminUser, userInfo, vehicleInfo]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (newMessage.trim() === '') {\n      console.log('Boş mesaj gönderilemez');\n      return;\n    }\n    if (!adminUser) {\n      console.log('Admin kullanıcısı bulunamadı');\n      alert('Oturum hatası! Lütfen yeniden giriş yapın.');\n      return;\n    }\n    if (!userInfo) {\n      console.log('Kullanıcı bilgisi bulunamadı');\n      alert('Kullanıcı bilgisi bulunamadı!');\n      return;\n    }\n\n    // Conversation ID'den veya userInfo'dan receiver ID'yi bul\n    let receiverId = null;\n    if (conversationId.includes('user_')) {\n      const match = conversationId.match(/user_(\\d+)/);\n      if (match) {\n        receiverId = parseInt(match[1]);\n      }\n    }\n\n    // Yedek olarak userInfo'dan al\n    if (!receiverId) {\n      receiverId = userInfo.user_id || userInfo.sender_id || userInfo.id;\n    }\n    if (!receiverId) {\n      console.error('Alıcı ID bulunamadı!');\n      console.error('UserInfo:', userInfo);\n      console.error('ConversationId:', conversationId);\n      alert('Alıcı bilgisi bulunamadı!');\n      return;\n    }\n    const messageData = {\n      conversation_id: conversationId,\n      sender_id: parseInt(adminUser.id),\n      // Admin gönderdiği için admin ID\n      receiver_id: parseInt(receiverId),\n      // Kullanıcının ID'si\n      vehicle_id: (vehicleInfo === null || vehicleInfo === void 0 ? void 0 : vehicleInfo.vehicle_id) || (vehicleInfo === null || vehicleInfo === void 0 ? void 0 : vehicleInfo.id) || null,\n      message: newMessage.trim()\n    };\n    console.log('=== ADMIN MESAJ GÖNDERİYOR ===');\n    console.log('Mesaj verisi:', JSON.stringify(messageData, null, 2));\n\n    // Socket bağlantı kontrolü\n    if (!socket.connected) {\n      console.error('Socket bağlantısı yok!');\n      alert('Bağlantı hatası! Sayfa yenilenecek.');\n      window.location.reload();\n      return;\n    }\n    socket.emit('send_message', messageData);\n    setNewMessage('');\n  };\n  if (!conversationId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-chat-box-empty\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCAC Sohbet Se\\xE7in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Mesajla\\u015Fmaya ba\\u015Flamak i\\xE7in soldaki listeden bir konu\\u015Fma se\\xE7in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-chat-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header-admin\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\uD83D\\uDC64 \", (userInfo === null || userInfo === void 0 ? void 0 : userInfo.user_name) || (userInfo === null || userInfo === void 0 ? void 0 : userInfo.sender_name) || 'Kullanıcı']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83D\\uDE97 \", vehicleInfo === null || vehicleInfo === void 0 ? void 0 : vehicleInfo.brand, \" \", vehicleInfo === null || vehicleInfo === void 0 ? void 0 : vehicleInfo.model, \" \", vehicleInfo === null || vehicleInfo === void 0 ? void 0 : vehicleInfo.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            fontSize: '11px',\n            color: '#666'\n          },\n          children: [\"ID: \", conversationId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"online-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"online-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Aktif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-admin\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDCAC Hen\\xFCz mesaj yok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0130lk mesaj\\u0131 g\\xF6ndererek sohbeti ba\\u015Flat\\u0131n!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this) : messages.map((msg, index) => {\n        // Mesajın admin'den mi geldiğini kontrol et\n        const isFromCurrentAdmin = parseInt(msg.sender_id) === parseInt(adminUser.id);\n        console.log(`Mesaj ${index + 1}:`, {\n          id: msg.id,\n          sender_id: msg.sender_id,\n          admin_id: adminUser.id,\n          isFromCurrentAdmin,\n          message: msg.message\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-bubble-admin ${isFromCurrentAdmin ? 'sent-admin' : 'received-admin'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"message-sender\",\n              children: isFromCurrentAdmin ? '👨‍💼 Admin' : `👤 ${msg.sender_name || 'Kullanıcı'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time-admin\",\n              children: new Date(msg.created_at).toLocaleTimeString('tr-TR', {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this)]\n        }, msg.id || `msg-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-input-form-admin\",\n      onSubmit: handleSendMessage,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Cevab\\u0131n\\u0131z\\u0131 yaz\\u0131n...\",\n          disabled: !adminUser,\n          maxLength: 1000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !adminUser || !newMessage.trim(),\n          className: \"send-button\",\n          children: \"\\uD83D\\uDCE4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-panel\",\n      style: {\n        fontSize: '10px',\n        background: '#f0f0f0',\n        padding: '8px',\n        margin: '8px',\n        borderRadius: '4px',\n        color: '#666'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83D\\uDD27 Debug Bilgileri:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Admin ID: \", adminUser === null || adminUser === void 0 ? void 0 : adminUser.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Admin Ad\\u0131: \", adminUser === null || adminUser === void 0 ? void 0 : adminUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Kullan\\u0131c\\u0131 ID: \", (userInfo === null || userInfo === void 0 ? void 0 : userInfo.user_id) || (userInfo === null || userInfo === void 0 ? void 0 : userInfo.sender_id) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Kullan\\u0131c\\u0131 Ad\\u0131: \", (userInfo === null || userInfo === void 0 ? void 0 : userInfo.user_name) || (userInfo === null || userInfo === void 0 ? void 0 : userInfo.sender_name) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Ara\\xE7 ID: \", (vehicleInfo === null || vehicleInfo === void 0 ? void 0 : vehicleInfo.vehicle_id) || (vehicleInfo === null || vehicleInfo === void 0 ? void 0 : vehicleInfo.id) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Socket Ba\\u011Fl\\u0131: \", socket.connected ? '✅' : '❌']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Mesaj Say\\u0131s\\u0131: \", messages.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminChatBox, \"3gAwUB0tjPPd2I8/jUDeerMNEgU=\");\n_c = AdminChatBox;\nexport default AdminChatBox;\nvar _c;\n$RefreshReg$(_c, \"AdminChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jwtDecode","jsxDEV","_jsxDEV","socket","AdminChatBox","conversationId","vehicleInfo","userInfo","_s","messages","setMessages","newMessage","setNewMessage","adminUser","setAdminUser","messagesEndRef","token","localStorage","getItem","decoded","console","log","error","id","off","emit","userId","handleLoadMessages","loadedMessages","processedMessages","map","msg","sender_id","isFromAdmin","parseInt","handleReceiveMessage","message","processedMessage","prev","handleError","alert","on","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","receiverId","includes","match","user_id","messageData","conversation_id","receiver_id","vehicle_id","JSON","stringify","connected","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","user_name","sender_name","brand","model","year","style","fontSize","color","length","index","isFromCurrentAdmin","admin_id","Date","created_at","toLocaleTimeString","hour","minute","ref","onSubmit","type","value","onChange","target","placeholder","disabled","maxLength","process","env","NODE_ENV","background","padding","margin","borderRadius","name","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/AdminChatBox.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import io from 'socket.io-client';\r\n// import { jwtDecode } from 'jwt-decode';\r\n// import './AdminChatBox.css';\r\n\r\n// const socket = io('http://localhost:5000');\r\n\r\n// function AdminChatBox({ conversationId }) {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [newMessage, setNewMessage] = useState('');\r\n//   const [adminUser, setAdminUser] = useState(null);\r\n//   const [conversationInfo, setConversationInfo] = useState({});\r\n//   const messagesEndRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (token) {\r\n//       const decoded = jwtDecode(token);\r\n//       setAdminUser(decoded);\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (conversationId) {\r\n//       // conversationId'den bilgileri ayıklayalım (örn: \"user_5-admin_1-vehicle_12\")\r\n//       const parts = conversationId.split('-');\r\n//       const userId = parts[0].split('_')[1];\r\n//       const vehicleId = parts[2].split('_')[1];\r\n//       setConversationInfo({ userId, vehicleId });\r\n\r\n//       socket.emit('join_room', conversationId);\r\n//       socket.on('load_messages', setMessages);\r\n//       socket.on('receive_message', (message) => {\r\n//         setMessages((prev) => [...prev, message]);\r\n//       });\r\n//       return () => {\r\n//         socket.off('load_messages');\r\n//         socket.off('receive_message');\r\n//       };\r\n//     }\r\n//   }, [conversationId]);\r\n\r\n//   useEffect(() => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n//   }, [messages]);\r\n\r\n//   const handleSendMessage = (e) => {\r\n//     e.preventDefault();\r\n//     if (newMessage.trim() === '' || !adminUser || !conversationInfo.userId) return;\r\n    \r\n//     const messageData = {\r\n//       conversation_id: conversationId,\r\n//       sender_id: adminUser.id,\r\n//       receiver_id: parseInt(conversationInfo.userId), // Alıcı, konuşmayı başlatan kullanıcı\r\n//       vehicle_id: parseInt(conversationInfo.vehicleId),\r\n//       message: newMessage,\r\n//     };\r\n\r\n//     socket.emit('send_message', messageData);\r\n//     setNewMessage('');\r\n//   };\r\n\r\n//   if (!conversationId) return null;\r\n\r\n//   return (\r\n//     <div className=\"admin-chat-box\">\r\n//       <div className=\"chat-messages-admin\">\r\n//         {messages.map((msg, index) => (\r\n//           <div\r\n//             key={msg.id || index}\r\n//             className={`message-bubble-admin ${msg.sender_id === adminUser?.id ? 'sent-admin' : 'received-admin'}`}\r\n//           >\r\n//             <p>{msg.message}</p>\r\n//             <span className=\"message-time-admin\">{new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\r\n//           </div>\r\n//         ))}\r\n//         <div ref={messagesEndRef} />\r\n//       </div>\r\n//       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={newMessage}\r\n//           onChange={(e) => setNewMessage(e.target.value)}\r\n//           placeholder=\"Cevabınızı yazın...\"\r\n//         />\r\n//         <button type=\"submit\">➢</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminChatBox;\r\n\r\n\r\n// // import React, { useState, useEffect, useRef } from 'react';\r\n// // import io from 'socket.io-client';\r\n// // import { jwtDecode } from 'jwt-decode';\r\n// // import './AdminChatBox.css';\r\n\r\n// // const socket = io('http://localhost:5000');\r\n\r\n// // function AdminChatBox({ conversationId, vehicleInfo, userInfo }) {\r\n// //   const [messages, setMessages] = useState([]);\r\n// //   const [newMessage, setNewMessage] = useState('');\r\n// //   const [adminUser, setAdminUser] = useState(null);\r\n// //   const messagesEndRef = useRef(null);\r\n\r\n// //   useEffect(() => {\r\n// //     const token = localStorage.getItem('token');\r\n// //     if (token) {\r\n// //       const decoded = jwtDecode(token);\r\n// //       setAdminUser(decoded);\r\n// //     }\r\n// //   }, []);\r\n\r\n// //   useEffect(() => {\r\n// //     if (conversationId && adminUser) {\r\n// //       // Önceki odadan çık\r\n// //       socket.emit('leave_room', conversationId);\r\n      \r\n// //       // Yeni odaya katıl\r\n// //       socket.emit('join_room', conversationId);\r\n      \r\n// //       // Mesajları temizle\r\n// //       setMessages([]);\r\n\r\n// //       const handleLoadMessages = (loadedMessages) => {\r\n// //         console.log('Mesajlar yüklendi:', loadedMessages);\r\n// //         setMessages(loadedMessages);\r\n// //       };\r\n\r\n// //       const handleReceiveMessage = (message) => {\r\n// //         console.log('Yeni mesaj alındı:', message);\r\n// //         setMessages((prev) => [...prev, message]);\r\n// //       };\r\n\r\n// //       socket.on('load_messages', handleLoadMessages);\r\n// //       socket.on('receive_message', handleReceiveMessage);\r\n\r\n// //       return () => {\r\n// //         socket.off('load_messages', handleLoadMessages);\r\n// //         socket.off('receive_message', handleReceiveMessage);\r\n// //       };\r\n// //     }\r\n// //   }, [conversationId, adminUser]);\r\n\r\n// //   useEffect(() => {\r\n// //     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n// //   }, [messages]);\r\n\r\n// //   const handleSendMessage = (e) => {\r\n// //     e.preventDefault();\r\n// //     if (newMessage.trim() === '' || !adminUser || !userInfo) return;\r\n    \r\n// //     const messageData = {\r\n// //       conversation_id: conversationId,\r\n// //       sender_id: adminUser.id,\r\n// //       receiver_id: userInfo.user_id,\r\n// //       vehicle_id: vehicleInfo?.vehicle_id || null,\r\n// //       message: newMessage,\r\n// //     };\r\n\r\n// //     console.log('Admin mesaj gönderiyor:', messageData);\r\n// //     socket.emit('send_message', messageData);\r\n// //     setNewMessage('');\r\n// //   };\r\n\r\n// //   if (!conversationId) {\r\n// //     return (\r\n// //       <div className=\"admin-chat-box-empty\">\r\n// //         <p>Görüntülemek için bir konuşma seçin.</p>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   return (\r\n// //     <div className=\"admin-chat-box\">\r\n// //       <div className=\"chat-header-admin\">\r\n// //         <div className=\"chat-info\">\r\n// //           <h3>{userInfo?.user_name || 'Kullanıcı'}</h3>\r\n// //           <span>{vehicleInfo?.brand} {vehicleInfo?.model}</span>\r\n// //         </div>\r\n// //       </div>\r\n      \r\n// //       <div className=\"chat-messages-admin\">\r\n// //         {messages.map((msg, index) => (\r\n// //           <div\r\n// //             key={msg.id || index}\r\n// //             className={`message-bubble-admin ${msg.sender_id === adminUser?.id ? 'sent-admin' : 'received-admin'}`}\r\n// //           >\r\n// //             <p>{msg.message}</p>\r\n// //             <span className=\"message-time-admin\">\r\n// //               {new Date(msg.created_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n// //             </span>\r\n// //           </div>\r\n// //         ))}\r\n// //         <div ref={messagesEndRef} />\r\n// //       </div>\r\n      \r\n// //       <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\r\n// //         <input\r\n// //           type=\"text\"\r\n// //           value={newMessage}\r\n// //           onChange={(e) => setNewMessage(e.target.value)}\r\n// //           placeholder=\"Cevabınızı yazın...\"\r\n// //         />\r\n// //         <button type=\"submit\">➢</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default AdminChatBox;\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport './AdminChatBox.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction AdminChatBox({ conversationId, vehicleInfo, userInfo }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [adminUser, setAdminUser] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        setAdminUser(decoded);\r\n        console.log('Admin kullanıcısı yüklendi:', decoded);\r\n      } catch (error) {\r\n        console.error('Token decode hatası:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (conversationId && adminUser) {\r\n      console.log('=== ADMIN CHAT BOX ===');\r\n      console.log('Conversation ID:', conversationId);\r\n      console.log('Admin User ID:', adminUser.id);\r\n      console.log('User Info:', userInfo);\r\n      console.log('Vehicle Info:', vehicleInfo);\r\n\r\n      // Önceki bağlantıları temizle\r\n      socket.off('load_messages');\r\n      socket.off('receive_message');\r\n      socket.off('error');\r\n      \r\n      // Yeni odaya katıl\r\n      socket.emit('join_room', {\r\n        conversationId: conversationId,\r\n        userId: adminUser.id\r\n      });\r\n      \r\n      // Mesajları temizle\r\n      setMessages([]);\r\n\r\n      const handleLoadMessages = (loadedMessages) => {\r\n        console.log('Admin - Yüklenen mesajlar:', loadedMessages);\r\n        // Her mesaj için sender bilgisini kontrol et\r\n        const processedMessages = loadedMessages.map(msg => {\r\n          console.log(`Mesaj ID: ${msg.id}, Sender ID: ${msg.sender_id}, Admin ID: ${adminUser.id}`);\r\n          return {\r\n            ...msg,\r\n            isFromAdmin: parseInt(msg.sender_id) === parseInt(adminUser.id)\r\n          };\r\n        });\r\n        setMessages(processedMessages);\r\n      };\r\n\r\n      const handleReceiveMessage = (message) => {\r\n        console.log('Admin - Yeni mesaj alındı:', message);\r\n        console.log(`Yeni mesaj - Sender ID: ${message.sender_id}, Admin ID: ${adminUser.id}`);\r\n        \r\n        const processedMessage = {\r\n          ...message,\r\n          isFromAdmin: parseInt(message.sender_id) === parseInt(adminUser.id)\r\n        };\r\n        \r\n        setMessages((prev) => [...prev, processedMessage]);\r\n      };\r\n\r\n      const handleError = (error) => {\r\n        console.error('Socket hatası:', error);\r\n        alert('Bağlantı hatası: ' + error.message);\r\n      };\r\n\r\n      // Event listener'ları ekle\r\n      socket.on('load_messages', handleLoadMessages);\r\n      socket.on('receive_message', handleReceiveMessage);\r\n      socket.on('error', handleError);\r\n\r\n      return () => {\r\n        socket.off('load_messages', handleLoadMessages);\r\n        socket.off('receive_message', handleReceiveMessage);\r\n        socket.off('error', handleError);\r\n      };\r\n    }\r\n  }, [conversationId, adminUser, userInfo, vehicleInfo]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (newMessage.trim() === '') {\r\n      console.log('Boş mesaj gönderilemez');\r\n      return;\r\n    }\r\n    \r\n    if (!adminUser) {\r\n      console.log('Admin kullanıcısı bulunamadı');\r\n      alert('Oturum hatası! Lütfen yeniden giriş yapın.');\r\n      return;\r\n    }\r\n    \r\n    if (!userInfo) {\r\n      console.log('Kullanıcı bilgisi bulunamadı');\r\n      alert('Kullanıcı bilgisi bulunamadı!');\r\n      return;\r\n    }\r\n\r\n    // Conversation ID'den veya userInfo'dan receiver ID'yi bul\r\n    let receiverId = null;\r\n    \r\n    if (conversationId.includes('user_')) {\r\n      const match = conversationId.match(/user_(\\d+)/);\r\n      if (match) {\r\n        receiverId = parseInt(match[1]);\r\n      }\r\n    }\r\n    \r\n    // Yedek olarak userInfo'dan al\r\n    if (!receiverId) {\r\n      receiverId = userInfo.user_id || userInfo.sender_id || userInfo.id;\r\n    }\r\n\r\n    if (!receiverId) {\r\n      console.error('Alıcı ID bulunamadı!');\r\n      console.error('UserInfo:', userInfo);\r\n      console.error('ConversationId:', conversationId);\r\n      alert('Alıcı bilgisi bulunamadı!');\r\n      return;\r\n    }\r\n    \r\n    const messageData = {\r\n      conversation_id: conversationId,\r\n      sender_id: parseInt(adminUser.id), // Admin gönderdiği için admin ID\r\n      receiver_id: parseInt(receiverId), // Kullanıcının ID'si\r\n      vehicle_id: vehicleInfo?.vehicle_id || vehicleInfo?.id || null,\r\n      message: newMessage.trim(),\r\n    };\r\n\r\n    console.log('=== ADMIN MESAJ GÖNDERİYOR ===');\r\n    console.log('Mesaj verisi:', JSON.stringify(messageData, null, 2));\r\n    \r\n    // Socket bağlantı kontrolü\r\n    if (!socket.connected) {\r\n      console.error('Socket bağlantısı yok!');\r\n      alert('Bağlantı hatası! Sayfa yenilenecek.');\r\n      window.location.reload();\r\n      return;\r\n    }\r\n\r\n    socket.emit('send_message', messageData);\r\n    setNewMessage('');\r\n  };\r\n\r\n  if (!conversationId) {\r\n    return (\r\n      <div className=\"admin-chat-box-empty\">\r\n        <div className=\"empty-state\">\r\n          <h3>💬 Sohbet Seçin</h3>\r\n          <p>Mesajlaşmaya başlamak için soldaki listeden bir konuşma seçin.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-chat-box\">\r\n      <div className=\"chat-header-admin\">\r\n        <div className=\"chat-info\">\r\n          <h3>👤 {userInfo?.user_name || userInfo?.sender_name || 'Kullanıcı'}</h3>\r\n          <span>🚗 {vehicleInfo?.brand} {vehicleInfo?.model} {vehicleInfo?.year}</span>\r\n          <small style={{fontSize: '11px', color: '#666'}}>\r\n            ID: {conversationId}\r\n          </small>\r\n        </div>\r\n        <div className=\"online-status\">\r\n          <span className=\"online-dot\"></span>\r\n          <span>Aktif</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"chat-messages-admin\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"no-messages\">\r\n            <p>💬 Henüz mesaj yok</p>\r\n            <p>İlk mesajı göndererek sohbeti başlatın!</p>\r\n          </div>\r\n        ) : (\r\n          messages.map((msg, index) => {\r\n            // Mesajın admin'den mi geldiğini kontrol et\r\n            const isFromCurrentAdmin = parseInt(msg.sender_id) === parseInt(adminUser.id);\r\n            \r\n            console.log(`Mesaj ${index + 1}:`, {\r\n              id: msg.id,\r\n              sender_id: msg.sender_id,\r\n              admin_id: adminUser.id,\r\n              isFromCurrentAdmin,\r\n              message: msg.message\r\n            });\r\n\r\n            return (\r\n              <div\r\n                key={msg.id || `msg-${index}`}\r\n                className={`message-bubble-admin ${isFromCurrentAdmin ? 'sent-admin' : 'received-admin'}`}\r\n              >\r\n                <div className=\"message-content\">\r\n                  <p>{msg.message}</p>\r\n                </div>\r\n                <div className=\"message-info\">\r\n                  <small className=\"message-sender\">\r\n                    {isFromCurrentAdmin ? '👨‍💼 Admin' : `👤 ${msg.sender_name || 'Kullanıcı'}`}\r\n                  </small>\r\n                  <span className=\"message-time-admin\">\r\n                    {new Date(msg.created_at).toLocaleTimeString('tr-TR', { \r\n                      hour: '2-digit', \r\n                      minute: '2-digit' \r\n                    })}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      \r\n      <form className=\"chat-input-form-admin\" onSubmit={handleSendMessage}>\r\n        <div className=\"input-container\">\r\n          <input\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Cevabınızı yazın...\"\r\n            disabled={!adminUser}\r\n            maxLength={1000}\r\n          />\r\n          <button \r\n            type=\"submit\" \r\n            disabled={!adminUser || !newMessage.trim()}\r\n            className=\"send-button\"\r\n          >\r\n            📤\r\n          </button>\r\n        </div>\r\n      </form>\r\n      \r\n      {/* Debug Paneli - sadece development'da görünür */}\r\n      {process.env.NODE_ENV === 'development' && (\r\n        <div className=\"debug-panel\" style={{ \r\n          fontSize: '10px', \r\n          background: '#f0f0f0', \r\n          padding: '8px', \r\n          margin: '8px',\r\n          borderRadius: '4px',\r\n          color: '#666'\r\n        }}>\r\n          <div><strong>🔧 Debug Bilgileri:</strong></div>\r\n          <div>Admin ID: {adminUser?.id}</div>\r\n          <div>Admin Adı: {adminUser?.name}</div>\r\n          <div>Kullanıcı ID: {userInfo?.user_id || userInfo?.sender_id || 'N/A'}</div>\r\n          <div>Kullanıcı Adı: {userInfo?.user_name || userInfo?.sender_name || 'N/A'}</div>\r\n          <div>Araç ID: {vehicleInfo?.vehicle_id || vehicleInfo?.id || 'N/A'}</div>\r\n          <div>Socket Bağlı: {socket.connected ? '✅' : '❌'}</div>\r\n          <div>Mesaj Sayısı: {messages.length}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminChatBox;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASK,YAAYA,CAAC;EAAEC,cAAc;EAAEC,WAAW;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMmB,cAAc,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACd,MAAMmB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,OAAO,GAAGnB,SAAS,CAACgB,KAAK,CAAC;QAChCF,YAAY,CAACK,OAAO,CAAC;QACrBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,OAAO,CAAC;MACrD,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACd,IAAIQ,cAAc,IAAIQ,SAAS,EAAE;MAC/BO,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCD,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEhB,cAAc,CAAC;MAC/Ce,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAER,SAAS,CAACU,EAAE,CAAC;MAC3CH,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEd,QAAQ,CAAC;MACnCa,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEf,WAAW,CAAC;;MAEzC;MACAH,MAAM,CAACqB,GAAG,CAAC,eAAe,CAAC;MAC3BrB,MAAM,CAACqB,GAAG,CAAC,iBAAiB,CAAC;MAC7BrB,MAAM,CAACqB,GAAG,CAAC,OAAO,CAAC;;MAEnB;MACArB,MAAM,CAACsB,IAAI,CAAC,WAAW,EAAE;QACvBpB,cAAc,EAAEA,cAAc;QAC9BqB,MAAM,EAAEb,SAAS,CAACU;MACpB,CAAC,CAAC;;MAEF;MACAb,WAAW,CAAC,EAAE,CAAC;MAEf,MAAMiB,kBAAkB,GAAIC,cAAc,IAAK;QAC7CR,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEO,cAAc,CAAC;QACzD;QACA,MAAMC,iBAAiB,GAAGD,cAAc,CAACE,GAAG,CAACC,GAAG,IAAI;UAClDX,OAAO,CAACC,GAAG,CAAC,aAAaU,GAAG,CAACR,EAAE,gBAAgBQ,GAAG,CAACC,SAAS,eAAenB,SAAS,CAACU,EAAE,EAAE,CAAC;UAC1F,OAAO;YACL,GAAGQ,GAAG;YACNE,WAAW,EAAEC,QAAQ,CAACH,GAAG,CAACC,SAAS,CAAC,KAAKE,QAAQ,CAACrB,SAAS,CAACU,EAAE;UAChE,CAAC;QACH,CAAC,CAAC;QACFb,WAAW,CAACmB,iBAAiB,CAAC;MAChC,CAAC;MAED,MAAMM,oBAAoB,GAAIC,OAAO,IAAK;QACxChB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEe,OAAO,CAAC;QAClDhB,OAAO,CAACC,GAAG,CAAC,2BAA2Be,OAAO,CAACJ,SAAS,eAAenB,SAAS,CAACU,EAAE,EAAE,CAAC;QAEtF,MAAMc,gBAAgB,GAAG;UACvB,GAAGD,OAAO;UACVH,WAAW,EAAEC,QAAQ,CAACE,OAAO,CAACJ,SAAS,CAAC,KAAKE,QAAQ,CAACrB,SAAS,CAACU,EAAE;QACpE,CAAC;QAEDb,WAAW,CAAE4B,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,gBAAgB,CAAC,CAAC;MACpD,CAAC;MAED,MAAME,WAAW,GAAIjB,KAAK,IAAK;QAC7BF,OAAO,CAACE,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtCkB,KAAK,CAAC,mBAAmB,GAAGlB,KAAK,CAACc,OAAO,CAAC;MAC5C,CAAC;;MAED;MACAjC,MAAM,CAACsC,EAAE,CAAC,eAAe,EAAEd,kBAAkB,CAAC;MAC9CxB,MAAM,CAACsC,EAAE,CAAC,iBAAiB,EAAEN,oBAAoB,CAAC;MAClDhC,MAAM,CAACsC,EAAE,CAAC,OAAO,EAAEF,WAAW,CAAC;MAE/B,OAAO,MAAM;QACXpC,MAAM,CAACqB,GAAG,CAAC,eAAe,EAAEG,kBAAkB,CAAC;QAC/CxB,MAAM,CAACqB,GAAG,CAAC,iBAAiB,EAAEW,oBAAoB,CAAC;QACnDhC,MAAM,CAACqB,GAAG,CAAC,OAAO,EAAEe,WAAW,CAAC;MAClC,CAAC;IACH;EACF,CAAC,EAAE,CAAClC,cAAc,EAAEQ,SAAS,EAAEN,QAAQ,EAAED,WAAW,CAAC,CAAC;EAEtDT,SAAS,CAAC,MAAM;IAAA,IAAA6C,qBAAA;IACd,CAAAA,qBAAA,GAAA3B,cAAc,CAAC4B,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACpC,QAAQ,CAAC,CAAC;EAEd,MAAMqC,iBAAiB,GAAIC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIrC,UAAU,CAACsC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5B7B,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC;IACF;IAEA,IAAI,CAACR,SAAS,EAAE;MACdO,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CmB,KAAK,CAAC,4CAA4C,CAAC;MACnD;IACF;IAEA,IAAI,CAACjC,QAAQ,EAAE;MACba,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CmB,KAAK,CAAC,+BAA+B,CAAC;MACtC;IACF;;IAEA;IACA,IAAIU,UAAU,GAAG,IAAI;IAErB,IAAI7C,cAAc,CAAC8C,QAAQ,CAAC,OAAO,CAAC,EAAE;MACpC,MAAMC,KAAK,GAAG/C,cAAc,CAAC+C,KAAK,CAAC,YAAY,CAAC;MAChD,IAAIA,KAAK,EAAE;QACTF,UAAU,GAAGhB,QAAQ,CAACkB,KAAK,CAAC,CAAC,CAAC,CAAC;MACjC;IACF;;IAEA;IACA,IAAI,CAACF,UAAU,EAAE;MACfA,UAAU,GAAG3C,QAAQ,CAAC8C,OAAO,IAAI9C,QAAQ,CAACyB,SAAS,IAAIzB,QAAQ,CAACgB,EAAE;IACpE;IAEA,IAAI,CAAC2B,UAAU,EAAE;MACf9B,OAAO,CAACE,KAAK,CAAC,sBAAsB,CAAC;MACrCF,OAAO,CAACE,KAAK,CAAC,WAAW,EAAEf,QAAQ,CAAC;MACpCa,OAAO,CAACE,KAAK,CAAC,iBAAiB,EAAEjB,cAAc,CAAC;MAChDmC,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;IAEA,MAAMc,WAAW,GAAG;MAClBC,eAAe,EAAElD,cAAc;MAC/B2B,SAAS,EAAEE,QAAQ,CAACrB,SAAS,CAACU,EAAE,CAAC;MAAE;MACnCiC,WAAW,EAAEtB,QAAQ,CAACgB,UAAU,CAAC;MAAE;MACnCO,UAAU,EAAE,CAAAnD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEmD,UAAU,MAAInD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEiB,EAAE,KAAI,IAAI;MAC9Da,OAAO,EAAEzB,UAAU,CAACsC,IAAI,CAAC;IAC3B,CAAC;IAED7B,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7CD,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEqC,IAAI,CAACC,SAAS,CAACL,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;;IAElE;IACA,IAAI,CAACnD,MAAM,CAACyD,SAAS,EAAE;MACrBxC,OAAO,CAACE,KAAK,CAAC,wBAAwB,CAAC;MACvCkB,KAAK,CAAC,qCAAqC,CAAC;MAC5CqB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MACxB;IACF;IAEA5D,MAAM,CAACsB,IAAI,CAAC,cAAc,EAAE6B,WAAW,CAAC;IACxC1C,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,IAAI,CAACP,cAAc,EAAE;IACnB,oBACEH,OAAA;MAAK8D,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACnC/D,OAAA;QAAK8D,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B/D,OAAA;UAAA+D,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBnE,OAAA;UAAA+D,QAAA,EAAG;QAA8D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACEnE,OAAA;IAAK8D,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B/D,OAAA;MAAK8D,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC/D,OAAA;QAAK8D,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB/D,OAAA;UAAA+D,QAAA,GAAI,eAAG,EAAC,CAAA1D,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE+D,SAAS,MAAI/D,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEgE,WAAW,KAAI,WAAW;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzEnE,OAAA;UAAA+D,QAAA,GAAM,eAAG,EAAC3D,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkE,KAAK,EAAC,GAAC,EAAClE,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEmE,KAAK,EAAC,GAAC,EAACnE,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEoE,IAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7EnE,OAAA;UAAOyE,KAAK,EAAE;YAACC,QAAQ,EAAE,MAAM;YAAEC,KAAK,EAAE;UAAM,CAAE;UAAAZ,QAAA,GAAC,MAC3C,EAAC5D,cAAc;QAAA;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNnE,OAAA;QAAK8D,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B/D,OAAA;UAAM8D,SAAS,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpCnE,OAAA;UAAA+D,QAAA,EAAM;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENnE,OAAA;MAAK8D,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GACjCxD,QAAQ,CAACqE,MAAM,KAAK,CAAC,gBACpB5E,OAAA;QAAK8D,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B/D,OAAA;UAAA+D,QAAA,EAAG;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACzBnE,OAAA;UAAA+D,QAAA,EAAG;QAAuC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,GAEN5D,QAAQ,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEgD,KAAK,KAAK;QAC3B;QACA,MAAMC,kBAAkB,GAAG9C,QAAQ,CAACH,GAAG,CAACC,SAAS,CAAC,KAAKE,QAAQ,CAACrB,SAAS,CAACU,EAAE,CAAC;QAE7EH,OAAO,CAACC,GAAG,CAAC,SAAS0D,KAAK,GAAG,CAAC,GAAG,EAAE;UACjCxD,EAAE,EAAEQ,GAAG,CAACR,EAAE;UACVS,SAAS,EAAED,GAAG,CAACC,SAAS;UACxBiD,QAAQ,EAAEpE,SAAS,CAACU,EAAE;UACtByD,kBAAkB;UAClB5C,OAAO,EAAEL,GAAG,CAACK;QACf,CAAC,CAAC;QAEF,oBACElC,OAAA;UAEE8D,SAAS,EAAE,wBAAwBgB,kBAAkB,GAAG,YAAY,GAAG,gBAAgB,EAAG;UAAAf,QAAA,gBAE1F/D,OAAA;YAAK8D,SAAS,EAAC,iBAAiB;YAAAC,QAAA,eAC9B/D,OAAA;cAAA+D,QAAA,EAAIlC,GAAG,CAACK;YAAO;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC,eACNnE,OAAA;YAAK8D,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B/D,OAAA;cAAO8D,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAC9Be,kBAAkB,GAAG,aAAa,GAAG,MAAMjD,GAAG,CAACwC,WAAW,IAAI,WAAW;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvE,CAAC,eACRnE,OAAA;cAAM8D,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EACjC,IAAIiB,IAAI,CAACnD,GAAG,CAACoD,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;gBACpDC,IAAI,EAAE,SAAS;gBACfC,MAAM,EAAE;cACV,CAAC;YAAC;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA,GAhBDtC,GAAG,CAACR,EAAE,IAAI,OAAOwD,KAAK,EAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiB1B,CAAC;MAEV,CAAC,CACF,eACDnE,OAAA;QAAKqF,GAAG,EAAExE;MAAe;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAENnE,OAAA;MAAM8D,SAAS,EAAC,uBAAuB;MAACwB,QAAQ,EAAE1C,iBAAkB;MAAAmB,QAAA,eAClE/D,OAAA;QAAK8D,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B/D,OAAA;UACEuF,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE/E,UAAW;UAClBgF,QAAQ,EAAG5C,CAAC,IAAKnC,aAAa,CAACmC,CAAC,CAAC6C,MAAM,CAACF,KAAK,CAAE;UAC/CG,WAAW,EAAC,yCAAqB;UACjCC,QAAQ,EAAE,CAACjF,SAAU;UACrBkF,SAAS,EAAE;QAAK;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACFnE,OAAA;UACEuF,IAAI,EAAC,QAAQ;UACbK,QAAQ,EAAE,CAACjF,SAAS,IAAI,CAACF,UAAU,CAACsC,IAAI,CAAC,CAAE;UAC3Ce,SAAS,EAAC,aAAa;UAAAC,QAAA,EACxB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EAGN2B,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,iBACrChG,OAAA;MAAK8D,SAAS,EAAC,aAAa;MAACW,KAAK,EAAE;QAClCC,QAAQ,EAAE,MAAM;QAChBuB,UAAU,EAAE,SAAS;QACrBC,OAAO,EAAE,KAAK;QACdC,MAAM,EAAE,KAAK;QACbC,YAAY,EAAE,KAAK;QACnBzB,KAAK,EAAE;MACT,CAAE;MAAAZ,QAAA,gBACA/D,OAAA;QAAA+D,QAAA,eAAK/D,OAAA;UAAA+D,QAAA,EAAQ;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/CnE,OAAA;QAAA+D,QAAA,GAAK,YAAU,EAACpD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEU,EAAE;MAAA;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpCnE,OAAA;QAAA+D,QAAA,GAAK,kBAAW,EAACpD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE0F,IAAI;MAAA;QAAArC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvCnE,OAAA;QAAA+D,QAAA,GAAK,0BAAc,EAAC,CAAA1D,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE8C,OAAO,MAAI9C,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEyB,SAAS,KAAI,KAAK;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5EnE,OAAA;QAAA+D,QAAA,GAAK,gCAAe,EAAC,CAAA1D,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE+D,SAAS,MAAI/D,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEgE,WAAW,KAAI,KAAK;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjFnE,OAAA;QAAA+D,QAAA,GAAK,cAAS,EAAC,CAAA3D,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEmD,UAAU,MAAInD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEiB,EAAE,KAAI,KAAK;MAAA;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzEnE,OAAA;QAAA+D,QAAA,GAAK,0BAAc,EAAC9D,MAAM,CAACyD,SAAS,GAAG,GAAG,GAAG,GAAG;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvDnE,OAAA;QAAA+D,QAAA,GAAK,0BAAc,EAACxD,QAAQ,CAACqE,MAAM;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC7D,EAAA,CA5QQJ,YAAY;AAAAoG,EAAA,GAAZpG,YAAY;AA8QrB,eAAeA,YAAY;AAAC,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}