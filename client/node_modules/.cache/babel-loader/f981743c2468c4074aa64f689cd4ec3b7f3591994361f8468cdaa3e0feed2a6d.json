{"ast":null,"code":"// import React, { useState, useEffect, useCallback } from 'react'; // <-- 1. useCallback'i import edin\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import { jwtDecode } from 'jwt-decode';\n// import './HomePage.css'; \n// import ChatModal from './ChatModal';\n// import { socket } from './socket';\n\n// function HomePage() {\n//   const [vehicles, setVehicles] = useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const navigate = useNavigate();\n\n//   const [selectedVehicleForDetails, setSelectedVehicleForDetails] = useState(null);\n//   const [selectedVehicleForChat, setSelectedVehicleForChat] = useState(null);\n\n//   const [userFullName, setUserFullName] = useState('');\n\n//   // --- 2. DEĞİŞİKLİK: handleLogout fonksiyonunu useCallback ile sarmalayın ---\n//   // Bu, fonksiyonun gereksiz yere yeniden oluşturulmasını engeller ve sabit bir referans sağlar.\n//   const handleLogout = useCallback(() => {\n//     socket.disconnect(); \n//     localStorage.removeItem('token');\n//     navigate('/');\n//   }, [navigate]); // navigate, bu fonksiyonun tek bağımlılığıdır.\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//         try {\n//             const decodedToken = jwtDecode(token);\n//             setUserFullName(decodedToken.name); \n//         } catch (error) {\n//             console.error(\"Geçersiz token, çıkış yapılıyor.\", error);\n//             handleLogout(); // Artık sabit olan fonksiyonu burada güvenle kullanabiliriz.\n//         }\n//     } else {\n//         navigate('/');\n//     }\n\n//     const fetchAllVehicles = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/vehicles');\n//         setVehicles(response.data);\n//       } catch (error) {\n//         console.error(\"Araçlar çekilirken hata oluştu:\", error);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n//     fetchAllVehicles();\n\n//   // --- 3. DEĞİŞİKLİK: handleLogout'u bağımlılık dizisine ekleyin ---\n//   // Artık sabit bir fonksiyon olduğu için, bunu yapmak güvenlidir ve uyarıyı ortadan kaldırır.\n//   }, [navigate, handleLogout]); \n\n//   const openDetailsModal = async (vehicleId) => {\n//     try {\n//       const response = await axios.get(`http://localhost:5000/api/vehicles/${vehicleId}`);\n//       setSelectedVehicleForDetails(response.data);\n//     } catch (error) {\n//       alert(\"Araç detayları yüklenirken bir hata oluştu.\");\n//     }\n//   };\n//   const closeDetailsModal = () => setSelectedVehicleForDetails(null);\n\n//   const openChatModal = (vehicle) => {\n//     if (vehicle) {\n//         closeDetailsModal(); \n//         setSelectedVehicleForChat(vehicle); \n//     }\n//   };\n//   const closeChatModal = () => setSelectedVehicleForChat(null);\n\n//   if (isLoading) return <div className=\"loading-container\">İlanlar Yükleniyor...</div>;\n\n//   return (\n//     <div className=\"home-page-container\">\n//       <header className=\"home-header\">\n//         <h1 className=\"brand-title\">\n//           {userFullName \n//             ? `Merhaba ${userFullName}, Bayramlar Auto Araç İlanlarına Hoş Geldiniz.`\n//             : 'Bayramlar Auto Araç İlanlarına Hoş Geldiniz.'\n//           }\n//         </h1>\n//         <button onClick={handleLogout} className=\"logout-button\">Çıkış Yap</button>\n//       </header>\n\n//       {/* ... (kodun geri kalanı aynı) ... */}\n//       <main className=\"vehicle-gallery\">\n//         {vehicles.map(vehicle => (\n//           <div key={vehicle.id} className=\"vehicle-card-item\" onClick={() => openDetailsModal(vehicle.id)}>\n//             <div className=\"card-image-container\">\n//               <img \n//                 src={vehicle.photo_url ? `http://localhost:5000/${vehicle.photo_url}` : 'https://via.placeholder.com/400x300?text=Resim+Yok'} \n//                 alt={`${vehicle.brand} ${vehicle.model}`}\n//               />\n//             </div>\n//             <div className=\"card-content\">\n//               <h3 className=\"vehicle-title\">{vehicle.brand} {vehicle.model}</h3>\n//               <p className=\"vehicle-specs\">{vehicle.year} • {vehicle.mileage?.toLocaleString('tr-TR')} km • {vehicle.fuel}</p>\n//               <div className=\"vehicle-price\">{parseFloat(vehicle.sale_price).toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' })}</div>\n//             </div>\n//           </div>\n//         ))}\n//       </main>\n\n//       {selectedVehicleForDetails && (\n//         <VehicleDetailModal \n//           vehicle={selectedVehicleForDetails} \n//           closeModal={closeDetailsModal} \n//           openChat={() => openChatModal(selectedVehicleForDetails)}\n//         />\n//       )}\n\n//       {/* {selectedVehicleForChat && (\n//         <ChatModal \n//           vehicle={selectedVehicleForChat} \n//           closeModal={closeChatModal} \n//         />\n//       )} */}\n//       {selectedVehicleForChat && (\n//         <ChatModal \n//           key={selectedVehicleForChat.id} // <-- EN ÖNEMLİ DÜZELTME BU SATIRDIR!\n//           vehicle={selectedVehicleForChat} \n//           closeModal={closeChatModal} \n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n// // ... VehicleDetailModal bileşeni aynı kalabilir ...\n// function VehicleDetailModal({ vehicle, closeModal, openChat }) {\n//   const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n//   const nextImage = (e) => {\n//     e.stopPropagation();\n//     setCurrentImageIndex(prev => (prev === vehicle.photos.length - 1 ? 0 : prev + 1));\n//   };\n//   const prevImage = (e) => {\n//     e.stopPropagation();\n//     setCurrentImageIndex(prev => (prev === 0 ? vehicle.photos.length - 1 : prev - 1));\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\" onClick={closeModal}>\n//       <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n//         <button className=\"modal-close-btn\" onClick={closeModal}>×</button>\n//         <div className=\"modal-body\">\n//           <div className=\"modal-images-section\">\n//             {vehicle.photos && vehicle.photos.length > 0 ? (\n//               <div className=\"image-gallery\">\n//                 <div className=\"main-image-container\">\n//                   <img src={`http://localhost:5000/${vehicle.photos[currentImageIndex].photo_url}`} alt=\"Ana Araç\" className=\"main-image\" />\n//                   {vehicle.photos.length > 1 && (\n//                     <>\n//                       <button className=\"image-nav-btn prev\" onClick={prevImage}>‹</button>\n//                       <button className=\"image-nav-btn next\" onClick={nextImage}>›</button>\n//                     </>\n//                   )}\n//                 </div>\n//                 {vehicle.photos.length > 1 && (\n//                   <div className=\"thumbnail-container\">\n//                     {vehicle.photos.map((photo, index) => (\n//                       <img key={photo.id} src={`http://localhost:5000/${photo.photo_url}`} alt={`Thumbnail ${index + 1}`}\n//                            className={`thumbnail ${index === currentImageIndex ? 'active' : ''}`}\n//                            onClick={(e) => { e.stopPropagation(); setCurrentImageIndex(index); }} />\n//                     ))}\n//                   </div>\n//                 )}\n//               </div>\n//             ) : <p>Bu araç için fotoğraf bulunmamaktadır.</p>}\n//           </div>\n//           <div className=\"modal-info-section\">\n//             <h2 className=\"vehicle-modal-title\">{vehicle.brand} {vehicle.model}</h2>\n//             <div className=\"vehicle-details-grid\">\n//               <div className=\"detail-item\"><span className=\"detail-label\">Yıl:</span><span className=\"detail-value\">{vehicle.year}</span></div>\n//               <div className=\"detail-item\"><span className=\"detail-label\">Kilometre:</span><span className=\"detail-value\">{vehicle.mileage?.toLocaleString('tr-TR')} km</span></div>\n//               <div className=\"detail-item\"><span className=\"detail-label\">Yakıt:</span><span className=\"detail-value\">{vehicle.fuel}</span></div>\n//               <div className=\"detail-item\"><span className=\"detail-label\">Vites:</span><span className=\"detail-value\">{vehicle.gear}</span></div>\n//             </div>\n//             <div className=\"price-section\">\n//               <span className=\"price-label\">Satış Fiyatı</span>\n//               <span className=\"price-value\">{parseFloat(vehicle.sale_price).toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' })}</span>\n//             </div>\n//             {vehicle.description && (\n//               <div className=\"description-section\">\n//                 <h4>Açıklama</h4><p>{vehicle.description}</p>\n//               </div>\n//             )}\n//             <button className=\"message-action-button\" onClick={openChat}>\n//               Satıcı ile Canlı Mesajlaşma\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default HomePage;","map":{"version":3,"names":[],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/HomePage.js"],"sourcesContent":["// import React, { useState, useEffect, useCallback } from 'react'; // <-- 1. useCallback'i import edin\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { jwtDecode } from 'jwt-decode';\r\n// import './HomePage.css'; \r\n// import ChatModal from './ChatModal';\r\n// import { socket } from './socket';\r\n\r\n// function HomePage() {\r\n//   const [vehicles, setVehicles] = useState([]);\r\n//   const [isLoading, setIsLoading] = useState(true);\r\n//   const navigate = useNavigate();\r\n  \r\n//   const [selectedVehicleForDetails, setSelectedVehicleForDetails] = useState(null);\r\n//   const [selectedVehicleForChat, setSelectedVehicleForChat] = useState(null);\r\n\r\n//   const [userFullName, setUserFullName] = useState('');\r\n\r\n//   // --- 2. DEĞİŞİKLİK: handleLogout fonksiyonunu useCallback ile sarmalayın ---\r\n//   // Bu, fonksiyonun gereksiz yere yeniden oluşturulmasını engeller ve sabit bir referans sağlar.\r\n//   const handleLogout = useCallback(() => {\r\n//     socket.disconnect(); \r\n//     localStorage.removeItem('token');\r\n//     navigate('/');\r\n//   }, [navigate]); // navigate, bu fonksiyonun tek bağımlılığıdır.\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (token) {\r\n//         try {\r\n//             const decodedToken = jwtDecode(token);\r\n//             setUserFullName(decodedToken.name); \r\n//         } catch (error) {\r\n//             console.error(\"Geçersiz token, çıkış yapılıyor.\", error);\r\n//             handleLogout(); // Artık sabit olan fonksiyonu burada güvenle kullanabiliriz.\r\n//         }\r\n//     } else {\r\n//         navigate('/');\r\n//     }\r\n\r\n//     const fetchAllVehicles = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/vehicles');\r\n//         setVehicles(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Araçlar çekilirken hata oluştu:\", error);\r\n//       } finally {\r\n//         setIsLoading(false);\r\n//       }\r\n//     };\r\n//     fetchAllVehicles();\r\n    \r\n//   // --- 3. DEĞİŞİKLİK: handleLogout'u bağımlılık dizisine ekleyin ---\r\n//   // Artık sabit bir fonksiyon olduğu için, bunu yapmak güvenlidir ve uyarıyı ortadan kaldırır.\r\n//   }, [navigate, handleLogout]); \r\n\r\n//   const openDetailsModal = async (vehicleId) => {\r\n//     try {\r\n//       const response = await axios.get(`http://localhost:5000/api/vehicles/${vehicleId}`);\r\n//       setSelectedVehicleForDetails(response.data);\r\n//     } catch (error) {\r\n//       alert(\"Araç detayları yüklenirken bir hata oluştu.\");\r\n//     }\r\n//   };\r\n//   const closeDetailsModal = () => setSelectedVehicleForDetails(null);\r\n\r\n//   const openChatModal = (vehicle) => {\r\n//     if (vehicle) {\r\n//         closeDetailsModal(); \r\n//         setSelectedVehicleForChat(vehicle); \r\n//     }\r\n//   };\r\n//   const closeChatModal = () => setSelectedVehicleForChat(null);\r\n\r\n//   if (isLoading) return <div className=\"loading-container\">İlanlar Yükleniyor...</div>;\r\n\r\n//   return (\r\n//     <div className=\"home-page-container\">\r\n//       <header className=\"home-header\">\r\n//         <h1 className=\"brand-title\">\r\n//           {userFullName \r\n//             ? `Merhaba ${userFullName}, Bayramlar Auto Araç İlanlarına Hoş Geldiniz.`\r\n//             : 'Bayramlar Auto Araç İlanlarına Hoş Geldiniz.'\r\n//           }\r\n//         </h1>\r\n//         <button onClick={handleLogout} className=\"logout-button\">Çıkış Yap</button>\r\n//       </header>\r\n      \r\n//       {/* ... (kodun geri kalanı aynı) ... */}\r\n//       <main className=\"vehicle-gallery\">\r\n//         {vehicles.map(vehicle => (\r\n//           <div key={vehicle.id} className=\"vehicle-card-item\" onClick={() => openDetailsModal(vehicle.id)}>\r\n//             <div className=\"card-image-container\">\r\n//               <img \r\n//                 src={vehicle.photo_url ? `http://localhost:5000/${vehicle.photo_url}` : 'https://via.placeholder.com/400x300?text=Resim+Yok'} \r\n//                 alt={`${vehicle.brand} ${vehicle.model}`}\r\n//               />\r\n//             </div>\r\n//             <div className=\"card-content\">\r\n//               <h3 className=\"vehicle-title\">{vehicle.brand} {vehicle.model}</h3>\r\n//               <p className=\"vehicle-specs\">{vehicle.year} • {vehicle.mileage?.toLocaleString('tr-TR')} km • {vehicle.fuel}</p>\r\n//               <div className=\"vehicle-price\">{parseFloat(vehicle.sale_price).toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' })}</div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </main>\r\n\r\n//       {selectedVehicleForDetails && (\r\n//         <VehicleDetailModal \r\n//           vehicle={selectedVehicleForDetails} \r\n//           closeModal={closeDetailsModal} \r\n//           openChat={() => openChatModal(selectedVehicleForDetails)}\r\n//         />\r\n//       )}\r\n\r\n//       {/* {selectedVehicleForChat && (\r\n//         <ChatModal \r\n//           vehicle={selectedVehicleForChat} \r\n//           closeModal={closeChatModal} \r\n//         />\r\n//       )} */}\r\n//       {selectedVehicleForChat && (\r\n//         <ChatModal \r\n//           key={selectedVehicleForChat.id} // <-- EN ÖNEMLİ DÜZELTME BU SATIRDIR!\r\n//           vehicle={selectedVehicleForChat} \r\n//           closeModal={closeChatModal} \r\n//         />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // ... VehicleDetailModal bileşeni aynı kalabilir ...\r\n// function VehicleDetailModal({ vehicle, closeModal, openChat }) {\r\n//   const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n//   const nextImage = (e) => {\r\n//     e.stopPropagation();\r\n//     setCurrentImageIndex(prev => (prev === vehicle.photos.length - 1 ? 0 : prev + 1));\r\n//   };\r\n//   const prevImage = (e) => {\r\n//     e.stopPropagation();\r\n//     setCurrentImageIndex(prev => (prev === 0 ? vehicle.photos.length - 1 : prev - 1));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"modal-overlay\" onClick={closeModal}>\r\n//       <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n//         <button className=\"modal-close-btn\" onClick={closeModal}>×</button>\r\n//         <div className=\"modal-body\">\r\n//           <div className=\"modal-images-section\">\r\n//             {vehicle.photos && vehicle.photos.length > 0 ? (\r\n//               <div className=\"image-gallery\">\r\n//                 <div className=\"main-image-container\">\r\n//                   <img src={`http://localhost:5000/${vehicle.photos[currentImageIndex].photo_url}`} alt=\"Ana Araç\" className=\"main-image\" />\r\n//                   {vehicle.photos.length > 1 && (\r\n//                     <>\r\n//                       <button className=\"image-nav-btn prev\" onClick={prevImage}>‹</button>\r\n//                       <button className=\"image-nav-btn next\" onClick={nextImage}>›</button>\r\n//                     </>\r\n//                   )}\r\n//                 </div>\r\n//                 {vehicle.photos.length > 1 && (\r\n//                   <div className=\"thumbnail-container\">\r\n//                     {vehicle.photos.map((photo, index) => (\r\n//                       <img key={photo.id} src={`http://localhost:5000/${photo.photo_url}`} alt={`Thumbnail ${index + 1}`}\r\n//                            className={`thumbnail ${index === currentImageIndex ? 'active' : ''}`}\r\n//                            onClick={(e) => { e.stopPropagation(); setCurrentImageIndex(index); }} />\r\n//                     ))}\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//             ) : <p>Bu araç için fotoğraf bulunmamaktadır.</p>}\r\n//           </div>\r\n//           <div className=\"modal-info-section\">\r\n//             <h2 className=\"vehicle-modal-title\">{vehicle.brand} {vehicle.model}</h2>\r\n//             <div className=\"vehicle-details-grid\">\r\n//               <div className=\"detail-item\"><span className=\"detail-label\">Yıl:</span><span className=\"detail-value\">{vehicle.year}</span></div>\r\n//               <div className=\"detail-item\"><span className=\"detail-label\">Kilometre:</span><span className=\"detail-value\">{vehicle.mileage?.toLocaleString('tr-TR')} km</span></div>\r\n//               <div className=\"detail-item\"><span className=\"detail-label\">Yakıt:</span><span className=\"detail-value\">{vehicle.fuel}</span></div>\r\n//               <div className=\"detail-item\"><span className=\"detail-label\">Vites:</span><span className=\"detail-value\">{vehicle.gear}</span></div>\r\n//             </div>\r\n//             <div className=\"price-section\">\r\n//               <span className=\"price-label\">Satış Fiyatı</span>\r\n//               <span className=\"price-value\">{parseFloat(vehicle.sale_price).toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' })}</span>\r\n//             </div>\r\n//             {vehicle.description && (\r\n//               <div className=\"description-section\">\r\n//                 <h4>Açıklama</h4><p>{vehicle.description}</p>\r\n//               </div>\r\n//             )}\r\n//             <button className=\"message-action-button\" onClick={openChat}>\r\n//               Satıcı ile Canlı Mesajlaşma\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default HomePage;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}