{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammet\\\\Desktop\\\\galerio-app\\\\client\\\\src\\\\MessagesPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useCallback } from 'react';\n// import axios from 'axios';\n// import AdminChatBox from './AdminChatBox';\n// import './MessagesPage.css';\n\n// function MessagesPage() {\n//   const [conversations, setConversations] = useState([]);\n//   const [selectedConversation, setSelectedConversation] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [error, setError] = useState('');\n\n//   const fetchConversations = useCallback(async () => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       if (!token) {\n//         setError('Yetkilendirme token\\'ı bulunamadı. Lütfen tekrar giriş yapın.');\n//         setIsLoading(false);\n//         return;\n//       }\n\n//       const response = await axios.get('http://localhost:5000/api/conversations', {\n//         headers: { 'Authorization': `Bearer ${token}` }\n//       });\n\n//       setConversations(response.data);\n//       setError('');\n//     } catch (error) {\n//       console.error(\"Konuşmalar yüklenemedi:\", error);\n//       const errorMessage = error.response?.data?.message || 'Konuşmalar yüklenirken bir hata oluştu.';\n//       setError(errorMessage);\n\n//       if (error.response?.status === 403 || error.response?.status === 401) {\n//         localStorage.removeItem('token');\n//         // İsteğe bağlı: kullanıcıyı otomatik olarak login sayfasına yönlendirebilirsiniz.\n//         // window.location.href = '/';\n//       }\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     fetchConversations();\n//     const interval = setInterval(fetchConversations, 30000); // 30 saniyede bir yenile\n//     return () => clearInterval(interval);\n//   }, [fetchConversations]);\n\n//   const refreshConversations = () => {\n//     setIsLoading(true);\n//     fetchConversations();\n//   };\n\n//   if (isLoading) {\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\">Gelen Kutusu Yükleniyor...</div>\n//       </div>\n//     );\n//   }\n\n//   if (error && conversations.length === 0) {\n//     return (\n//       <div className=\"error-container\">\n//         <p>Hata: {error}</p>\n//         <button onClick={refreshConversations}>Tekrar Dene</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"messages-page-container\">\n//       <div className=\"conversations-sidebar\">\n//         <div className=\"sidebar-header\">\n//           <h2>Gelen Kutusu</h2>\n//           <button onClick={refreshConversations} className=\"refresh-btn\" title=\"Yenile\">\n//             🔄\n//           </button>\n//         </div>\n\n//         <div className=\"conversations-list\">\n//           {conversations.length === 0 ? (\n//             <div className=\"no-conversations\">\n//               <p>Henüz bir görüşme başlatılmamış.</p>\n//             </div>\n//           ) : (\n//             conversations.map((convo) => (\n//               <div \n//                 key={convo.conversation_id} \n//                 className={`conversation-item ${\n//                   selectedConversation?.conversation_id === convo.conversation_id ? 'active' : ''\n//                 }`}\n//                 onClick={() => setSelectedConversation(convo)}\n//               >\n//                 <div className=\"conversation-avatar\">\n//                   {convo.user_name?.charAt(0).toUpperCase() || '?'}\n//                 </div>\n\n//                 <div className=\"conversation-content\">\n//                   <div className=\"conversation-header\">\n//                     <h4>{convo.user_name || 'Bilinmeyen Kullanıcı'}</h4>\n//                     <span className=\"conversation-time\">\n//                       {new Date(convo.created_at).toLocaleString('tr-TR', {\n//                         hour: '2-digit', minute: '2-digit'\n//                       })}\n//                     </span>\n//                   </div>\n\n//                   <div className=\"vehicle-info\">\n//                     <span className=\"vehicle-name\">{convo.brand} {convo.model}</span>\n//                   </div>\n\n//                   <p className=\"last-message\">{convo.message}</p>\n//                 </div>\n//               </div>\n//             ))\n//           )}\n//         </div>\n//       </div>\n\n//       <div className=\"chat-area\">\n//         {selectedConversation ? (\n//           <AdminChatBox \n//             key={selectedConversation.conversation_id} // Key değiştiğinde component yeniden oluşturulur\n//             conversationId={selectedConversation.conversation_id}\n//             // Diğer proplara artık gerek yok, her şey conversationId ile hallediliyor.\n//           />\n//         ) : (\n//           <div className=\"no-chat-selected\">\n//             <div className=\"no-chat-content\">\n//               <h3>Hoş Geldiniz!</h3>\n//               <p>Mesajları görüntülemek için sol menüden bir konuşma seçin.</p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default MessagesPage;\n// Bu kodun tamamını kopyalayıp projenizdeki src/MessagesPage.js dosyasına yapıştırın.\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport AdminChatBox from './AdminChatBox';\nimport './MessagesPage.css';\nimport { useNavigate } from 'react-router-dom'; // *** YENİ: Yönlendirme için eklendi\nimport { socket } from './socket'; // *** YENİ: Anlık güncellemeler için socket eklendi\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessagesPage() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // *** YENİ: navigate fonksiyonu kullanıma hazır\n\n  const fetchConversations = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Yetkilendirme token\\'ı bulunamadı. Lütfen tekrar giriş yapın.');\n        setIsLoading(false);\n        navigate('/'); // Token yoksa login'e yönlendir\n        return;\n      }\n      const response = await axios.get('http://localhost:5000/api/conversations', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setConversations(response.data);\n      setError('');\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response3;\n      console.error(\"Konuşmalar yüklenemedi:\", error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Konuşmalar yüklenirken bir hata oluştu.';\n      setError(errorMessage);\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403 || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        localStorage.removeItem('token');\n        navigate('/');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, [navigate]); // navigate bağımlılıklara eklendi\n\n  // useEffect(() => {\n  //   socket.connect(); // Socket bağlantısını başlat\n  //   fetchConversations();\n\n  //   // *** YENİ: Socket üzerinden listeyi yenileme\n  //   const handleRefresh = () => fetchConversations();\n  //   const handleConversationDeleted = (deletedConvId) => {\n  //       // Eğer silinen sohbet ekranda seçili ise, seçimi kaldır\n  //       if (selectedConversation?.conversation_id === deletedConvId) {\n  //           setSelectedConversation(null);\n  //       }\n  //       fetchConversations(); // Listeyi anında yenile\n  //   };\n\n  //   socket.on('admin_refresh_conversations', handleRefresh);\n  //   socket.on('conversation_deleted', handleConversationDeleted);\n\n  //   // Component kaldırıldığında (sayfadan ayrıldığında) socket bağlantısını kes ve dinleyicileri kaldır\n  //   return () => {\n  //     socket.off('admin_refresh_conversations', handleRefresh);\n  //     socket.off('conversation_deleted', handleConversationDeleted);\n  //     socket.disconnect();\n  //   };\n  // }, [fetchConversations, selectedConversation]); // selectedConversation buraya eklendi\n\n  // *** YENİ: Sohbeti kalıcı olarak silme fonksiyonu\n  const handleDeleteConversation = async (e, conversationId) => {\n    e.stopPropagation(); // Butonun arkasındaki div'in tıklanmasını engelle\n    if (window.confirm(\"Bu sohbeti ve içindeki tüm mesajları kalıcı olarak silmek istediğinizden emin misiniz?\")) {\n      try {\n        const token = localStorage.getItem('token');\n        await axios.delete(`http://localhost:5000/api/conversations/${conversationId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        // Arayüzün güncellenmesi socket.io tarafından otomatik olarak tetiklenecek\n      } catch (error) {\n        var _error$response4, _error$response4$data;\n        alert(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Sohbet silinirken bir hata oluştu.\");\n      }\n    }\n  };\n  const refreshConversations = () => {\n    setIsLoading(true);\n    fetchConversations();\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Gelen Kutusu Y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && conversations.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hata: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: refreshConversations,\n        children: \"Tekrar Dene\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversations-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/dashboard'),\n          className: \"back-to-dashboard-btn\",\n          title: \"Y\\xF6netim Paneline D\\xF6n\",\n          children: \"\\u2039 Panele D\\xF6n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Gelen Kutusu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refreshConversations,\n          className: \"refresh-btn\",\n          title: \"Yenile\",\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-list\",\n        children: conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-conversations\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hen\\xFCz bir g\\xF6r\\xFC\\u015Fme ba\\u015Flat\\u0131lmam\\u0131\\u015F.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this) : conversations.map(convo => {\n          var _convo$user_name;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `conversation-item ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.conversation_id) === convo.conversation_id ? 'active' : ''}`,\n            onClick: () => setSelectedConversation(convo),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-avatar\",\n              children: ((_convo$user_name = convo.user_name) === null || _convo$user_name === void 0 ? void 0 : _convo$user_name.charAt(0).toUpperCase()) || '?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: convo.user_name || 'Bilinmeyen Kullanıcı'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"conversation-time\",\n                  children: new Date(convo.created_at).toLocaleString('tr-TR', {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vehicle-info\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"vehicle-name\",\n                  children: [convo.brand, \" \", convo.model]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"last-message\",\n                children: convo.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-conversation-btn\",\n              title: \"Sohbeti Sil\",\n              onClick: e => handleDeleteConversation(e, convo.conversation_id),\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)]\n          }, convo.conversation_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: selectedConversation ? /*#__PURE__*/_jsxDEV(AdminChatBox, {\n        conversationId: selectedConversation.conversation_id\n      }, selectedConversation.conversation_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-chat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ho\\u015F Geldiniz!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Mesajlar\\u0131 g\\xF6r\\xFCnt\\xFClemek i\\xE7in sol men\\xFCden bir konu\\u015Fma se\\xE7in.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n}\n_s(MessagesPage, \"FQ9x3Bf7dBi6AVtSDDZWGyl38lI=\", false, function () {\n  return [useNavigate];\n});\n_c = MessagesPage;\nexport default MessagesPage;\nvar _c;\n$RefreshReg$(_c, \"MessagesPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","AdminChatBox","useNavigate","socket","jsxDEV","_jsxDEV","MessagesPage","_s","conversations","setConversations","selectedConversation","setSelectedConversation","isLoading","setIsLoading","error","setError","navigate","fetchConversations","token","localStorage","getItem","response","get","headers","data","_error$response","_error$response$data","_error$response2","_error$response3","console","errorMessage","message","status","removeItem","handleDeleteConversation","e","conversationId","stopPropagation","window","confirm","delete","_error$response4","_error$response4$data","alert","refreshConversations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","title","map","convo","_convo$user_name","conversation_id","user_name","charAt","toUpperCase","Date","created_at","toLocaleString","hour","minute","brand","model","_c","$RefreshReg$"],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/MessagesPage.js"],"sourcesContent":["// import React, { useState, useEffect, useCallback } from 'react';\r\n// import axios from 'axios';\r\n// import AdminChatBox from './AdminChatBox';\r\n// import './MessagesPage.css';\r\n\r\n// function MessagesPage() {\r\n//   const [conversations, setConversations] = useState([]);\r\n//   const [selectedConversation, setSelectedConversation] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(true);\r\n//   const [error, setError] = useState('');\r\n\r\n//   const fetchConversations = useCallback(async () => {\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       if (!token) {\r\n//         setError('Yetkilendirme token\\'ı bulunamadı. Lütfen tekrar giriş yapın.');\r\n//         setIsLoading(false);\r\n//         return;\r\n//       }\r\n\r\n//       const response = await axios.get('http://localhost:5000/api/conversations', {\r\n//         headers: { 'Authorization': `Bearer ${token}` }\r\n//       });\r\n      \r\n//       setConversations(response.data);\r\n//       setError('');\r\n//     } catch (error) {\r\n//       console.error(\"Konuşmalar yüklenemedi:\", error);\r\n//       const errorMessage = error.response?.data?.message || 'Konuşmalar yüklenirken bir hata oluştu.';\r\n//       setError(errorMessage);\r\n      \r\n//       if (error.response?.status === 403 || error.response?.status === 401) {\r\n//         localStorage.removeItem('token');\r\n//         // İsteğe bağlı: kullanıcıyı otomatik olarak login sayfasına yönlendirebilirsiniz.\r\n//         // window.location.href = '/';\r\n//       }\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     fetchConversations();\r\n//     const interval = setInterval(fetchConversations, 30000); // 30 saniyede bir yenile\r\n//     return () => clearInterval(interval);\r\n//   }, [fetchConversations]);\r\n\r\n//   const refreshConversations = () => {\r\n//     setIsLoading(true);\r\n//     fetchConversations();\r\n//   };\r\n\r\n//   if (isLoading) {\r\n//     return (\r\n//       <div className=\"loading-container\">\r\n//         <div className=\"loading-spinner\">Gelen Kutusu Yükleniyor...</div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   if (error && conversations.length === 0) {\r\n//     return (\r\n//       <div className=\"error-container\">\r\n//         <p>Hata: {error}</p>\r\n//         <button onClick={refreshConversations}>Tekrar Dene</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"messages-page-container\">\r\n//       <div className=\"conversations-sidebar\">\r\n//         <div className=\"sidebar-header\">\r\n//           <h2>Gelen Kutusu</h2>\r\n//           <button onClick={refreshConversations} className=\"refresh-btn\" title=\"Yenile\">\r\n//             🔄\r\n//           </button>\r\n//         </div>\r\n        \r\n//         <div className=\"conversations-list\">\r\n//           {conversations.length === 0 ? (\r\n//             <div className=\"no-conversations\">\r\n//               <p>Henüz bir görüşme başlatılmamış.</p>\r\n//             </div>\r\n//           ) : (\r\n//             conversations.map((convo) => (\r\n//               <div \r\n//                 key={convo.conversation_id} \r\n//                 className={`conversation-item ${\r\n//                   selectedConversation?.conversation_id === convo.conversation_id ? 'active' : ''\r\n//                 }`}\r\n//                 onClick={() => setSelectedConversation(convo)}\r\n//               >\r\n//                 <div className=\"conversation-avatar\">\r\n//                   {convo.user_name?.charAt(0).toUpperCase() || '?'}\r\n//                 </div>\r\n                \r\n//                 <div className=\"conversation-content\">\r\n//                   <div className=\"conversation-header\">\r\n//                     <h4>{convo.user_name || 'Bilinmeyen Kullanıcı'}</h4>\r\n//                     <span className=\"conversation-time\">\r\n//                       {new Date(convo.created_at).toLocaleString('tr-TR', {\r\n//                         hour: '2-digit', minute: '2-digit'\r\n//                       })}\r\n//                     </span>\r\n//                   </div>\r\n                  \r\n//                   <div className=\"vehicle-info\">\r\n//                     <span className=\"vehicle-name\">{convo.brand} {convo.model}</span>\r\n//                   </div>\r\n                  \r\n//                   <p className=\"last-message\">{convo.message}</p>\r\n//                 </div>\r\n//               </div>\r\n//             ))\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"chat-area\">\r\n//         {selectedConversation ? (\r\n//           <AdminChatBox \r\n//             key={selectedConversation.conversation_id} // Key değiştiğinde component yeniden oluşturulur\r\n//             conversationId={selectedConversation.conversation_id}\r\n//             // Diğer proplara artık gerek yok, her şey conversationId ile hallediliyor.\r\n//           />\r\n//         ) : (\r\n//           <div className=\"no-chat-selected\">\r\n//             <div className=\"no-chat-content\">\r\n//               <h3>Hoş Geldiniz!</h3>\r\n//               <p>Mesajları görüntülemek için sol menüden bir konuşma seçin.</p>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default MessagesPage;\r\n// Bu kodun tamamını kopyalayıp projenizdeki src/MessagesPage.js dosyasına yapıştırın.\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport AdminChatBox from './AdminChatBox';\r\nimport './MessagesPage.css';\r\nimport { useNavigate } from 'react-router-dom'; // *** YENİ: Yönlendirme için eklendi\r\nimport { socket } from './socket'; // *** YENİ: Anlık güncellemeler için socket eklendi\r\n\r\nfunction MessagesPage() {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate(); // *** YENİ: navigate fonksiyonu kullanıma hazır\r\n\r\n  const fetchConversations = useCallback(async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setError('Yetkilendirme token\\'ı bulunamadı. Lütfen tekrar giriş yapın.');\r\n        setIsLoading(false);\r\n        navigate('/'); // Token yoksa login'e yönlendir\r\n        return;\r\n      }\r\n\r\n      const response = await axios.get('http://localhost:5000/api/conversations', {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      \r\n      setConversations(response.data);\r\n      setError('');\r\n    } catch (error) {\r\n      console.error(\"Konuşmalar yüklenemedi:\", error);\r\n      const errorMessage = error.response?.data?.message || 'Konuşmalar yüklenirken bir hata oluştu.';\r\n      setError(errorMessage);\r\n      \r\n      if (error.response?.status === 403 || error.response?.status === 401) {\r\n        localStorage.removeItem('token');\r\n        navigate('/');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [navigate]); // navigate bağımlılıklara eklendi\r\n\r\n  // useEffect(() => {\r\n  //   socket.connect(); // Socket bağlantısını başlat\r\n  //   fetchConversations();\r\n\r\n  //   // *** YENİ: Socket üzerinden listeyi yenileme\r\n  //   const handleRefresh = () => fetchConversations();\r\n  //   const handleConversationDeleted = (deletedConvId) => {\r\n  //       // Eğer silinen sohbet ekranda seçili ise, seçimi kaldır\r\n  //       if (selectedConversation?.conversation_id === deletedConvId) {\r\n  //           setSelectedConversation(null);\r\n  //       }\r\n  //       fetchConversations(); // Listeyi anında yenile\r\n  //   };\r\n\r\n  //   socket.on('admin_refresh_conversations', handleRefresh);\r\n  //   socket.on('conversation_deleted', handleConversationDeleted);\r\n\r\n  //   // Component kaldırıldığında (sayfadan ayrıldığında) socket bağlantısını kes ve dinleyicileri kaldır\r\n  //   return () => {\r\n  //     socket.off('admin_refresh_conversations', handleRefresh);\r\n  //     socket.off('conversation_deleted', handleConversationDeleted);\r\n  //     socket.disconnect();\r\n  //   };\r\n  // }, [fetchConversations, selectedConversation]); // selectedConversation buraya eklendi\r\n\r\n  // *** YENİ: Sohbeti kalıcı olarak silme fonksiyonu\r\n  const handleDeleteConversation = async (e, conversationId) => {\r\n    e.stopPropagation(); // Butonun arkasındaki div'in tıklanmasını engelle\r\n    if (window.confirm(\"Bu sohbeti ve içindeki tüm mesajları kalıcı olarak silmek istediğinizden emin misiniz?\")) {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            await axios.delete(`http://localhost:5000/api/conversations/${conversationId}`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            // Arayüzün güncellenmesi socket.io tarafından otomatik olarak tetiklenecek\r\n        } catch (error) {\r\n            alert(error.response?.data?.message || \"Sohbet silinirken bir hata oluştu.\");\r\n        }\r\n    }\r\n  };\r\n\r\n\r\n  const refreshConversations = () => {\r\n    setIsLoading(true);\r\n    fetchConversations();\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\">Gelen Kutusu Yükleniyor...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error && conversations.length === 0) {\r\n    return (\r\n      <div className=\"error-container\">\r\n        <p>Hata: {error}</p>\r\n        <button onClick={refreshConversations}>Tekrar Dene</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"messages-page-container\">\r\n      <div className=\"conversations-sidebar\">\r\n        {/* *** YENİ: \"Panele Dön\" butonu ve yeni header düzeni *** */}\r\n        <div className=\"sidebar-header\">\r\n          <button onClick={() => navigate('/dashboard')} className=\"back-to-dashboard-btn\" title=\"Yönetim Paneline Dön\">\r\n            ‹ Panele Dön\r\n          </button>\r\n          <h2>Gelen Kutusu</h2>\r\n          <button onClick={refreshConversations} className=\"refresh-btn\" title=\"Yenile\">\r\n            🔄\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"conversations-list\">\r\n          {conversations.length === 0 ? (\r\n            <div className=\"no-conversations\">\r\n              <p>Henüz bir görüşme başlatılmamış.</p>\r\n            </div>\r\n          ) : (\r\n            conversations.map((convo) => (\r\n              <div \r\n                key={convo.conversation_id} \r\n                className={`conversation-item ${\r\n                  selectedConversation?.conversation_id === convo.conversation_id ? 'active' : ''\r\n                }`}\r\n                onClick={() => setSelectedConversation(convo)}\r\n              >\r\n                <div className=\"conversation-avatar\">\r\n                  {convo.user_name?.charAt(0).toUpperCase() || '?'}\r\n                </div>\r\n                \r\n                <div className=\"conversation-content\">\r\n                  <div className=\"conversation-header\">\r\n                    <h4>{convo.user_name || 'Bilinmeyen Kullanıcı'}</h4>\r\n                    <span className=\"conversation-time\">\r\n                      {new Date(convo.created_at).toLocaleString('tr-TR', {\r\n                        hour: '2-digit', minute: '2-digit'\r\n                      })}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className=\"vehicle-info\">\r\n                    <span className=\"vehicle-name\">{convo.brand} {convo.model}</span>\r\n                  </div>\r\n                  \r\n                  <p className=\"last-message\">{convo.message}</p>\r\n                </div>\r\n                {/* *** YENİ: Her sohbet için silme butonu *** */}\r\n                <button \r\n                    className=\"delete-conversation-btn\" \r\n                    title=\"Sohbeti Sil\"\r\n                    onClick={(e) => handleDeleteConversation(e, convo.conversation_id)}\r\n                >\r\n                    🗑️\r\n                </button>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-area\">\r\n        {selectedConversation ? (\r\n          <AdminChatBox \r\n            key={selectedConversation.conversation_id}\r\n            conversationId={selectedConversation.conversation_id}\r\n          />\r\n        ) : (\r\n          <div className=\"no-chat-selected\">\r\n            <div className=\"no-chat-content\">\r\n              <h3>Hoş Geldiniz!</h3>\r\n              <p>Mesajları görüntülemek için sol menüden bir konuşma seçin.</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessagesPage;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,oBAAoB;AAC3B,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,MAAM,QAAQ,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMmB,QAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}