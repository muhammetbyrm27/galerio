{"ast":null,"code":"// // import React, { useState } from 'react';\n// // import axios from 'axios';\n// // import './LoginPage.css';\n// // import { useNavigate } from 'react-router-dom';\n\n// // function LoginPage() {\n// //   const [formType, setFormType] = useState('login'); \n// //   const [email, setEmail] = useState('');\n// //   const [password, setPassword] = useState('');\n// //   const [error, setError] = useState('');\n// //   const [message, setMessage] = useState('');\n\n// //   const navigate = useNavigate();\n\n// //   const clearFields = () => {\n// //     setEmail('');\n// //     setPassword('');\n// //     setError('');\n// //     setMessage('');\n// //   };\n\n// //   const handleLogin = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const res = await axios.post('http://localhost:5000/api/login', { email, password });\n// //       localStorage.setItem('token', res.data.token);\n\n// //       navigate('/dashboard', { replace: true });\n\n// //     } catch (err) {\n// //       setError(err.response?.data?.message || 'Giriş hatası');\n// //     }\n// //   };\n\n// //   const handleRegister = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const res = await axios.post('http://localhost:5000/api/register', {\n// //         email,\n// //         password\n// //       });\n// //       setMessage(res.data.message);\n// //       clearFields();\n// //       setTimeout(() => {\n// //         setFormType('login');\n// //         setMessage(''); \n// //       }, 2000); \n// //     } catch (err) {\n// //       setError(err.response?.data?.message || 'Kayıt hatası');\n// //     }\n// //   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\n//         <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\n\n//         <input\n//           type=\"email\"\n//           placeholder=\"E-posta\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Şifre\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n\n//         <button type=\"submit\">\n//           {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\n//         </button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//         {message && <p className=\"success\">{message}</p>}\n\n// //         <div className=\"form-switch\">\n// //           <button\n// //             type=\"button\"\n// //             onClick={() => {\n// //               setFormType(formType === 'login' ? 'register' : 'login');\n// //               clearFields();\n// //             }}\n// //           >\n// //             {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\n// //           </button>\n// //           <button type=\"button\" onClick={() => navigate('/forgot-password')}>\n// //             Şifremi Unuttum\n// //           </button>\n// //         </div>\n// //       </form>\n// //     </div>\n// //   );\n// // }\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './LoginPage.css';\n// import { useNavigate } from 'react-router-dom';\n// import { jwtDecode } from 'jwt-decode';\n\n// function LoginPage() {\n//   const [loginMode, setLoginMode] = useState('admin');\n//   const [formType, setFormType] = useState('login'); \n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const navigate = useNavigate();\n\n//   const clearFields = () => {\n//     setEmail('');\n//     setPassword('');\n//     setError('');\n//     setMessage('');\n//   };\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/login', { email, password });\n//       const token = res.data.token;\n//       localStorage.setItem('token', token);\n\n//       const decodedToken = jwtDecode(token);\n\n//       if (decodedToken.role === 'admin') {\n//         // Yönetici ise, senin sevdiğin eski Dashboard'a gider.\n//         navigate('/dashboard', { replace: true });\n//       } else {\n//         // Kullanıcı ise, UserDashboard'a gider.\n//         navigate('/user-dashboard', { replace: true });\n//       }\n//     } catch (err) {\n//       console.error(\"Giriş hatası detayı:\", err); // Hataları konsolda görmek için\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız');\n//     }\n//   };\n\n//   const handleRegister = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/register', {\n//         email,\n//         password\n//       });\n//       setMessage(res.data.message);\n//       clearFields();\n//       setTimeout(() => {\n//         setFormType('login');\n//         setMessage(''); \n//       }, 2000); \n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Kayıt hatası');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <div className=\"login-wrapper\">\n//         <div className=\"role-tabs\">\n//           <button \n//             className={`tab-button ${loginMode === 'admin' ? 'active' : ''}`}\n//             onClick={() => setLoginMode('admin')}\n//           >\n//             Yönetici Girişi\n//           </button>\n//           <button \n//             className={`tab-button ${loginMode === 'user' ? 'active' : ''}`}\n//             onClick={() => setLoginMode('user')}\n//           >\n//             Kullanıcı Girişi\n//           </button>\n//         </div>\n//         <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\n//           <h2>{formType === 'login' ? (loginMode === 'admin' ? 'Yönetici Girişi' : 'Kullanıcı Girişi') : 'Kaydol'}</h2>\n//           <input\n//             type=\"email\"\n//             placeholder=\"E-posta Adresi\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//           <input\n//             type=\"password\"\n//             placeholder=\"Şifre\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//           <button type=\"submit\">\n//             {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\n//           </button>\n//           {error && <p className=\"error\">{error}</p>}\n//           {message && <p className=\"success\">{message}</p>}\n//           <div className=\"form-switch\">\n//             <button\n//               type=\"button\"\n//               onClick={() => {\n//                 setFormType(formType === 'login' ? 'register' : 'login');\n//                 clearFields();\n//               }}\n//             >\n//               {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\n//             </button>\n//             <button type=\"button\" onClick={() => navigate('/forgot-password')}>\n//               Şifremi Unuttum\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;\n\n// ===================================\n// src/LoginPage.js\n// ===================================\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './LoginPage.css';\n// import { useNavigate } from 'react-router-dom';\n// import { jwtDecode } from 'jwt-decode';\n\n// function LoginPage() {\n//   // Sadece hangi sekmenin aktif olduğunu tutan tek bir state\n//   const [activeTab, setActiveTab] = useState('admin'); // 'admin' veya 'user'\n\n//   // Her form için ayrı state'ler. Bu, karışıklığı önler.\n//   const [adminEmail, setAdminEmail] = useState('');\n//   const [adminPassword, setAdminPassword] = useState('');\n\n//   const [userEmail, setUserEmail] = useState('');\n//   const [userPassword, setUserPassword] = useState('');\n\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n// const [registerName, setRegisterName] = useState('');\n// const [registerEmail, setRegisterEmail] = useState('');\n// const [registerPassword, setRegisterPassword] = useState('');\n\n//   // YÖNETİCİ GİRİŞ FONKSİYONU\n//   const handleAdminLogin = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/login', { email: adminEmail, password: adminPassword });\n//       const token = res.data.token;\n//       const decodedToken = jwtDecode(token);\n\n//       // Sadece admin ise devam et, değilse hata ver.\n//       if (decodedToken.role !== 'admin') {\n//         setError('Bu alan sadece yöneticilere aittir.');\n//         return;\n//       }\n\n//       localStorage.setItem('token', token);\n//       navigate('/dashboard', { replace: true });\n\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız');\n//     }\n//   };\n// const handleRegister = async (e) => {\n//   e.preventDefault();\n//   try {\n//     // Burada kayıt için backend API çağrısı yapabilirsin\n//     const res = await axios.post('http://localhost:5000/api/register', {\n//       name: registerName,\n//       email: registerEmail,\n//       password: registerPassword,\n//     });\n//     alert('Kayıt başarılı! Giriş yapabilirsiniz.');\n//     setActiveTab('user');  // Kayıt sonrası kullanıcı giriş tabına geç\n//   } catch (err) {\n//     alert(err.response?.data?.message || 'Kayıt başarısız oldu');\n//   }\n// };\n\n//   // KULLANICI GİRİŞ FONKSİYONU\n//   const handleUserLogin = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     try {\n//       const res = await axios.post('http://localhost:5000/api/login', { email: userEmail, password: userPassword });\n//       const token = res.data.token;\n//       // Kullanıcının admin olup olmadığını kontrol etmeye gerek yok, backend zaten doğru rolü veriyor.\n//       localStorage.setItem('token', token);\n//       navigate('/home', { replace: true });\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız');\n//     }\n//   };\n\n//   const clearErrors = () => setError('');\n\n//   return (\n//     <div className=\"login-container\">\n//       <div className=\"login-wrapper\">\n//         <div className=\"role-tabs\">\n//           <button \n//             className={`tab-button ${activeTab === 'admin' ? 'active' : ''}`}\n//             onClick={() => { setActiveTab('admin'); clearErrors(); }}\n//           >\n//             Yönetici Girişi\n//           </button>\n//           <button \n//             className={`tab-button ${activeTab === 'user' ? 'active' : ''}`}\n//             onClick={() => { setActiveTab('user'); clearErrors(); }}\n//           >\n//             Kullanıcı Girişi\n//           </button>\n//         </div>\n\n//         {/* === YÖNETİCİ GİRİŞ FORMU === */}\n//         {activeTab === 'admin' && (\n//           <form className=\"login-form\" onSubmit={handleAdminLogin}>\n//             <h2>Yönetici Girişi</h2>\n//             <input\n//               type=\"email\"\n//               placeholder=\"E-posta Adresi\"\n//               value={adminEmail}\n//               onChange={(e) => setAdminEmail(e.target.value)}\n//               required\n//             />\n//             <input\n//               type=\"password\"\n//               placeholder=\"Şifre\"\n//               value={adminPassword}\n//               onChange={(e) => setAdminPassword(e.target.value)}\n//               required\n//             />\n//             <button type=\"submit\">Giriş Yap</button>\n//             {error && <p className=\"error\">{error}</p>}\n//             <div className=\"form-switch admin-switch\">\n//               {/* Yönetici formunda sadece \"Şifremi Unuttum\" var */}\n//               <span onClick={() => navigate('/forgot-password')}>Şifremi Unuttum</span>\n//             </div>\n//           </form>\n//         )}\n\n//         {/* === KULLANICI GİRİŞ FORMU === */}\n//         {activeTab === 'user' && (\n//           <form className=\"login-form\" onSubmit={handleUserLogin}>\n//             <h2>Kullanıcı Girişi</h2>\n//             <input\n//               type=\"email\"\n//               placeholder=\"E-posta Adresi\"\n//               value={userEmail}\n//               onChange={(e) => setUserEmail(e.target.value)}\n//               required\n//             />\n//             <input\n//               type=\"password\"\n//               placeholder=\"Şifre\"\n//               value={userPassword}\n//               onChange={(e) => setUserPassword(e.target.value)}\n//               required\n//             />\n//             <button type=\"submit\">Giriş Yap</button>\n//             {error && <p className=\"error\">{error}</p>}\n//             {/* Kullanıcı formunda hepsi var */}\n//             <div className=\"form-switch\">\n//               <button type=\"button\" onClick={() => navigate('/register')}>\n//   Kaydol\n// </button>\n//               <button type=\"button\" onClick={() => navigate('/forgot-password')}>\n//                 Şifremi Unuttum\n//               </button>\n//             </div>\n//           </form>\n\n//         )}\n//         {activeTab === 'register' && (\n//   <form className=\"login-form\" onSubmit={handleRegister}>\n//     <h2>Kayıt Ol</h2>\n//     <input\n//       type=\"text\"\n//       placeholder=\"Ad Soyad\"\n//       value={registerName}\n//       onChange={(e) => setRegisterName(e.target.value)}\n//       required\n//     />\n//     <input\n//       type=\"email\"\n//       placeholder=\"E-posta Adresi\"\n//       value={registerEmail}\n//       onChange={(e) => setRegisterEmail(e.target.value)}\n//       required\n//     />\n//     <input\n//       type=\"password\"\n//       placeholder=\"Şifre\"\n//       value={registerPassword}\n//       onChange={(e) => setRegisterPassword(e.target.value)}\n//       required\n//     />\n//     <button type=\"submit\">Kaydol</button>\n//   </form>\n// )}\n\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;","map":{"version":3,"names":[],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/LoginPage.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import './LoginPage.css';\r\n// // import { useNavigate } from 'react-router-dom';\r\n\r\n// // function LoginPage() {\r\n// //   const [formType, setFormType] = useState('login'); \r\n// //   const [email, setEmail] = useState('');\r\n// //   const [password, setPassword] = useState('');\r\n// //   const [error, setError] = useState('');\r\n// //   const [message, setMessage] = useState('');\r\n  \r\n// //   const navigate = useNavigate();\r\n\r\n// //   const clearFields = () => {\r\n// //     setEmail('');\r\n// //     setPassword('');\r\n// //     setError('');\r\n// //     setMessage('');\r\n// //   };\r\n\r\n// //   const handleLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       const res = await axios.post('http://localhost:5000/api/login', { email, password });\r\n// //       localStorage.setItem('token', res.data.token);\r\n      \r\n// //       navigate('/dashboard', { replace: true });\r\n\r\n// //     } catch (err) {\r\n// //       setError(err.response?.data?.message || 'Giriş hatası');\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleRegister = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       const res = await axios.post('http://localhost:5000/api/register', {\r\n// //         email,\r\n// //         password\r\n// //       });\r\n// //       setMessage(res.data.message);\r\n// //       clearFields();\r\n// //       setTimeout(() => {\r\n// //         setFormType('login');\r\n// //         setMessage(''); \r\n// //       }, 2000); \r\n// //     } catch (err) {\r\n// //       setError(err.response?.data?.message || 'Kayıt hatası');\r\n// //     }\r\n// //   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\r\n//         <h2>{formType === 'login' ? 'Giriş Yap' : 'Kaydol'}</h2>\r\n\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"E-posta\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Şifre\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//         />\r\n        \r\n//         <button type=\"submit\">\r\n//           {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\r\n//         </button>\r\n\r\n//         {error && <p className=\"error\">{error}</p>}\r\n//         {message && <p className=\"success\">{message}</p>}\r\n\r\n// //         <div className=\"form-switch\">\r\n// //           <button\r\n// //             type=\"button\"\r\n// //             onClick={() => {\r\n// //               setFormType(formType === 'login' ? 'register' : 'login');\r\n// //               clearFields();\r\n// //             }}\r\n// //           >\r\n// //             {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\r\n// //           </button>\r\n// //           <button type=\"button\" onClick={() => navigate('/forgot-password')}>\r\n// //             Şifremi Unuttum\r\n// //           </button>\r\n// //         </div>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './LoginPage.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { jwtDecode } from 'jwt-decode';\r\n\r\n// function LoginPage() {\r\n//   const [loginMode, setLoginMode] = useState('admin');\r\n//   const [formType, setFormType] = useState('login'); \r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n  \r\n//   const navigate = useNavigate();\r\n\r\n//   const clearFields = () => {\r\n//     setEmail('');\r\n//     setPassword('');\r\n//     setError('');\r\n//     setMessage('');\r\n//   };\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/login', { email, password });\r\n//       const token = res.data.token;\r\n//       localStorage.setItem('token', token);\r\n      \r\n//       const decodedToken = jwtDecode(token);\r\n      \r\n//       if (decodedToken.role === 'admin') {\r\n//         // Yönetici ise, senin sevdiğin eski Dashboard'a gider.\r\n//         navigate('/dashboard', { replace: true });\r\n//       } else {\r\n//         // Kullanıcı ise, UserDashboard'a gider.\r\n//         navigate('/user-dashboard', { replace: true });\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Giriş hatası detayı:\", err); // Hataları konsolda görmek için\r\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız');\r\n//     }\r\n//   };\r\n\r\n//   const handleRegister = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/register', {\r\n//         email,\r\n//         password\r\n//       });\r\n//       setMessage(res.data.message);\r\n//       clearFields();\r\n//       setTimeout(() => {\r\n//         setFormType('login');\r\n//         setMessage(''); \r\n//       }, 2000); \r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Kayıt hatası');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <div className=\"login-wrapper\">\r\n//         <div className=\"role-tabs\">\r\n//           <button \r\n//             className={`tab-button ${loginMode === 'admin' ? 'active' : ''}`}\r\n//             onClick={() => setLoginMode('admin')}\r\n//           >\r\n//             Yönetici Girişi\r\n//           </button>\r\n//           <button \r\n//             className={`tab-button ${loginMode === 'user' ? 'active' : ''}`}\r\n//             onClick={() => setLoginMode('user')}\r\n//           >\r\n//             Kullanıcı Girişi\r\n//           </button>\r\n//         </div>\r\n//         <form className=\"login-form\" onSubmit={formType === 'login' ? handleLogin : handleRegister}>\r\n//           <h2>{formType === 'login' ? (loginMode === 'admin' ? 'Yönetici Girişi' : 'Kullanıcı Girişi') : 'Kaydol'}</h2>\r\n//           <input\r\n//             type=\"email\"\r\n//             placeholder=\"E-posta Adresi\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//             required\r\n//           />\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Şifre\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             required\r\n//           />\r\n//           <button type=\"submit\">\r\n//             {formType === 'login' ? 'Giriş Yap' : 'Kaydol'}\r\n//           </button>\r\n//           {error && <p className=\"error\">{error}</p>}\r\n//           {message && <p className=\"success\">{message}</p>}\r\n//           <div className=\"form-switch\">\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={() => {\r\n//                 setFormType(formType === 'login' ? 'register' : 'login');\r\n//                 clearFields();\r\n//               }}\r\n//             >\r\n//               {formType === 'login' ? 'Kaydol' : 'Giriş Yap'}\r\n//             </button>\r\n//             <button type=\"button\" onClick={() => navigate('/forgot-password')}>\r\n//               Şifremi Unuttum\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LoginPage;\r\n\r\n// ===================================\r\n// src/LoginPage.js\r\n// ===================================\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './LoginPage.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { jwtDecode } from 'jwt-decode';\r\n\r\n// function LoginPage() {\r\n//   // Sadece hangi sekmenin aktif olduğunu tutan tek bir state\r\n//   const [activeTab, setActiveTab] = useState('admin'); // 'admin' veya 'user'\r\n\r\n//   // Her form için ayrı state'ler. Bu, karışıklığı önler.\r\n//   const [adminEmail, setAdminEmail] = useState('');\r\n//   const [adminPassword, setAdminPassword] = useState('');\r\n  \r\n//   const [userEmail, setUserEmail] = useState('');\r\n//   const [userPassword, setUserPassword] = useState('');\r\n\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n// const [registerName, setRegisterName] = useState('');\r\n// const [registerEmail, setRegisterEmail] = useState('');\r\n// const [registerPassword, setRegisterPassword] = useState('');\r\n\r\n//   // YÖNETİCİ GİRİŞ FONKSİYONU\r\n//   const handleAdminLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/login', { email: adminEmail, password: adminPassword });\r\n//       const token = res.data.token;\r\n//       const decodedToken = jwtDecode(token);\r\n\r\n//       // Sadece admin ise devam et, değilse hata ver.\r\n//       if (decodedToken.role !== 'admin') {\r\n//         setError('Bu alan sadece yöneticilere aittir.');\r\n//         return;\r\n//       }\r\n\r\n//       localStorage.setItem('token', token);\r\n//       navigate('/dashboard', { replace: true });\r\n\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız');\r\n//     }\r\n//   };\r\n// const handleRegister = async (e) => {\r\n//   e.preventDefault();\r\n//   try {\r\n//     // Burada kayıt için backend API çağrısı yapabilirsin\r\n//     const res = await axios.post('http://localhost:5000/api/register', {\r\n//       name: registerName,\r\n//       email: registerEmail,\r\n//       password: registerPassword,\r\n//     });\r\n//     alert('Kayıt başarılı! Giriş yapabilirsiniz.');\r\n//     setActiveTab('user');  // Kayıt sonrası kullanıcı giriş tabına geç\r\n//   } catch (err) {\r\n//     alert(err.response?.data?.message || 'Kayıt başarısız oldu');\r\n//   }\r\n// };\r\n\r\n//   // KULLANICI GİRİŞ FONKSİYONU\r\n//   const handleUserLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/login', { email: userEmail, password: userPassword });\r\n//       const token = res.data.token;\r\n//       // Kullanıcının admin olup olmadığını kontrol etmeye gerek yok, backend zaten doğru rolü veriyor.\r\n//       localStorage.setItem('token', token);\r\n//       navigate('/home', { replace: true });\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Giriş işlemi başarısız');\r\n//     }\r\n//   };\r\n\r\n//   const clearErrors = () => setError('');\r\n  \r\n\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <div className=\"login-wrapper\">\r\n//         <div className=\"role-tabs\">\r\n//           <button \r\n//             className={`tab-button ${activeTab === 'admin' ? 'active' : ''}`}\r\n//             onClick={() => { setActiveTab('admin'); clearErrors(); }}\r\n//           >\r\n//             Yönetici Girişi\r\n//           </button>\r\n//           <button \r\n//             className={`tab-button ${activeTab === 'user' ? 'active' : ''}`}\r\n//             onClick={() => { setActiveTab('user'); clearErrors(); }}\r\n//           >\r\n//             Kullanıcı Girişi\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* === YÖNETİCİ GİRİŞ FORMU === */}\r\n//         {activeTab === 'admin' && (\r\n//           <form className=\"login-form\" onSubmit={handleAdminLogin}>\r\n//             <h2>Yönetici Girişi</h2>\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"E-posta Adresi\"\r\n//               value={adminEmail}\r\n//               onChange={(e) => setAdminEmail(e.target.value)}\r\n//               required\r\n//             />\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Şifre\"\r\n//               value={adminPassword}\r\n//               onChange={(e) => setAdminPassword(e.target.value)}\r\n//               required\r\n//             />\r\n//             <button type=\"submit\">Giriş Yap</button>\r\n//             {error && <p className=\"error\">{error}</p>}\r\n//             <div className=\"form-switch admin-switch\">\r\n//               {/* Yönetici formunda sadece \"Şifremi Unuttum\" var */}\r\n//               <span onClick={() => navigate('/forgot-password')}>Şifremi Unuttum</span>\r\n//             </div>\r\n//           </form>\r\n//         )}\r\n\r\n//         {/* === KULLANICI GİRİŞ FORMU === */}\r\n//         {activeTab === 'user' && (\r\n//           <form className=\"login-form\" onSubmit={handleUserLogin}>\r\n//             <h2>Kullanıcı Girişi</h2>\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"E-posta Adresi\"\r\n//               value={userEmail}\r\n//               onChange={(e) => setUserEmail(e.target.value)}\r\n//               required\r\n//             />\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Şifre\"\r\n//               value={userPassword}\r\n//               onChange={(e) => setUserPassword(e.target.value)}\r\n//               required\r\n//             />\r\n//             <button type=\"submit\">Giriş Yap</button>\r\n//             {error && <p className=\"error\">{error}</p>}\r\n//             {/* Kullanıcı formunda hepsi var */}\r\n//             <div className=\"form-switch\">\r\n//               <button type=\"button\" onClick={() => navigate('/register')}>\r\n//   Kaydol\r\n// </button>\r\n//               <button type=\"button\" onClick={() => navigate('/forgot-password')}>\r\n//                 Şifremi Unuttum\r\n//               </button>\r\n//             </div>\r\n//           </form>\r\n          \r\n//         )}\r\n//         {activeTab === 'register' && (\r\n//   <form className=\"login-form\" onSubmit={handleRegister}>\r\n//     <h2>Kayıt Ol</h2>\r\n//     <input\r\n//       type=\"text\"\r\n//       placeholder=\"Ad Soyad\"\r\n//       value={registerName}\r\n//       onChange={(e) => setRegisterName(e.target.value)}\r\n//       required\r\n//     />\r\n//     <input\r\n//       type=\"email\"\r\n//       placeholder=\"E-posta Adresi\"\r\n//       value={registerEmail}\r\n//       onChange={(e) => setRegisterEmail(e.target.value)}\r\n//       required\r\n//     />\r\n//     <input\r\n//       type=\"password\"\r\n//       placeholder=\"Şifre\"\r\n//       value={registerPassword}\r\n//       onChange={(e) => setRegisterPassword(e.target.value)}\r\n//       required\r\n//     />\r\n//     <button type=\"submit\">Kaydol</button>\r\n//   </form>\r\n// )}\r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LoginPage;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}