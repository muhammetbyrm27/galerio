{"ast":null,"code":"// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import './App.css';\n// import { jwtDecode } from 'jwt-decode'; // *** YENİ: Token'ı okumak için eklendi\n// import { socket } from './socket';     // *** YENİ: Merkezi socket import edildi\n\n// // KORUYUCULAR (Mevcut importlarınız korundu)\n// import ProtectedRoute from './ProtectedRoute'; \n// import AdminProtectedRoute from './AdminProtectedRoute'; \n\n// // SAYFALAR (Mevcut importlarınız korundu)\n// import LoginPage from './LoginPage';\n// import ForgotPasswordPage from './ForgotPasswordPage';\n// import HomePage from './HomePage';\n// import Dashboard from './Dashboard';\n// import VehiclesPage from './VehiclesPage';\n// import PersonnelPage from './PersonnelPage';\n// import CreditCalculatorPage from './CreditCalculatorPage';\n// import MarketValuePage from './MarketValuePage';\n// import MessagesPage from './MessagesPage';\n\n// function App() {\n\n//   // *** YENİ: SESLİ BİLDİRİM VE GENEL SOCKET YÖNETİMİ ***\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     let userRole = null;\n\n//     // Token varsa içini açıp kullanıcının rolünü al\n//     if (token) {\n//       try {\n//         userRole = jwtDecode(token).role;\n//       } catch (error) {\n//         console.error(\"App.js içinde geçersiz token:\", error);\n//       }\n//     }\n\n//     // Bu mantık SADECE GİRİŞ YAPAN KİŞİ ADMİN İSE çalışır\n//     if (userRole === 'admin') {\n//       socket.connect(); // Socket bağlantısını başlat\n\n//       // Yeni mesaj geldiğinde sesi çalacak fonksiyon\n//       const playNotificationSound = () => {\n//         // Ses dosyasının public klasöründe olduğundan emin olun\n//         const audio = new Audio('/notification.mp3'); \n//         audio.play().catch(error => console.log(\"Tarayıcı, kullanıcı etkileşimi olmadan sesi engelledi:\", error));\n//       };\n\n//       // Backend'den 'admin_new_message_notification' sinyali geldiğinde sesi çal\n//       socket.on('admin_new_message_notification', playNotificationSound);\n\n//       // Temizlik fonksiyonu: Component DOM'dan kaldırıldığında (veya kullanıcı değiştiğinde) çalışır\n//       return () => {\n//         socket.off('admin_new_message_notification', playNotificationSound);\n//         socket.disconnect();\n//       };\n//     }\n//   }, []); // Köşeli parantezlerin boş olması, bu kodun sadece bir kere (uygulama ilk yüklendiğinde) çalışmasını sağlar.\n\n//   return (\n//     <Router>\n//       <Routes>\n//         {/* ======================================= */}\n//         {/*      HERKESE AÇIK ROTALAR               */}\n//         {/* ======================================= */}\n//         <Route path=\"/\" element={<LoginPage />} />\n//         <Route path=\"/forgot-password\" element={<ForgotPasswordPage />} />\n\n//         {/* ======================================= */}\n//         {/*      NORMAL KULLANICIYA ÖZEL ROTA       */}\n//         {/* ======================================= */}\n//         <Route \n//           path=\"/home\" \n//           element={<ProtectedRoute><HomePage /></ProtectedRoute>} \n//         />\n\n//         {/* ======================================= */}\n//         {/*      YÖNETİCİYE ÖZEL ROTALAR            */}\n//         {/* ======================================= */}\n//         <Route \n//           path=\"/dashboard\" \n//           element={<AdminProtectedRoute><Dashboard /></AdminProtectedRoute>} \n//         />\n//         <Route \n//           path=\"/admin/vehicles\" \n//           element={<AdminProtectedRoute><VehiclesPage /></AdminProtectedRoute>} \n//         />\n//         <Route \n//           path=\"/admin/personnel\" \n//           element={<AdminProtectedRoute><PersonnelPage /></AdminProtectedRoute>} \n//         />\n//         <Route \n//           path=\"/admin/kredi\"\n//           element={<AdminProtectedRoute><CreditCalculatorPage /></AdminProtectedRoute>} \n//         />\n//         <Route \n//           path=\"/admin/piyasa\" \n//           element={<AdminProtectedRoute><MarketValuePage /></AdminProtectedRoute>} \n//         />\n//         <Route \n//           path=\"/admin/messages\" \n//           element={<AdminProtectedRoute><MessagesPage /></AdminProtectedRoute>} \n//         />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/Muhammet/Desktop/galerio-app/client/src/App.js"],"sourcesContent":["// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import './App.css';\n// import { jwtDecode } from 'jwt-decode'; // *** YENİ: Token'ı okumak için eklendi\n// import { socket } from './socket';     // *** YENİ: Merkezi socket import edildi\n\n// // KORUYUCULAR (Mevcut importlarınız korundu)\n// import ProtectedRoute from './ProtectedRoute'; \n// import AdminProtectedRoute from './AdminProtectedRoute'; \n\n// // SAYFALAR (Mevcut importlarınız korundu)\n// import LoginPage from './LoginPage';\n// import ForgotPasswordPage from './ForgotPasswordPage';\n// import HomePage from './HomePage';\n// import Dashboard from './Dashboard';\n// import VehiclesPage from './VehiclesPage';\n// import PersonnelPage from './PersonnelPage';\n// import CreditCalculatorPage from './CreditCalculatorPage';\n// import MarketValuePage from './MarketValuePage';\n// import MessagesPage from './MessagesPage';\n\n// function App() {\n\n//   // *** YENİ: SESLİ BİLDİRİM VE GENEL SOCKET YÖNETİMİ ***\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     let userRole = null;\n\n//     // Token varsa içini açıp kullanıcının rolünü al\n//     if (token) {\n//       try {\n//         userRole = jwtDecode(token).role;\n//       } catch (error) {\n//         console.error(\"App.js içinde geçersiz token:\", error);\n//       }\n//     }\n\n//     // Bu mantık SADECE GİRİŞ YAPAN KİŞİ ADMİN İSE çalışır\n//     if (userRole === 'admin') {\n//       socket.connect(); // Socket bağlantısını başlat\n\n//       // Yeni mesaj geldiğinde sesi çalacak fonksiyon\n//       const playNotificationSound = () => {\n//         // Ses dosyasının public klasöründe olduğundan emin olun\n//         const audio = new Audio('/notification.mp3'); \n//         audio.play().catch(error => console.log(\"Tarayıcı, kullanıcı etkileşimi olmadan sesi engelledi:\", error));\n//       };\n      \n//       // Backend'den 'admin_new_message_notification' sinyali geldiğinde sesi çal\n//       socket.on('admin_new_message_notification', playNotificationSound);\n\n//       // Temizlik fonksiyonu: Component DOM'dan kaldırıldığında (veya kullanıcı değiştiğinde) çalışır\n//       return () => {\n//         socket.off('admin_new_message_notification', playNotificationSound);\n//         socket.disconnect();\n//       };\n//     }\n//   }, []); // Köşeli parantezlerin boş olması, bu kodun sadece bir kere (uygulama ilk yüklendiğinde) çalışmasını sağlar.\n\n//   return (\n//     <Router>\n//       <Routes>\n//         {/* ======================================= */}\n//         {/*      HERKESE AÇIK ROTALAR               */}\n//         {/* ======================================= */}\n//         <Route path=\"/\" element={<LoginPage />} />\n//         <Route path=\"/forgot-password\" element={<ForgotPasswordPage />} />\n\n//         {/* ======================================= */}\n//         {/*      NORMAL KULLANICIYA ÖZEL ROTA       */}\n//         {/* ======================================= */}\n//         <Route \n//           path=\"/home\" \n//           element={<ProtectedRoute><HomePage /></ProtectedRoute>} \n//         />\n        \n//         {/* ======================================= */}\n//         {/*      YÖNETİCİYE ÖZEL ROTALAR            */}\n//         {/* ======================================= */}\n//         <Route \n//           path=\"/dashboard\" \n//           element={<AdminProtectedRoute><Dashboard /></AdminProtectedRoute>} \n//         />\n//         <Route \n//           path=\"/admin/vehicles\" \n//           element={<AdminProtectedRoute><VehiclesPage /></AdminProtectedRoute>} \n//         />\n//         <Route \n//           path=\"/admin/personnel\" \n//           element={<AdminProtectedRoute><PersonnelPage /></AdminProtectedRoute>} \n//         />\n//         <Route \n//           path=\"/admin/kredi\"\n//           element={<AdminProtectedRoute><CreditCalculatorPage /></AdminProtectedRoute>} \n//         />\n//         <Route \n//           path=\"/admin/piyasa\" \n//           element={<AdminProtectedRoute><MarketValuePage /></AdminProtectedRoute>} \n//         />\n//         <Route \n//           path=\"/admin/messages\" \n//           element={<AdminProtectedRoute><MessagesPage /></AdminProtectedRoute>} \n//         />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}